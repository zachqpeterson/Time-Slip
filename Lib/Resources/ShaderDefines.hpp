#pragma once

#include "Defines.hpp"

#include "Containers\String.hpp"
#include "Containers\Hashmap.hpp"
#include "Containers\Vector.hpp"
#include "Containers\Stack.hpp"
#include "Containers\Pair.hpp"
#include "Core\DataReader.hpp"

#if 0
static inline constexpr I32 PACT_INF = -833;
static inline constexpr I32 TABLE_INF = -579;
static inline constexpr I32 FINAL_STATE = 451;
static inline constexpr I32 LAST_INDEX = 12669;
static inline constexpr I32 TOKEN_COUNT = 464;
static inline constexpr I32 NONTERMINAL_COUNT = 132;
static inline constexpr I32 RULE_COUNT = 697;
static inline constexpr I32 STATE_COUNT = 943;
static inline constexpr I32 MAX_TOKEN = 718;

enum BasicType
{
	BASIC_TYPE_VOID,
	BASIC_TYPE_FLOAT,
	BASIC_TYPE_DOUBLE,
	BASIC_TYPE_FLOAT16,
	BASIC_TYPE_INT8,
	BASIC_TYPE_UINT8,
	BASIC_TYPE_INT16,
	BASIC_TYPE_UINT16,
	BASIC_TYPE_INT,
	BASIC_TYPE_UINT,
	BASIC_TYPE_INT64,
	BASIC_TYPE_UINT64,
	BASIC_TYPE_BOOL,
	BASIC_TYPE_ATOMIC_UINT,
	BASIC_TYPE_SAMPLER,
	BASIC_TYPE_STRUCT,
	BASIC_TYPE_BLOCK,
	BASIC_TYPE_ACCELERATION_STRUCT,
	BASIC_TYPE_REFERENCE,
	BASIC_TYPE_RAY_QUERY,
	BASIC_TYPE_HIT_OBJECT_NV,
	BASIC_TYPE_SPIRV,

	BASIC_TYPE_COUNT
};

enum StorageQualifier
{
	STORAGE_QUALIFIER_TEMPORARY,     // For temporaries (within a function), read/write
	STORAGE_QUALIFIER_GLOBAL,        // For globals read/write
	STORAGE_QUALIFIER_CONST,         // User-defined constant values, will be semantically constant and constant folded
	STORAGE_QUALIFIER_VARYING_In,     // pipeline input, read only, also supercategory for all built-ins not included in this enum (see TBuiltInVariable)
	STORAGE_QUALIFIER_VARYING_OUT,    // pipeline output, read/write, also supercategory for all built-ins not included in this enum (see TBuiltInVariable)
	STORAGE_QUALIFIER_UNIFORM,       // read only, shared with app
	STORAGE_QUALIFIER_BUFFER,        // read/write, shared with app
	STORAGE_QUALIFIER_SHARED,        // compute shader's read/write 'shared' qualifier
	STORAGE_QUALIFIER_SPIRV_STORAGE_CLASS, // spirv_storage_class

	STORAGE_QUALIFIER_PAYLOAD,
	STORAGE_QUALIFIER_PAYLOAD_IN,
	STORAGE_QUALIFIER_HIT_ATTRIBUTE,
	STORAGE_QUALIFIER_CALLABLE_DATA,
	STORAGE_QUALIFIER_CALLABLE_DATA_IN,
	STORAGE_QUALIFIER_HIT_OBJECT_ATTRIBUTE_NV,

	STORAGE_QUALIFIER_TASK_PAYLOAD_SHARED_EXT,

	// parameters
	STORAGE_QUALIFIER_IN,            // also, for 'in' in the grammar before we know if it's a pipeline input or an 'in' parameter
	STORAGE_QUALIFIER_OUT,           // also, for 'out' in the grammar before we know if it's a pipeline output or an 'out' parameter
	STORAGE_QUALIFIER_IN_OUT,
	STORAGE_QUALIFIER_CONST_READONLY, // input; also other read-only types having neither a constant value nor constant-value semantics

	// built-ins read by vertex shader
	STORAGE_QUALIFIER_VERTEX_ID,
	STORAGE_QUALIFIER_INSTANCE_ID,

	// built-ins written by vertex shader
	STORAGE_QUALIFIER_POSITION,
	STORAGE_QUALIFIER_PONIT_SIZE,
	STORAGE_QUALIFIER_CLIP_VERTEX,

	// built-ins read by fragment shader
	STORAGE_QUALIFIER_FACE,
	STORAGE_QUALIFIER_FRAG_COORD,
	STORAGE_QUALIFIER_POINT_COORD,

	// built-ins written by fragment shader
	STORAGE_QUALIFIER_FRAG_COLOR,
	STORAGE_QUALIFIER_FRAG_DEPTH,
	STORAGE_QUALIFIER_FRAG_STENCIL,

	STORAGE_QUALIFIER_TILE_IMAGE_EXT,

	STORAGE_QUALIFIER_COUNT
};

enum BuiltInVariableType
{
	BUILT_IN_VARIABLE_None,
	BUILT_IN_VARIABLE_NumWorkGroups,
	BUILT_IN_VARIABLE_WorkGroupSize,
	BUILT_IN_VARIABLE_WorkGroupId,
	BUILT_IN_VARIABLE_LocalInvocationId,
	BUILT_IN_VARIABLE_GlobalInvocationId,
	BUILT_IN_VARIABLE_LocalInvocationIndex,
	BUILT_IN_VARIABLE_NumSubgroups,
	BUILT_IN_VARIABLE_SubgroupID,
	BUILT_IN_VARIABLE_SubGroupSize,
	BUILT_IN_VARIABLE_SubGroupInvocation,
	BUILT_IN_VARIABLE_SubGroupEqMask,
	BUILT_IN_VARIABLE_SubGroupGeMask,
	BUILT_IN_VARIABLE_SubGroupGtMask,
	BUILT_IN_VARIABLE_SubGroupLeMask,
	BUILT_IN_VARIABLE_SubGroupLtMask,
	BUILT_IN_VARIABLE_SubgroupSize2,
	BUILT_IN_VARIABLE_SubgroupInvocation2,
	BUILT_IN_VARIABLE_SubgroupEqMask2,
	BUILT_IN_VARIABLE_SubgroupGeMask2,
	BUILT_IN_VARIABLE_SubgroupGtMask2,
	BUILT_IN_VARIABLE_SubgroupLeMask2,
	BUILT_IN_VARIABLE_SubgroupLtMask2,
	BUILT_IN_VARIABLE_VertexId,
	BUILT_IN_VARIABLE_InstanceId,
	BUILT_IN_VARIABLE_VertexIndex,
	BUILT_IN_VARIABLE_InstanceIndex,
	BUILT_IN_VARIABLE_BaseVertex,
	BUILT_IN_VARIABLE_BaseInstance,
	BUILT_IN_VARIABLE_DrawId,
	BUILT_IN_VARIABLE_Position,
	BUILT_IN_VARIABLE_PointSize,
	BUILT_IN_VARIABLE_ClipVertex,
	BUILT_IN_VARIABLE_ClipDistance,
	BUILT_IN_VARIABLE_CullDistance,
	BUILT_IN_VARIABLE_Normal,
	BUILT_IN_VARIABLE_Vertex,
	BUILT_IN_VARIABLE_MultiTexCoord0,
	BUILT_IN_VARIABLE_MultiTexCoord1,
	BUILT_IN_VARIABLE_MultiTexCoord2,
	BUILT_IN_VARIABLE_MultiTexCoord3,
	BUILT_IN_VARIABLE_MultiTexCoord4,
	BUILT_IN_VARIABLE_MultiTexCoord5,
	BUILT_IN_VARIABLE_MultiTexCoord6,
	BUILT_IN_VARIABLE_MultiTexCoord7,
	BUILT_IN_VARIABLE_FrontColor,
	BUILT_IN_VARIABLE_BackColor,
	BUILT_IN_VARIABLE_FrontSecondaryColor,
	BUILT_IN_VARIABLE_BackSecondaryColor,
	BUILT_IN_VARIABLE_TexCoord,
	BUILT_IN_VARIABLE_FogFragCoord,
	BUILT_IN_VARIABLE_InvocationId,
	BUILT_IN_VARIABLE_PrimitiveId,
	BUILT_IN_VARIABLE_Layer,
	BUILT_IN_VARIABLE_ViewportIndex,
	BUILT_IN_VARIABLE_PatchVertices,
	BUILT_IN_VARIABLE_TessLevelOuter,
	BUILT_IN_VARIABLE_TessLevelInner,
	BUILT_IN_VARIABLE_BoundingBox,
	BUILT_IN_VARIABLE_TessCoord,
	BUILT_IN_VARIABLE_Color,
	BUILT_IN_VARIABLE_SecondaryColor,
	BUILT_IN_VARIABLE_Face,
	BUILT_IN_VARIABLE_FragCoord,
	BUILT_IN_VARIABLE_PointCoord,
	BUILT_IN_VARIABLE_FragColor,
	BUILT_IN_VARIABLE_FragData,
	BUILT_IN_VARIABLE_FragDepth,
	BUILT_IN_VARIABLE_FragStencilRef,
	BUILT_IN_VARIABLE_SampleId,
	BUILT_IN_VARIABLE_SamplePosition,
	BUILT_IN_VARIABLE_SampleMask,
	BUILT_IN_VARIABLE_HelperInvocation,

	BUILT_IN_VARIABLE_BaryCoordNoPersp,
	BUILT_IN_VARIABLE_BaryCoordNoPerspCentroid,
	BUILT_IN_VARIABLE_BaryCoordNoPerspSample,
	BUILT_IN_VARIABLE_BaryCoordSmooth,
	BUILT_IN_VARIABLE_BaryCoordSmoothCentroid,
	BUILT_IN_VARIABLE_BaryCoordSmoothSample,
	BUILT_IN_VARIABLE_BaryCoordPullModel,

	BUILT_IN_VARIABLE_ViewIndex,
	BUILT_IN_VARIABLE_DeviceIndex,

	BUILT_IN_VARIABLE_ShadingRateKHR,
	BUILT_IN_VARIABLE_PrimitiveShadingRateKHR,

	BUILT_IN_VARIABLE_FragSizeEXT,
	BUILT_IN_VARIABLE_FragInvocationCountEXT,

	BUILT_IN_VARIABLE_SecondaryFragDataEXT,
	BUILT_IN_VARIABLE_SecondaryFragColorEXT,

	BUILT_IN_VARIABLE_ViewportMaskNV,
	BUILT_IN_VARIABLE_SecondaryPositionNV,
	BUILT_IN_VARIABLE_SecondaryViewportMaskNV,
	BUILT_IN_VARIABLE_PositionPerViewNV,
	BUILT_IN_VARIABLE_ViewportMaskPerViewNV,
	BUILT_IN_VARIABLE_FragFullyCoveredNV,
	BUILT_IN_VARIABLE_FragmentSizeNV,
	BUILT_IN_VARIABLE_InvocationsPerPixelNV,
	// ray tracing
	BUILT_IN_VARIABLE_LaunchId,
	BUILT_IN_VARIABLE_LaunchSize,
	BUILT_IN_VARIABLE_InstanceCustomIndex,
	BUILT_IN_VARIABLE_GeometryIndex,
	BUILT_IN_VARIABLE_WorldRayOrigin,
	BUILT_IN_VARIABLE_WorldRayDirection,
	BUILT_IN_VARIABLE_ObjectRayOrigin,
	BUILT_IN_VARIABLE_ObjectRayDirection,
	BUILT_IN_VARIABLE_RayTmin,
	BUILT_IN_VARIABLE_RayTmax,
	BUILT_IN_VARIABLE_CullMask,
	BUILT_IN_VARIABLE_HitT,
	BUILT_IN_VARIABLE_HitKind,
	BUILT_IN_VARIABLE_ObjectToWorld,
	BUILT_IN_VARIABLE_ObjectToWorld3x4,
	BUILT_IN_VARIABLE_WorldToObject,
	BUILT_IN_VARIABLE_WorldToObject3x4,
	BUILT_IN_VARIABLE_IncomingRayFlags,
	BUILT_IN_VARIABLE_CurrentRayTimeNV,
	// barycentrics
	BUILT_IN_VARIABLE_BaryCoordNV,
	BUILT_IN_VARIABLE_BaryCoordNoPerspNV,
	BUILT_IN_VARIABLE_BaryCoordEXT,
	BUILT_IN_VARIABLE_BaryCoordNoPerspEXT,
	// mesh shaders
	BUILT_IN_VARIABLE_TaskCountNV,
	BUILT_IN_VARIABLE_PrimitiveCountNV,
	BUILT_IN_VARIABLE_PrimitiveIndicesNV,
	BUILT_IN_VARIABLE_ClipDistancePerViewNV,
	BUILT_IN_VARIABLE_CullDistancePerViewNV,
	BUILT_IN_VARIABLE_LayerPerViewNV,
	BUILT_IN_VARIABLE_MeshViewCountNV,
	BUILT_IN_VARIABLE_MeshViewIndicesNV,
	//GL_EXT_mesh_shader
	BUILT_IN_VARIABLE_PrimitivePointIndicesEXT,
	BUILT_IN_VARIABLE_PrimitiveLineIndicesEXT,
	BUILT_IN_VARIABLE_PrimitiveTriangleIndicesEXT,
	BUILT_IN_VARIABLE_CullPrimitiveEXT,

	// sm builtins
	BUILT_IN_VARIABLE_WarpsPerSM,
	BUILT_IN_VARIABLE_SMCount,
	BUILT_IN_VARIABLE_WarpID,
	BUILT_IN_VARIABLE_SMID,

	// HLSL built-ins that live only temporarily, until they get remapped
	// to one of the above.
	BUILT_IN_VARIABLE_FragDepthGreater,
	BUILT_IN_VARIABLE_FragDepthLesser,
	BUILT_IN_VARIABLE_GsOutputStream,
	BUILT_IN_VARIABLE_OutputPatch,
	BUILT_IN_VARIABLE_InputPatch,

	// structbuffer types
	BUILT_IN_VARIABLE_AppendConsume, // no need to differentiate append and consume
	BUILT_IN_VARIABLE_RWStructuredBuffer,
	BUILT_IN_VARIABLE_StructuredBuffer,
	BUILT_IN_VARIABLE_ByteAddressBuffer,
	BUILT_IN_VARIABLE_RWByteAddressBuffer,

	// ARM specific core builtins
	BUILT_IN_VARIABLE_CoreCountARM,
	BUILT_IN_VARIABLE_CoreIDARM,
	BUILT_IN_VARIABLE_CoreMaxIDARM,
	BUILT_IN_VARIABLE_WarpIDARM,
	BUILT_IN_VARIABLE_WarpMaxIDARM,

	BUILT_IN_VARIABLE_PositionFetch,

	BUILT_IN_VARIABLE_COUNT
};

enum PrecisionQualifier
{
	PRECISION_QUALIFIER_NONE,
	PRECISION_QUALIFIER_LOW,
	PRECISION_QUALIFIER_MEDIUM,
	PRECISION_QUALIFIER_HIGH
};

enum LayoutPackingType
{
	LAYOUT_PACKING_TYPE_NONE,
	LAYOUT_PACKING_TYPE_SHARED,
	LAYOUT_PACKING_TYPE_STD140,
	LAYOUT_PACKING_TYPE_STD430,
	LAYOUT_PACKING_TYPE_PACKED,
	LAYOUT_PACKING_TYPE_SCALAR,

	LAYOUT_PACKING_TYPE_COUNT
};

enum MatrixLayoutType
{
	MATRIX_LAYOUT_TYPE_NONE,
	MATRIX_LAYOUT_TYPE_ROW_MAJOR,
	MATRIX_LAYOUT_TYPE_COLUMN_MAJOR,

	MATRIX_LAYOUT_TYPE_COUNT
};

enum LayoutFormatType
{
	LAYOUT_FORMAT_TYPE_NONE,

	// Float image
	LAYOUT_FORMAT_TYPE_Rgba32f,
	LAYOUT_FORMAT_TYPE_Rgba16f,
	LAYOUT_FORMAT_TYPE_R32f,
	LAYOUT_FORMAT_TYPE_Rgba8,
	LAYOUT_FORMAT_TYPE_Rgba8Snorm,

	LAYOUT_FORMAT_TYPE_EsFloatGuard,    // to help with comparisons

	LAYOUT_FORMAT_TYPE_Rg32f,
	LAYOUT_FORMAT_TYPE_Rg16f,
	LAYOUT_FORMAT_TYPE_R11fG11fB10f,
	LAYOUT_FORMAT_TYPE_R16f,
	LAYOUT_FORMAT_TYPE_Rgba16,
	LAYOUT_FORMAT_TYPE_Rgb10A2,
	LAYOUT_FORMAT_TYPE_Rg16,
	LAYOUT_FORMAT_TYPE_Rg8,
	LAYOUT_FORMAT_TYPE_R16,
	LAYOUT_FORMAT_TYPE_R8,
	LAYOUT_FORMAT_TYPE_Rgba16Snorm,
	LAYOUT_FORMAT_TYPE_Rg16Snorm,
	LAYOUT_FORMAT_TYPE_Rg8Snorm,
	LAYOUT_FORMAT_TYPE_R16Snorm,
	LAYOUT_FORMAT_TYPE_R8Snorm,

	LAYOUT_FORMAT_TYPE_FloatGuard,      // to help with comparisons

	// Int image
	LAYOUT_FORMAT_TYPE_Rgba32i,
	LAYOUT_FORMAT_TYPE_Rgba16i,
	LAYOUT_FORMAT_TYPE_Rgba8i,
	LAYOUT_FORMAT_TYPE_R32i,

	LAYOUT_FORMAT_TYPE_EsIntGuard,     // to help with comparisons

	LAYOUT_FORMAT_TYPE_Rg32i,
	LAYOUT_FORMAT_TYPE_Rg16i,
	LAYOUT_FORMAT_TYPE_Rg8i,
	LAYOUT_FORMAT_TYPE_R16i,
	LAYOUT_FORMAT_TYPE_R8i,
	LAYOUT_FORMAT_TYPE_R64i,

	LAYOUT_FORMAT_TYPE_IntGuard,       // to help with comparisons

	// Uint image
	LAYOUT_FORMAT_TYPE_Rgba32ui,
	LAYOUT_FORMAT_TYPE_Rgba16ui,
	LAYOUT_FORMAT_TYPE_Rgba8ui,
	LAYOUT_FORMAT_TYPE_R32ui,

	LAYOUT_FORMAT_TYPE_EsUintGuard,    // to help with comparisons

	LAYOUT_FORMAT_TYPE_Rg32ui,
	LAYOUT_FORMAT_TYPE_Rg16ui,
	LAYOUT_FORMAT_TYPE_Rgb10a2ui,
	LAYOUT_FORMAT_TYPE_Rg8ui,
	LAYOUT_FORMAT_TYPE_R16ui,
	LAYOUT_FORMAT_TYPE_R8ui,
	LAYOUT_FORMAT_TYPE_R64ui,
	LAYOUT_FORMAT_TYPE_ExtSizeGuard,   // to help with comparisons
	LAYOUT_FORMAT_TYPE_Size1x8,
	LAYOUT_FORMAT_TYPE_Size1x16,
	LAYOUT_FORMAT_TYPE_Size1x32,
	LAYOUT_FORMAT_TYPE_Size2x32,
	LAYOUT_FORMAT_TYPE_Size4x32,

	LAYOUT_FORMAT_COUNT
};

enum TokenType
{
	TOKEN_TYPE_EMPTY = -2,
	TOKEN_TYPE_EOF = 0,
	TOKEN_TYPE_ERROR = 256,
	TOKEN_TYPE_UNDEF = 257,
	TOKEN_TYPE_CONST = 258,
	TOKEN_TYPE_BOOL = 259,
	TOKEN_TYPE_INT = 260,
	TOKEN_TYPE_UINT = 261,
	TOKEN_TYPE_FLOAT = 262,
	TOKEN_TYPE_BVEC2 = 263,
	TOKEN_TYPE_BVEC3 = 264,
	TOKEN_TYPE_BVEC4 = 265,
	TOKEN_TYPE_IVEC2 = 266,
	TOKEN_TYPE_IVEC3 = 267,
	TOKEN_TYPE_IVEC4 = 268,
	TOKEN_TYPE_UVEC2 = 269,
	TOKEN_TYPE_UVEC3 = 270,
	TOKEN_TYPE_UVEC4 = 271,
	TOKEN_TYPE_VEC2 = 272,
	TOKEN_TYPE_VEC3 = 273,
	TOKEN_TYPE_VEC4 = 274,
	TOKEN_TYPE_MAT2 = 275,
	TOKEN_TYPE_MAT3 = 276,
	TOKEN_TYPE_MAT4 = 277,
	TOKEN_TYPE_MAT2X2 = 278,
	TOKEN_TYPE_MAT2X3 = 279,
	TOKEN_TYPE_MAT2X4 = 280,
	TOKEN_TYPE_MAT3X2 = 281,
	TOKEN_TYPE_MAT3X3 = 282,
	TOKEN_TYPE_MAT3X4 = 283,
	TOKEN_TYPE_MAT4X2 = 284,
	TOKEN_TYPE_MAT4X3 = 285,
	TOKEN_TYPE_MAT4X4 = 286,
	TOKEN_TYPE_SAMPLER2D = 287,
	TOKEN_TYPE_SAMPLER3D = 288,
	TOKEN_TYPE_SAMPLERCUBE = 289,
	TOKEN_TYPE_SAMPLER2DSHADOW = 290,
	TOKEN_TYPE_SAMPLERCUBESHADOW = 291,
	TOKEN_TYPE_SAMPLER2DARRAY = 292,
	TOKEN_TYPE_SAMPLER2DARRAYSHADOW = 293,
	TOKEN_TYPE_ISAMPLER2D = 294,
	TOKEN_TYPE_ISAMPLER3D = 295,
	TOKEN_TYPE_ISAMPLERCUBE = 296,
	TOKEN_TYPE_ISAMPLER2DARRAY = 297,
	TOKEN_TYPE_USAMPLER2D = 298,
	TOKEN_TYPE_USAMPLER3D = 299,
	TOKEN_TYPE_USAMPLERCUBE = 300,
	TOKEN_TYPE_USAMPLER2DARRAY = 301,
	TOKEN_TYPE_SAMPLER = 302,
	TOKEN_TYPE_SAMPLERSHADOW = 303,
	TOKEN_TYPE_TEXTURE2D = 304,
	TOKEN_TYPE_TEXTURE3D = 305,
	TOKEN_TYPE_TEXTURECUBE = 306,
	TOKEN_TYPE_TEXTURE2DARRAY = 307,
	TOKEN_TYPE_ITEXTURE2D = 308,
	TOKEN_TYPE_ITEXTURE3D = 309,
	TOKEN_TYPE_ITEXTURECUBE = 310,
	TOKEN_TYPE_ITEXTURE2DARRAY = 311,
	TOKEN_TYPE_UTEXTURE2D = 312,
	TOKEN_TYPE_UTEXTURE3D = 313,
	TOKEN_TYPE_UTEXTURECUBE = 314,
	TOKEN_TYPE_UTEXTURE2DARRAY = 315,
	TOKEN_TYPE_ATTRIBUTE = 316,
	TOKEN_TYPE_VARYING = 317,
	TOKEN_TYPE_FLOAT16_T = 318,
	TOKEN_TYPE_FLOAT32_T = 319,
	TOKEN_TYPE_DOUBLE = 320,
	TOKEN_TYPE_FLOAT64_T = 321,
	TOKEN_TYPE_INT64_T = 322,
	TOKEN_TYPE_UINT64_T = 323,
	TOKEN_TYPE_INT32_T = 324,
	TOKEN_TYPE_UINT32_T = 325,
	TOKEN_TYPE_INT16_T = 326,
	TOKEN_TYPE_UINT16_T = 327,
	TOKEN_TYPE_INT8_T = 328,
	TOKEN_TYPE_UINT8_T = 329,
	TOKEN_TYPE_I64VEC2 = 330,
	TOKEN_TYPE_I64VEC3 = 331,
	TOKEN_TYPE_I64VEC4 = 332,
	TOKEN_TYPE_U64VEC2 = 333,
	TOKEN_TYPE_U64VEC3 = 334,
	TOKEN_TYPE_U64VEC4 = 335,
	TOKEN_TYPE_I32VEC2 = 336,
	TOKEN_TYPE_I32VEC3 = 337,
	TOKEN_TYPE_I32VEC4 = 338,
	TOKEN_TYPE_U32VEC2 = 339,
	TOKEN_TYPE_U32VEC3 = 340,
	TOKEN_TYPE_U32VEC4 = 341,
	TOKEN_TYPE_I16VEC2 = 342,
	TOKEN_TYPE_I16VEC3 = 343,
	TOKEN_TYPE_I16VEC4 = 344,
	TOKEN_TYPE_U16VEC2 = 345,
	TOKEN_TYPE_U16VEC3 = 346,
	TOKEN_TYPE_U16VEC4 = 347,
	TOKEN_TYPE_I8VEC2 = 348,
	TOKEN_TYPE_I8VEC3 = 349,
	TOKEN_TYPE_I8VEC4 = 350,
	TOKEN_TYPE_U8VEC2 = 351,
	TOKEN_TYPE_U8VEC3 = 352,
	TOKEN_TYPE_U8VEC4 = 353,
	TOKEN_TYPE_DVEC2 = 354,
	TOKEN_TYPE_DVEC3 = 355,
	TOKEN_TYPE_DVEC4 = 356,
	TOKEN_TYPE_DMAT2 = 357,
	TOKEN_TYPE_DMAT3 = 358,
	TOKEN_TYPE_DMAT4 = 359,
	TOKEN_TYPE_F16VEC2 = 360,
	TOKEN_TYPE_F16VEC3 = 361,
	TOKEN_TYPE_F16VEC4 = 362,
	TOKEN_TYPE_F16MAT2 = 363,
	TOKEN_TYPE_F16MAT3 = 364,
	TOKEN_TYPE_F16MAT4 = 365,
	TOKEN_TYPE_F32VEC2 = 366,
	TOKEN_TYPE_F32VEC3 = 367,
	TOKEN_TYPE_F32VEC4 = 368,
	TOKEN_TYPE_F32MAT2 = 369,
	TOKEN_TYPE_F32MAT3 = 370,
	TOKEN_TYPE_F32MAT4 = 371,
	TOKEN_TYPE_F64VEC2 = 372,
	TOKEN_TYPE_F64VEC3 = 373,
	TOKEN_TYPE_F64VEC4 = 374,
	TOKEN_TYPE_F64MAT2 = 375,
	TOKEN_TYPE_F64MAT3 = 376,
	TOKEN_TYPE_F64MAT4 = 377,
	TOKEN_TYPE_DMAT2X2 = 378,
	TOKEN_TYPE_DMAT2X3 = 379,
	TOKEN_TYPE_DMAT2X4 = 380,
	TOKEN_TYPE_DMAT3X2 = 381,
	TOKEN_TYPE_DMAT3X3 = 382,
	TOKEN_TYPE_DMAT3X4 = 383,
	TOKEN_TYPE_DMAT4X2 = 384,
	TOKEN_TYPE_DMAT4X3 = 385,
	TOKEN_TYPE_DMAT4X4 = 386,
	TOKEN_TYPE_F16MAT2X2 = 387,
	TOKEN_TYPE_F16MAT2X3 = 388,
	TOKEN_TYPE_F16MAT2X4 = 389,
	TOKEN_TYPE_F16MAT3X2 = 390,
	TOKEN_TYPE_F16MAT3X3 = 391,
	TOKEN_TYPE_F16MAT3X4 = 392,
	TOKEN_TYPE_F16MAT4X2 = 393,
	TOKEN_TYPE_F16MAT4X3 = 394,
	TOKEN_TYPE_F16MAT4X4 = 395,
	TOKEN_TYPE_F32MAT2X2 = 396,
	TOKEN_TYPE_F32MAT2X3 = 397,
	TOKEN_TYPE_F32MAT2X4 = 398,
	TOKEN_TYPE_F32MAT3X2 = 399,
	TOKEN_TYPE_F32MAT3X3 = 400,
	TOKEN_TYPE_F32MAT3X4 = 401,
	TOKEN_TYPE_F32MAT4X2 = 402,
	TOKEN_TYPE_F32MAT4X3 = 403,
	TOKEN_TYPE_F32MAT4X4 = 404,
	TOKEN_TYPE_F64MAT2X2 = 405,
	TOKEN_TYPE_F64MAT2X3 = 406,
	TOKEN_TYPE_F64MAT2X4 = 407,
	TOKEN_TYPE_F64MAT3X2 = 408,
	TOKEN_TYPE_F64MAT3X3 = 409,
	TOKEN_TYPE_F64MAT3X4 = 410,
	TOKEN_TYPE_F64MAT4X2 = 411,
	TOKEN_TYPE_F64MAT4X3 = 412,
	TOKEN_TYPE_F64MAT4X4 = 413,
	TOKEN_TYPE_ATOMIC_UINT = 414,
	TOKEN_TYPE_ACCSTRUCTNV = 415,
	TOKEN_TYPE_ACCSTRUCTEXT = 416,
	TOKEN_TYPE_RAYQUERYEXT = 417,
	TOKEN_TYPE_FCOOPMATNV = 418,
	TOKEN_TYPE_ICOOPMATNV = 419,
	TOKEN_TYPE_UCOOPMATNV = 420,
	TOKEN_TYPE_HITOBJECTNV = 421,
	TOKEN_TYPE_HITOBJECTATTRNV = 422,
	TOKEN_TYPE_SAMPLERCUBEARRAY = 423,
	TOKEN_TYPE_SAMPLERCUBEARRAYSHADOW = 424,
	TOKEN_TYPE_ISAMPLERCUBEARRAY = 425,
	TOKEN_TYPE_USAMPLERCUBEARRAY = 426,
	TOKEN_TYPE_SAMPLER1D = 427,
	TOKEN_TYPE_SAMPLER1DARRAY = 428,
	TOKEN_TYPE_SAMPLER1DARRAYSHADOW = 429,
	TOKEN_TYPE_ISAMPLER1D = 430,
	TOKEN_TYPE_SAMPLER1DSHADOW = 431,
	TOKEN_TYPE_SAMPLER2DRECT = 432,
	TOKEN_TYPE_SAMPLER2DRECTSHADOW = 433,
	TOKEN_TYPE_ISAMPLER2DRECT = 434,
	TOKEN_TYPE_USAMPLER2DRECT = 435,
	TOKEN_TYPE_SAMPLERBUFFER = 436,
	TOKEN_TYPE_ISAMPLERBUFFER = 437,
	TOKEN_TYPE_USAMPLERBUFFER = 438,
	TOKEN_TYPE_SAMPLER2DMS = 439,
	TOKEN_TYPE_ISAMPLER2DMS = 440,
	TOKEN_TYPE_USAMPLER2DMS = 441,
	TOKEN_TYPE_SAMPLER2DMSARRAY = 442,
	TOKEN_TYPE_ISAMPLER2DMSARRAY = 443,
	TOKEN_TYPE_USAMPLER2DMSARRAY = 444,
	TOKEN_TYPE_SAMPLEREXTERNALOES = 445,
	TOKEN_TYPE_SAMPLEREXTERNAL2DY2YEXT = 446,
	TOKEN_TYPE_ISAMPLER1DARRAY = 447,
	TOKEN_TYPE_USAMPLER1D = 448,
	TOKEN_TYPE_USAMPLER1DARRAY = 449,
	TOKEN_TYPE_F16SAMPLER1D = 450,
	TOKEN_TYPE_F16SAMPLER2D = 451,
	TOKEN_TYPE_F16SAMPLER3D = 452,
	TOKEN_TYPE_F16SAMPLER2DRECT = 453,
	TOKEN_TYPE_F16SAMPLERCUBE = 454,
	TOKEN_TYPE_F16SAMPLER1DARRAY = 455,
	TOKEN_TYPE_F16SAMPLER2DARRAY = 456,
	TOKEN_TYPE_F16SAMPLERCUBEARRAY = 457,
	TOKEN_TYPE_F16SAMPLERBUFFER = 458,
	TOKEN_TYPE_F16SAMPLER2DMS = 459,
	TOKEN_TYPE_F16SAMPLER2DMSARRAY = 460,
	TOKEN_TYPE_F16SAMPLER1DSHADOW = 461,
	TOKEN_TYPE_F16SAMPLER2DSHADOW = 462,
	TOKEN_TYPE_F16SAMPLER1DARRAYSHADOW = 463,
	TOKEN_TYPE_F16SAMPLER2DARRAYSHADOW = 464,
	TOKEN_TYPE_F16SAMPLER2DRECTSHADOW = 465,
	TOKEN_TYPE_F16SAMPLERCUBESHADOW = 466,
	TOKEN_TYPE_F16SAMPLERCUBEARRAYSHADOW = 467,
	TOKEN_TYPE_IMAGE1D = 468,
	TOKEN_TYPE_IIMAGE1D = 469,
	TOKEN_TYPE_UIMAGE1D = 470,
	TOKEN_TYPE_IMAGE2D = 471,
	TOKEN_TYPE_IIMAGE2D = 472,
	TOKEN_TYPE_UIMAGE2D = 473,
	TOKEN_TYPE_IMAGE3D = 474,
	TOKEN_TYPE_IIMAGE3D = 475,
	TOKEN_TYPE_UIMAGE3D = 476,
	TOKEN_TYPE_IMAGE2DRECT = 477,
	TOKEN_TYPE_IIMAGE2DRECT = 478,
	TOKEN_TYPE_UIMAGE2DRECT = 479,
	TOKEN_TYPE_IMAGECUBE = 480,
	TOKEN_TYPE_IIMAGECUBE = 481,
	TOKEN_TYPE_UIMAGECUBE = 482,
	TOKEN_TYPE_IMAGEBUFFER = 483,
	TOKEN_TYPE_IIMAGEBUFFER = 484,
	TOKEN_TYPE_UIMAGEBUFFER = 485,
	TOKEN_TYPE_IMAGE1DARRAY = 486,
	TOKEN_TYPE_IIMAGE1DARRAY = 487,
	TOKEN_TYPE_UIMAGE1DARRAY = 488,
	TOKEN_TYPE_IMAGE2DARRAY = 489,
	TOKEN_TYPE_IIMAGE2DARRAY = 490,
	TOKEN_TYPE_UIMAGE2DARRAY = 491,
	TOKEN_TYPE_IMAGECUBEARRAY = 492,
	TOKEN_TYPE_IIMAGECUBEARRAY = 493,
	TOKEN_TYPE_UIMAGECUBEARRAY = 494,
	TOKEN_TYPE_IMAGE2DMS = 495,
	TOKEN_TYPE_IIMAGE2DMS = 496,
	TOKEN_TYPE_UIMAGE2DMS = 497,
	TOKEN_TYPE_IMAGE2DMSARRAY = 498,
	TOKEN_TYPE_IIMAGE2DMSARRAY = 499,
	TOKEN_TYPE_UIMAGE2DMSARRAY = 500,
	TOKEN_TYPE_F16IMAGE1D = 501,
	TOKEN_TYPE_F16IMAGE2D = 502,
	TOKEN_TYPE_F16IMAGE3D = 503,
	TOKEN_TYPE_F16IMAGE2DRECT = 504,
	TOKEN_TYPE_F16IMAGECUBE = 505,
	TOKEN_TYPE_F16IMAGE1DARRAY = 506,
	TOKEN_TYPE_F16IMAGE2DARRAY = 507,
	TOKEN_TYPE_F16IMAGECUBEARRAY = 508,
	TOKEN_TYPE_F16IMAGEBUFFER = 509,
	TOKEN_TYPE_F16IMAGE2DMS = 510,
	TOKEN_TYPE_F16IMAGE2DMSARRAY = 511,
	TOKEN_TYPE_I64IMAGE1D = 512,
	TOKEN_TYPE_U64IMAGE1D = 513,
	TOKEN_TYPE_I64IMAGE2D = 514,
	TOKEN_TYPE_U64IMAGE2D = 515,
	TOKEN_TYPE_I64IMAGE3D = 516,
	TOKEN_TYPE_U64IMAGE3D = 517,
	TOKEN_TYPE_I64IMAGE2DRECT = 518,
	TOKEN_TYPE_U64IMAGE2DRECT = 519,
	TOKEN_TYPE_I64IMAGECUBE = 520,
	TOKEN_TYPE_U64IMAGECUBE = 521,
	TOKEN_TYPE_I64IMAGEBUFFER = 522,
	TOKEN_TYPE_U64IMAGEBUFFER = 523,
	TOKEN_TYPE_I64IMAGE1DARRAY = 524,
	TOKEN_TYPE_U64IMAGE1DARRAY = 525,
	TOKEN_TYPE_I64IMAGE2DARRAY = 526,
	TOKEN_TYPE_U64IMAGE2DARRAY = 527,
	TOKEN_TYPE_I64IMAGECUBEARRAY = 528,
	TOKEN_TYPE_U64IMAGECUBEARRAY = 529,
	TOKEN_TYPE_I64IMAGE2DMS = 530,
	TOKEN_TYPE_U64IMAGE2DMS = 531,
	TOKEN_TYPE_I64IMAGE2DMSARRAY = 532,
	TOKEN_TYPE_U64IMAGE2DMSARRAY = 533,
	TOKEN_TYPE_TEXTURECUBEARRAY = 534,
	TOKEN_TYPE_ITEXTURECUBEARRAY = 535,
	TOKEN_TYPE_UTEXTURECUBEARRAY = 536,
	TOKEN_TYPE_TEXTURE1D = 537,
	TOKEN_TYPE_ITEXTURE1D = 538,
	TOKEN_TYPE_UTEXTURE1D = 539,
	TOKEN_TYPE_TEXTURE1DARRAY = 540,
	TOKEN_TYPE_ITEXTURE1DARRAY = 541,
	TOKEN_TYPE_UTEXTURE1DARRAY = 542,
	TOKEN_TYPE_TEXTURE2DRECT = 543,
	TOKEN_TYPE_ITEXTURE2DRECT = 544,
	TOKEN_TYPE_UTEXTURE2DRECT = 545,
	TOKEN_TYPE_TEXTUREBUFFER = 546,
	TOKEN_TYPE_ITEXTUREBUFFER = 547,
	TOKEN_TYPE_UTEXTUREBUFFER = 548,
	TOKEN_TYPE_TEXTURE2DMS = 549,
	TOKEN_TYPE_ITEXTURE2DMS = 550,
	TOKEN_TYPE_UTEXTURE2DMS = 551,
	TOKEN_TYPE_TEXTURE2DMSARRAY = 552,
	TOKEN_TYPE_ITEXTURE2DMSARRAY = 553,
	TOKEN_TYPE_UTEXTURE2DMSARRAY = 554,
	TOKEN_TYPE_F16TEXTURE1D = 555,
	TOKEN_TYPE_F16TEXTURE2D = 556,
	TOKEN_TYPE_F16TEXTURE3D = 557,
	TOKEN_TYPE_F16TEXTURE2DRECT = 558,
	TOKEN_TYPE_F16TEXTURECUBE = 559,
	TOKEN_TYPE_F16TEXTURE1DARRAY = 560,
	TOKEN_TYPE_F16TEXTURE2DARRAY = 561,
	TOKEN_TYPE_F16TEXTURECUBEARRAY = 562,
	TOKEN_TYPE_F16TEXTUREBUFFER = 563,
	TOKEN_TYPE_F16TEXTURE2DMS = 564,
	TOKEN_TYPE_F16TEXTURE2DMSARRAY = 565,
	TOKEN_TYPE_SUBPASSINPUT = 566,
	TOKEN_TYPE_SUBPASSINPUTMS = 567,
	TOKEN_TYPE_ISUBPASSINPUT = 568,
	TOKEN_TYPE_ISUBPASSINPUTMS = 569,
	TOKEN_TYPE_USUBPASSINPUT = 570,
	TOKEN_TYPE_USUBPASSINPUTMS = 571,
	TOKEN_TYPE_F16SUBPASSINPUT = 572,
	TOKEN_TYPE_F16SUBPASSINPUTMS = 573,
	TOKEN_TYPE_SPIRV_INSTRUCTION = 574,
	TOKEN_TYPE_SPIRV_EXECUTION_MODE = 575,
	TOKEN_TYPE_SPIRV_EXECUTION_MODE_ID = 576,
	TOKEN_TYPE_SPIRV_DECORATE = 577,
	TOKEN_TYPE_SPIRV_DECORATE_ID = 578,
	TOKEN_TYPE_SPIRV_DECORATE_STRING = 579,
	TOKEN_TYPE_SPIRV_TYPE = 580,
	TOKEN_TYPE_SPIRV_STORAGE_CLASS = 581,
	TOKEN_TYPE_SPIRV_BY_REFERENCE = 582,
	TOKEN_TYPE_SPIRV_LITERAL = 583,
	TOKEN_TYPE_ATTACHMENTEXT = 584,
	TOKEN_TYPE_IATTACHMENTEXT = 585,
	TOKEN_TYPE_UATTACHMENTEXT = 586,
	TOKEN_TYPE_LEFT_OP = 587,
	TOKEN_TYPE_RIGHT_OP = 588,
	TOKEN_TYPE_INC_OP = 589,
	TOKEN_TYPE_DEC_OP = 590,
	TOKEN_TYPE_LE_OP = 591,
	TOKEN_TYPE_GE_OP = 592,
	TOKEN_TYPE_EQ_OP = 593,
	TOKEN_TYPE_NE_OP = 594,
	TOKEN_TYPE_AND_OP = 595,
	TOKEN_TYPE_OR_OP = 596,
	TOKEN_TYPE_XOR_OP = 597,
	TOKEN_TYPE_MUL_ASSIGN = 598,
	TOKEN_TYPE_DIV_ASSIGN = 599,
	TOKEN_TYPE_ADD_ASSIGN = 600,
	TOKEN_TYPE_MOD_ASSIGN = 601,
	TOKEN_TYPE_LEFT_ASSIGN = 602,
	TOKEN_TYPE_RIGHT_ASSIGN = 603,
	TOKEN_TYPE_AND_ASSIGN = 604,
	TOKEN_TYPE_XOR_ASSIGN = 605,
	TOKEN_TYPE_OR_ASSIGN = 606,
	TOKEN_TYPE_SUB_ASSIGN = 607,
	TOKEN_TYPE_STRING_LITERAL = 608,
	TOKEN_TYPE_LEFT_PAREN = 609,
	TOKEN_TYPE_RIGHT_PAREN = 610,
	TOKEN_TYPE_LEFT_BRACKET = 611,
	TOKEN_TYPE_RIGHT_BRACKET = 612,
	TOKEN_TYPE_LEFT_BRACE = 613,
	TOKEN_TYPE_RIGHT_BRACE = 614,
	TOKEN_TYPE_DOT = 615,
	TOKEN_TYPE_COMMA = 616,
	TOKEN_TYPE_COLON = 617,
	TOKEN_TYPE_EQUAL = 618,
	TOKEN_TYPE_SEMICOLON = 619,
	TOKEN_TYPE_BANG = 620,
	TOKEN_TYPE_DASH = 621,
	TOKEN_TYPE_TILDE = 622,
	TOKEN_TYPE_PLUS = 623,
	TOKEN_TYPE_STAR = 624,
	TOKEN_TYPE_SLASH = 625,
	TOKEN_TYPE_PERCENT = 626,
	TOKEN_TYPE_LEFT_ANGLE = 627,
	TOKEN_TYPE_RIGHT_ANGLE = 628,
	TOKEN_TYPE_VERTICAL_BAR = 629,
	TOKEN_TYPE_CARET = 630,
	TOKEN_TYPE_AMPERSAND = 631,
	TOKEN_TYPE_QUESTION = 632,
	TOKEN_TYPE_INVARIANT = 633,
	TOKEN_TYPE_HIGH_PRECISION = 634,
	TOKEN_TYPE_MEDIUM_PRECISION = 635,
	TOKEN_TYPE_LOW_PRECISION = 636,
	TOKEN_TYPE_PRECISION = 637,
	TOKEN_TYPE_PACKED = 638,
	TOKEN_TYPE_RESOURCE = 639,
	TOKEN_TYPE_SUPERP = 640,
	TOKEN_TYPE_FLOATCONSTANT = 641,
	TOKEN_TYPE_INTCONSTANT = 642,
	TOKEN_TYPE_UINTCONSTANT = 643,
	TOKEN_TYPE_BOOLCONSTANT = 644,
	TOKEN_TYPE_IDENTIFIER = 645,
	TOKEN_TYPE_TYPE_NAME = 646,
	TOKEN_TYPE_CENTROID = 647,
	TOKEN_TYPE_IN = 648,
	TOKEN_TYPE_OUT = 649,
	TOKEN_TYPE_INOUT = 650,
	TOKEN_TYPE_STRUCT = 651,
	TOKEN_TYPE_VOID = 652,
	TOKEN_TYPE_WHILE = 653,
	TOKEN_TYPE_BREAK = 654,
	TOKEN_TYPE_CONTINUE = 655,
	TOKEN_TYPE_DO = 656,
	TOKEN_TYPE_ELSE = 657,
	TOKEN_TYPE_FOR = 658,
	TOKEN_TYPE_IF = 659,
	TOKEN_TYPE_DISCARD = 660,
	TOKEN_TYPE_RETURN = 661,
	TOKEN_TYPE_SWITCH = 662,
	TOKEN_TYPE_CASE = 663,
	TOKEN_TYPE_DEFAULT = 664,
	TOKEN_TYPE_TERMINATE_INVOCATION = 665,
	TOKEN_TYPE_TERMINATE_RAY = 666,
	TOKEN_TYPE_IGNORE_INTERSECTION = 667,
	TOKEN_TYPE_UNIFORM = 668,
	TOKEN_TYPE_SHARED = 669,
	TOKEN_TYPE_BUFFER = 670,
	TOKEN_TYPE_TILEIMAGEEXT = 671,
	TOKEN_TYPE_FLAT = 672,
	TOKEN_TYPE_SMOOTH = 673,
	TOKEN_TYPE_LAYOUT = 674,
	TOKEN_TYPE_DOUBLECONSTANT = 675,
	TOKEN_TYPE_INT16CONSTANT = 676,
	TOKEN_TYPE_UINT16CONSTANT = 677,
	TOKEN_TYPE_FLOAT16CONSTANT = 678,
	TOKEN_TYPE_INT32CONSTANT = 679,
	TOKEN_TYPE_UINT32CONSTANT = 680,
	TOKEN_TYPE_INT64CONSTANT = 681,
	TOKEN_TYPE_UINT64CONSTANT = 682,
	TOKEN_TYPE_SUBROUTINE = 683,
	TOKEN_TYPE_DEMOTE = 684,
	TOKEN_TYPE_PAYLOADNV = 685,
	TOKEN_TYPE_PAYLOADINNV = 686,
	TOKEN_TYPE_HITATTRNV = 687,
	TOKEN_TYPE_CALLDATANV = 688,
	TOKEN_TYPE_CALLDATAINNV = 689,
	TOKEN_TYPE_PAYLOADEXT = 690,
	TOKEN_TYPE_PAYLOADINEXT = 691,
	TOKEN_TYPE_HITATTREXT = 692,
	TOKEN_TYPE_CALLDATAEXT = 693,
	TOKEN_TYPE_CALLDATAINEXT = 694,
	TOKEN_TYPE_PATCH = 695,
	TOKEN_TYPE_SAMPLE = 696,
	TOKEN_TYPE_NONUNIFORM = 697,
	TOKEN_TYPE_COHERENT = 698,
	TOKEN_TYPE_VOLATILE = 699,
	TOKEN_TYPE_RESTRICT = 700,
	TOKEN_TYPE_READONLY = 701,
	TOKEN_TYPE_WRITEONLY = 702,
	TOKEN_TYPE_DEVICECOHERENT = 703,
	TOKEN_TYPE_QUEUEFAMILYCOHERENT = 704,
	TOKEN_TYPE_WORKGROUPCOHERENT = 705,
	TOKEN_TYPE_SUBGROUPCOHERENT = 706,
	TOKEN_TYPE_NONPRIVATE = 707,
	TOKEN_TYPE_SHADERCALLCOHERENT = 708,
	TOKEN_TYPE_NOPERSPECTIVE = 709,
	TOKEN_TYPE_EXPLICITINTERPAMD = 710,
	TOKEN_TYPE_PERVERTEXEXT = 711,
	TOKEN_TYPE_PERVERTEXNV = 712,
	TOKEN_TYPE_PERPRIMITIVENV = 713,
	TOKEN_TYPE_PERVIEWNV = 714,
	TOKEN_TYPE_PERTASKNV = 715,
	TOKEN_TYPE_PERPRIMITIVEEXT = 716,
	TOKEN_TYPE_TASKPAYLOADWORKGROUPEXT = 717,
	TOKEN_TYPE_PRECISE = 718
};

enum SymbolType
{
	SYMBOL_TYPE_EMPTY = -2,
	SYMBOL_TYPE_EOF = 0,                        /* "end of file"  */
	SYMBOL_TYPE_ERROR = 1,                      /* error  */
	SYMBOL_TYPE_UNDEF = 2,                      /* "invalid token"  */
	SYMBOL_TYPE_CONST = 3,                      /* CONST  */
	SYMBOL_TYPE_BOOL = 4,                       /* BOOL  */
	SYMBOL_TYPE_INT = 5,                        /* INT  */
	SYMBOL_TYPE_UINT = 6,                       /* UINT  */
	SYMBOL_TYPE_FLOAT = 7,                      /* FLOAT  */
	SYMBOL_TYPE_BVEC2 = 8,                      /* BVEC2  */
	SYMBOL_TYPE_BVEC3 = 9,                      /* BVEC3  */
	SYMBOL_TYPE_BVEC4 = 10,                     /* BVEC4  */
	SYMBOL_TYPE_IVEC2 = 11,                     /* IVEC2  */
	SYMBOL_TYPE_IVEC3 = 12,                     /* IVEC3  */
	SYMBOL_TYPE_IVEC4 = 13,                     /* IVEC4  */
	SYMBOL_TYPE_UVEC2 = 14,                     /* UVEC2  */
	SYMBOL_TYPE_UVEC3 = 15,                     /* UVEC3  */
	SYMBOL_TYPE_UVEC4 = 16,                     /* UVEC4  */
	SYMBOL_TYPE_VEC2 = 17,                      /* VEC2  */
	SYMBOL_TYPE_VEC3 = 18,                      /* VEC3  */
	SYMBOL_TYPE_VEC4 = 19,                      /* VEC4  */
	SYMBOL_TYPE_MAT2 = 20,                      /* MAT2  */
	SYMBOL_TYPE_MAT3 = 21,                      /* MAT3  */
	SYMBOL_TYPE_MAT4 = 22,                      /* MAT4  */
	SYMBOL_TYPE_MAT2X2 = 23,                    /* MAT2X2  */
	SYMBOL_TYPE_MAT2X3 = 24,                    /* MAT2X3  */
	SYMBOL_TYPE_MAT2X4 = 25,                    /* MAT2X4  */
	SYMBOL_TYPE_MAT3X2 = 26,                    /* MAT3X2  */
	SYMBOL_TYPE_MAT3X3 = 27,                    /* MAT3X3  */
	SYMBOL_TYPE_MAT3X4 = 28,                    /* MAT3X4  */
	SYMBOL_TYPE_MAT4X2 = 29,                    /* MAT4X2  */
	SYMBOL_TYPE_MAT4X3 = 30,                    /* MAT4X3  */
	SYMBOL_TYPE_MAT4X4 = 31,                    /* MAT4X4  */
	SYMBOL_TYPE_SAMPLER2D = 32,                 /* SAMPLER2D  */
	SYMBOL_TYPE_SAMPLER3D = 33,                 /* SAMPLER3D  */
	SYMBOL_TYPE_SAMPLERCUBE = 34,               /* SAMPLERCUBE  */
	SYMBOL_TYPE_SAMPLER2DSHADOW = 35,           /* SAMPLER2DSHADOW  */
	SYMBOL_TYPE_SAMPLERCUBESHADOW = 36,         /* SAMPLERCUBESHADOW  */
	SYMBOL_TYPE_SAMPLER2DARRAY = 37,            /* SAMPLER2DARRAY  */
	SYMBOL_TYPE_SAMPLER2DARRAYSHADOW = 38,      /* SAMPLER2DARRAYSHADOW  */
	SYMBOL_TYPE_ISAMPLER2D = 39,                /* ISAMPLER2D  */
	SYMBOL_TYPE_ISAMPLER3D = 40,                /* ISAMPLER3D  */
	SYMBOL_TYPE_ISAMPLERCUBE = 41,              /* ISAMPLERCUBE  */
	SYMBOL_TYPE_ISAMPLER2DARRAY = 42,           /* ISAMPLER2DARRAY  */
	SYMBOL_TYPE_USAMPLER2D = 43,                /* USAMPLER2D  */
	SYMBOL_TYPE_USAMPLER3D = 44,                /* USAMPLER3D  */
	SYMBOL_TYPE_USAMPLERCUBE = 45,              /* USAMPLERCUBE  */
	SYMBOL_TYPE_USAMPLER2DARRAY = 46,           /* USAMPLER2DARRAY  */
	SYMBOL_TYPE_SAMPLER = 47,                   /* SAMPLER  */
	SYMBOL_TYPE_SAMPLERSHADOW = 48,             /* SAMPLERSHADOW  */
	SYMBOL_TYPE_TEXTURE2D = 49,                 /* TEXTURE2D  */
	SYMBOL_TYPE_TEXTURE3D = 50,                 /* TEXTURE3D  */
	SYMBOL_TYPE_TEXTURECUBE = 51,               /* TEXTURECUBE  */
	SYMBOL_TYPE_TEXTURE2DARRAY = 52,            /* TEXTURE2DARRAY  */
	SYMBOL_TYPE_ITEXTURE2D = 53,                /* ITEXTURE2D  */
	SYMBOL_TYPE_ITEXTURE3D = 54,                /* ITEXTURE3D  */
	SYMBOL_TYPE_ITEXTURECUBE = 55,              /* ITEXTURECUBE  */
	SYMBOL_TYPE_ITEXTURE2DARRAY = 56,           /* ITEXTURE2DARRAY  */
	SYMBOL_TYPE_UTEXTURE2D = 57,                /* UTEXTURE2D  */
	SYMBOL_TYPE_UTEXTURE3D = 58,                /* UTEXTURE3D  */
	SYMBOL_TYPE_UTEXTURECUBE = 59,              /* UTEXTURECUBE  */
	SYMBOL_TYPE_UTEXTURE2DARRAY = 60,           /* UTEXTURE2DARRAY  */
	SYMBOL_TYPE_ATTRIBUTE = 61,                 /* ATTRIBUTE  */
	SYMBOL_TYPE_VARYING = 62,                   /* VARYING  */
	SYMBOL_TYPE_FLOAT16_T = 63,                 /* FLOAT16_T  */
	SYMBOL_TYPE_FLOAT32_T = 64,                 /* FLOAT32_T  */
	SYMBOL_TYPE_DOUBLE = 65,                    /* DOUBLE  */
	SYMBOL_TYPE_FLOAT64_T = 66,                 /* FLOAT64_T  */
	SYMBOL_TYPE_INT64_T = 67,                   /* INT64_T  */
	SYMBOL_TYPE_UINT64_T = 68,                  /* UINT64_T  */
	SYMBOL_TYPE_INT32_T = 69,                   /* INT32_T  */
	SYMBOL_TYPE_UINT32_T = 70,                  /* UINT32_T  */
	SYMBOL_TYPE_INT16_T = 71,                   /* INT16_T  */
	SYMBOL_TYPE_UINT16_T = 72,                  /* UINT16_T  */
	SYMBOL_TYPE_INT8_T = 73,                    /* INT8_T  */
	SYMBOL_TYPE_UINT8_T = 74,                   /* UINT8_T  */
	SYMBOL_TYPE_I64VEC2 = 75,                   /* I64VEC2  */
	SYMBOL_TYPE_I64VEC3 = 76,                   /* I64VEC3  */
	SYMBOL_TYPE_I64VEC4 = 77,                   /* I64VEC4  */
	SYMBOL_TYPE_U64VEC2 = 78,                   /* U64VEC2  */
	SYMBOL_TYPE_U64VEC3 = 79,                   /* U64VEC3  */
	SYMBOL_TYPE_U64VEC4 = 80,                   /* U64VEC4  */
	SYMBOL_TYPE_I32VEC2 = 81,                   /* I32VEC2  */
	SYMBOL_TYPE_I32VEC3 = 82,                   /* I32VEC3  */
	SYMBOL_TYPE_I32VEC4 = 83,                   /* I32VEC4  */
	SYMBOL_TYPE_U32VEC2 = 84,                   /* U32VEC2  */
	SYMBOL_TYPE_U32VEC3 = 85,                   /* U32VEC3  */
	SYMBOL_TYPE_U32VEC4 = 86,                   /* U32VEC4  */
	SYMBOL_TYPE_I16VEC2 = 87,                   /* I16VEC2  */
	SYMBOL_TYPE_I16VEC3 = 88,                   /* I16VEC3  */
	SYMBOL_TYPE_I16VEC4 = 89,                   /* I16VEC4  */
	SYMBOL_TYPE_U16VEC2 = 90,                   /* U16VEC2  */
	SYMBOL_TYPE_U16VEC3 = 91,                   /* U16VEC3  */
	SYMBOL_TYPE_U16VEC4 = 92,                   /* U16VEC4  */
	SYMBOL_TYPE_I8VEC2 = 93,                    /* I8VEC2  */
	SYMBOL_TYPE_I8VEC3 = 94,                    /* I8VEC3  */
	SYMBOL_TYPE_I8VEC4 = 95,                    /* I8VEC4  */
	SYMBOL_TYPE_U8VEC2 = 96,                    /* U8VEC2  */
	SYMBOL_TYPE_U8VEC3 = 97,                    /* U8VEC3  */
	SYMBOL_TYPE_U8VEC4 = 98,                    /* U8VEC4  */
	SYMBOL_TYPE_DVEC2 = 99,                     /* DVEC2  */
	SYMBOL_TYPE_DVEC3 = 100,                    /* DVEC3  */
	SYMBOL_TYPE_DVEC4 = 101,                    /* DVEC4  */
	SYMBOL_TYPE_DMAT2 = 102,                    /* DMAT2  */
	SYMBOL_TYPE_DMAT3 = 103,                    /* DMAT3  */
	SYMBOL_TYPE_DMAT4 = 104,                    /* DMAT4  */
	SYMBOL_TYPE_F16VEC2 = 105,                  /* F16VEC2  */
	SYMBOL_TYPE_F16VEC3 = 106,                  /* F16VEC3  */
	SYMBOL_TYPE_F16VEC4 = 107,                  /* F16VEC4  */
	SYMBOL_TYPE_F16MAT2 = 108,                  /* F16MAT2  */
	SYMBOL_TYPE_F16MAT3 = 109,                  /* F16MAT3  */
	SYMBOL_TYPE_F16MAT4 = 110,                  /* F16MAT4  */
	SYMBOL_TYPE_F32VEC2 = 111,                  /* F32VEC2  */
	SYMBOL_TYPE_F32VEC3 = 112,                  /* F32VEC3  */
	SYMBOL_TYPE_F32VEC4 = 113,                  /* F32VEC4  */
	SYMBOL_TYPE_F32MAT2 = 114,                  /* F32MAT2  */
	SYMBOL_TYPE_F32MAT3 = 115,                  /* F32MAT3  */
	SYMBOL_TYPE_F32MAT4 = 116,                  /* F32MAT4  */
	SYMBOL_TYPE_F64VEC2 = 117,                  /* F64VEC2  */
	SYMBOL_TYPE_F64VEC3 = 118,                  /* F64VEC3  */
	SYMBOL_TYPE_F64VEC4 = 119,                  /* F64VEC4  */
	SYMBOL_TYPE_F64MAT2 = 120,                  /* F64MAT2  */
	SYMBOL_TYPE_F64MAT3 = 121,                  /* F64MAT3  */
	SYMBOL_TYPE_F64MAT4 = 122,                  /* F64MAT4  */
	SYMBOL_TYPE_DMAT2X2 = 123,                  /* DMAT2X2  */
	SYMBOL_TYPE_DMAT2X3 = 124,                  /* DMAT2X3  */
	SYMBOL_TYPE_DMAT2X4 = 125,                  /* DMAT2X4  */
	SYMBOL_TYPE_DMAT3X2 = 126,                  /* DMAT3X2  */
	SYMBOL_TYPE_DMAT3X3 = 127,                  /* DMAT3X3  */
	SYMBOL_TYPE_DMAT3X4 = 128,                  /* DMAT3X4  */
	SYMBOL_TYPE_DMAT4X2 = 129,                  /* DMAT4X2  */
	SYMBOL_TYPE_DMAT4X3 = 130,                  /* DMAT4X3  */
	SYMBOL_TYPE_DMAT4X4 = 131,                  /* DMAT4X4  */
	SYMBOL_TYPE_F16MAT2X2 = 132,                /* F16MAT2X2  */
	SYMBOL_TYPE_F16MAT2X3 = 133,                /* F16MAT2X3  */
	SYMBOL_TYPE_F16MAT2X4 = 134,                /* F16MAT2X4  */
	SYMBOL_TYPE_F16MAT3X2 = 135,                /* F16MAT3X2  */
	SYMBOL_TYPE_F16MAT3X3 = 136,                /* F16MAT3X3  */
	SYMBOL_TYPE_F16MAT3X4 = 137,                /* F16MAT3X4  */
	SYMBOL_TYPE_F16MAT4X2 = 138,                /* F16MAT4X2  */
	SYMBOL_TYPE_F16MAT4X3 = 139,                /* F16MAT4X3  */
	SYMBOL_TYPE_F16MAT4X4 = 140,                /* F16MAT4X4  */
	SYMBOL_TYPE_F32MAT2X2 = 141,                /* F32MAT2X2  */
	SYMBOL_TYPE_F32MAT2X3 = 142,                /* F32MAT2X3  */
	SYMBOL_TYPE_F32MAT2X4 = 143,                /* F32MAT2X4  */
	SYMBOL_TYPE_F32MAT3X2 = 144,                /* F32MAT3X2  */
	SYMBOL_TYPE_F32MAT3X3 = 145,                /* F32MAT3X3  */
	SYMBOL_TYPE_F32MAT3X4 = 146,                /* F32MAT3X4  */
	SYMBOL_TYPE_F32MAT4X2 = 147,                /* F32MAT4X2  */
	SYMBOL_TYPE_F32MAT4X3 = 148,                /* F32MAT4X3  */
	SYMBOL_TYPE_F32MAT4X4 = 149,                /* F32MAT4X4  */
	SYMBOL_TYPE_F64MAT2X2 = 150,                /* F64MAT2X2  */
	SYMBOL_TYPE_F64MAT2X3 = 151,                /* F64MAT2X3  */
	SYMBOL_TYPE_F64MAT2X4 = 152,                /* F64MAT2X4  */
	SYMBOL_TYPE_F64MAT3X2 = 153,                /* F64MAT3X2  */
	SYMBOL_TYPE_F64MAT3X3 = 154,                /* F64MAT3X3  */
	SYMBOL_TYPE_F64MAT3X4 = 155,                /* F64MAT3X4  */
	SYMBOL_TYPE_F64MAT4X2 = 156,                /* F64MAT4X2  */
	SYMBOL_TYPE_F64MAT4X3 = 157,                /* F64MAT4X3  */
	SYMBOL_TYPE_F64MAT4X4 = 158,                /* F64MAT4X4  */
	SYMBOL_TYPE_ATOMIC_UINT = 159,              /* ATOMIC_UINT  */
	SYMBOL_TYPE_ACCSTRUCTNV = 160,              /* ACCSTRUCTNV  */
	SYMBOL_TYPE_ACCSTRUCTEXT = 161,             /* ACCSTRUCTEXT  */
	SYMBOL_TYPE_RAYQUERYEXT = 162,              /* RAYQUERYEXT  */
	SYMBOL_TYPE_FCOOPMATNV = 163,               /* FCOOPMATNV  */
	SYMBOL_TYPE_ICOOPMATNV = 164,               /* ICOOPMATNV  */
	SYMBOL_TYPE_UCOOPMATNV = 165,               /* UCOOPMATNV  */
	SYMBOL_TYPE_HITOBJECTNV = 166,              /* HITOBJECTNV  */
	SYMBOL_TYPE_HITOBJECTATTRNV = 167,          /* HITOBJECTATTRNV  */
	SYMBOL_TYPE_SAMPLERCUBEARRAY = 168,         /* SAMPLERCUBEARRAY  */
	SYMBOL_TYPE_SAMPLERCUBEARRAYSHADOW = 169,   /* SAMPLERCUBEARRAYSHADOW  */
	SYMBOL_TYPE_ISAMPLERCUBEARRAY = 170,        /* ISAMPLERCUBEARRAY  */
	SYMBOL_TYPE_USAMPLERCUBEARRAY = 171,        /* USAMPLERCUBEARRAY  */
	SYMBOL_TYPE_SAMPLER1D = 172,                /* SAMPLER1D  */
	SYMBOL_TYPE_SAMPLER1DARRAY = 173,           /* SAMPLER1DARRAY  */
	SYMBOL_TYPE_SAMPLER1DARRAYSHADOW = 174,     /* SAMPLER1DARRAYSHADOW  */
	SYMBOL_TYPE_ISAMPLER1D = 175,               /* ISAMPLER1D  */
	SYMBOL_TYPE_SAMPLER1DSHADOW = 176,          /* SAMPLER1DSHADOW  */
	SYMBOL_TYPE_SAMPLER2DRECT = 177,            /* SAMPLER2DRECT  */
	SYMBOL_TYPE_SAMPLER2DRECTSHADOW = 178,      /* SAMPLER2DRECTSHADOW  */
	SYMBOL_TYPE_ISAMPLER2DRECT = 179,           /* ISAMPLER2DRECT  */
	SYMBOL_TYPE_USAMPLER2DRECT = 180,           /* USAMPLER2DRECT  */
	SYMBOL_TYPE_SAMPLERBUFFER = 181,            /* SAMPLERBUFFER  */
	SYMBOL_TYPE_ISAMPLERBUFFER = 182,           /* ISAMPLERBUFFER  */
	SYMBOL_TYPE_USAMPLERBUFFER = 183,           /* USAMPLERBUFFER  */
	SYMBOL_TYPE_SAMPLER2DMS = 184,              /* SAMPLER2DMS  */
	SYMBOL_TYPE_ISAMPLER2DMS = 185,             /* ISAMPLER2DMS  */
	SYMBOL_TYPE_USAMPLER2DMS = 186,             /* USAMPLER2DMS  */
	SYMBOL_TYPE_SAMPLER2DMSARRAY = 187,         /* SAMPLER2DMSARRAY  */
	SYMBOL_TYPE_ISAMPLER2DMSARRAY = 188,        /* ISAMPLER2DMSARRAY  */
	SYMBOL_TYPE_USAMPLER2DMSARRAY = 189,        /* USAMPLER2DMSARRAY  */
	SYMBOL_TYPE_SAMPLEREXTERNALOES = 190,       /* SAMPLEREXTERNALOES  */
	SYMBOL_TYPE_SAMPLEREXTERNAL2DY2YEXT = 191,  /* SAMPLEREXTERNAL2DY2YEXT  */
	SYMBOL_TYPE_ISAMPLER1DARRAY = 192,          /* ISAMPLER1DARRAY  */
	SYMBOL_TYPE_USAMPLER1D = 193,               /* USAMPLER1D  */
	SYMBOL_TYPE_USAMPLER1DARRAY = 194,          /* USAMPLER1DARRAY  */
	SYMBOL_TYPE_F16SAMPLER1D = 195,             /* F16SAMPLER1D  */
	SYMBOL_TYPE_F16SAMPLER2D = 196,             /* F16SAMPLER2D  */
	SYMBOL_TYPE_F16SAMPLER3D = 197,             /* F16SAMPLER3D  */
	SYMBOL_TYPE_F16SAMPLER2DRECT = 198,         /* F16SAMPLER2DRECT  */
	SYMBOL_TYPE_F16SAMPLERCUBE = 199,           /* F16SAMPLERCUBE  */
	SYMBOL_TYPE_F16SAMPLER1DARRAY = 200,        /* F16SAMPLER1DARRAY  */
	SYMBOL_TYPE_F16SAMPLER2DARRAY = 201,        /* F16SAMPLER2DARRAY  */
	SYMBOL_TYPE_F16SAMPLERCUBEARRAY = 202,      /* F16SAMPLERCUBEARRAY  */
	SYMBOL_TYPE_F16SAMPLERBUFFER = 203,         /* F16SAMPLERBUFFER  */
	SYMBOL_TYPE_F16SAMPLER2DMS = 204,           /* F16SAMPLER2DMS  */
	SYMBOL_TYPE_F16SAMPLER2DMSARRAY = 205,      /* F16SAMPLER2DMSARRAY  */
	SYMBOL_TYPE_F16SAMPLER1DSHADOW = 206,       /* F16SAMPLER1DSHADOW  */
	SYMBOL_TYPE_F16SAMPLER2DSHADOW = 207,       /* F16SAMPLER2DSHADOW  */
	SYMBOL_TYPE_F16SAMPLER1DARRAYSHADOW = 208,  /* F16SAMPLER1DARRAYSHADOW  */
	SYMBOL_TYPE_F16SAMPLER2DARRAYSHADOW = 209,  /* F16SAMPLER2DARRAYSHADOW  */
	SYMBOL_TYPE_F16SAMPLER2DRECTSHADOW = 210,   /* F16SAMPLER2DRECTSHADOW  */
	SYMBOL_TYPE_F16SAMPLERCUBESHADOW = 211,     /* F16SAMPLERCUBESHADOW  */
	SYMBOL_TYPE_F16SAMPLERCUBEARRAYSHADOW = 212, /* F16SAMPLERCUBEARRAYSHADOW  */
	SYMBOL_TYPE_IMAGE1D = 213,                  /* IMAGE1D  */
	SYMBOL_TYPE_IIMAGE1D = 214,                 /* IIMAGE1D  */
	SYMBOL_TYPE_UIMAGE1D = 215,                 /* UIMAGE1D  */
	SYMBOL_TYPE_IMAGE2D = 216,                  /* IMAGE2D  */
	SYMBOL_TYPE_IIMAGE2D = 217,                 /* IIMAGE2D  */
	SYMBOL_TYPE_UIMAGE2D = 218,                 /* UIMAGE2D  */
	SYMBOL_TYPE_IMAGE3D = 219,                  /* IMAGE3D  */
	SYMBOL_TYPE_IIMAGE3D = 220,                 /* IIMAGE3D  */
	SYMBOL_TYPE_UIMAGE3D = 221,                 /* UIMAGE3D  */
	SYMBOL_TYPE_IMAGE2DRECT = 222,              /* IMAGE2DRECT  */
	SYMBOL_TYPE_IIMAGE2DRECT = 223,             /* IIMAGE2DRECT  */
	SYMBOL_TYPE_UIMAGE2DRECT = 224,             /* UIMAGE2DRECT  */
	SYMBOL_TYPE_IMAGECUBE = 225,                /* IMAGECUBE  */
	SYMBOL_TYPE_IIMAGECUBE = 226,               /* IIMAGECUBE  */
	SYMBOL_TYPE_UIMAGECUBE = 227,               /* UIMAGECUBE  */
	SYMBOL_TYPE_IMAGEBUFFER = 228,              /* IMAGEBUFFER  */
	SYMBOL_TYPE_IIMAGEBUFFER = 229,             /* IIMAGEBUFFER  */
	SYMBOL_TYPE_UIMAGEBUFFER = 230,             /* UIMAGEBUFFER  */
	SYMBOL_TYPE_IMAGE1DARRAY = 231,             /* IMAGE1DARRAY  */
	SYMBOL_TYPE_IIMAGE1DARRAY = 232,            /* IIMAGE1DARRAY  */
	SYMBOL_TYPE_UIMAGE1DARRAY = 233,            /* UIMAGE1DARRAY  */
	SYMBOL_TYPE_IMAGE2DARRAY = 234,             /* IMAGE2DARRAY  */
	SYMBOL_TYPE_IIMAGE2DARRAY = 235,            /* IIMAGE2DARRAY  */
	SYMBOL_TYPE_UIMAGE2DARRAY = 236,            /* UIMAGE2DARRAY  */
	SYMBOL_TYPE_IMAGECUBEARRAY = 237,           /* IMAGECUBEARRAY  */
	SYMBOL_TYPE_IIMAGECUBEARRAY = 238,          /* IIMAGECUBEARRAY  */
	SYMBOL_TYPE_UIMAGECUBEARRAY = 239,          /* UIMAGECUBEARRAY  */
	SYMBOL_TYPE_IMAGE2DMS = 240,                /* IMAGE2DMS  */
	SYMBOL_TYPE_IIMAGE2DMS = 241,               /* IIMAGE2DMS  */
	SYMBOL_TYPE_UIMAGE2DMS = 242,               /* UIMAGE2DMS  */
	SYMBOL_TYPE_IMAGE2DMSARRAY = 243,           /* IMAGE2DMSARRAY  */
	SYMBOL_TYPE_IIMAGE2DMSARRAY = 244,          /* IIMAGE2DMSARRAY  */
	SYMBOL_TYPE_UIMAGE2DMSARRAY = 245,          /* UIMAGE2DMSARRAY  */
	SYMBOL_TYPE_F16IMAGE1D = 246,               /* F16IMAGE1D  */
	SYMBOL_TYPE_F16IMAGE2D = 247,               /* F16IMAGE2D  */
	SYMBOL_TYPE_F16IMAGE3D = 248,               /* F16IMAGE3D  */
	SYMBOL_TYPE_F16IMAGE2DRECT = 249,           /* F16IMAGE2DRECT  */
	SYMBOL_TYPE_F16IMAGECUBE = 250,             /* F16IMAGECUBE  */
	SYMBOL_TYPE_F16IMAGE1DARRAY = 251,          /* F16IMAGE1DARRAY  */
	SYMBOL_TYPE_F16IMAGE2DARRAY = 252,          /* F16IMAGE2DARRAY  */
	SYMBOL_TYPE_F16IMAGECUBEARRAY = 253,        /* F16IMAGECUBEARRAY  */
	SYMBOL_TYPE_F16IMAGEBUFFER = 254,           /* F16IMAGEBUFFER  */
	SYMBOL_TYPE_F16IMAGE2DMS = 255,             /* F16IMAGE2DMS  */
	SYMBOL_TYPE_F16IMAGE2DMSARRAY = 256,        /* F16IMAGE2DMSARRAY  */
	SYMBOL_TYPE_I64IMAGE1D = 257,               /* I64IMAGE1D  */
	SYMBOL_TYPE_U64IMAGE1D = 258,               /* U64IMAGE1D  */
	SYMBOL_TYPE_I64IMAGE2D = 259,               /* I64IMAGE2D  */
	SYMBOL_TYPE_U64IMAGE2D = 260,               /* U64IMAGE2D  */
	SYMBOL_TYPE_I64IMAGE3D = 261,               /* I64IMAGE3D  */
	SYMBOL_TYPE_U64IMAGE3D = 262,               /* U64IMAGE3D  */
	SYMBOL_TYPE_I64IMAGE2DRECT = 263,           /* I64IMAGE2DRECT  */
	SYMBOL_TYPE_U64IMAGE2DRECT = 264,           /* U64IMAGE2DRECT  */
	SYMBOL_TYPE_I64IMAGECUBE = 265,             /* I64IMAGECUBE  */
	SYMBOL_TYPE_U64IMAGECUBE = 266,             /* U64IMAGECUBE  */
	SYMBOL_TYPE_I64IMAGEBUFFER = 267,           /* I64IMAGEBUFFER  */
	SYMBOL_TYPE_U64IMAGEBUFFER = 268,           /* U64IMAGEBUFFER  */
	SYMBOL_TYPE_I64IMAGE1DARRAY = 269,          /* I64IMAGE1DARRAY  */
	SYMBOL_TYPE_U64IMAGE1DARRAY = 270,          /* U64IMAGE1DARRAY  */
	SYMBOL_TYPE_I64IMAGE2DARRAY = 271,          /* I64IMAGE2DARRAY  */
	SYMBOL_TYPE_U64IMAGE2DARRAY = 272,          /* U64IMAGE2DARRAY  */
	SYMBOL_TYPE_I64IMAGECUBEARRAY = 273,        /* I64IMAGECUBEARRAY  */
	SYMBOL_TYPE_U64IMAGECUBEARRAY = 274,        /* U64IMAGECUBEARRAY  */
	SYMBOL_TYPE_I64IMAGE2DMS = 275,             /* I64IMAGE2DMS  */
	SYMBOL_TYPE_U64IMAGE2DMS = 276,             /* U64IMAGE2DMS  */
	SYMBOL_TYPE_I64IMAGE2DMSARRAY = 277,        /* I64IMAGE2DMSARRAY  */
	SYMBOL_TYPE_U64IMAGE2DMSARRAY = 278,        /* U64IMAGE2DMSARRAY  */
	SYMBOL_TYPE_TEXTURECUBEARRAY = 279,         /* TEXTURECUBEARRAY  */
	SYMBOL_TYPE_ITEXTURECUBEARRAY = 280,        /* ITEXTURECUBEARRAY  */
	SYMBOL_TYPE_UTEXTURECUBEARRAY = 281,        /* UTEXTURECUBEARRAY  */
	SYMBOL_TYPE_TEXTURE1D = 282,                /* TEXTURE1D  */
	SYMBOL_TYPE_ITEXTURE1D = 283,               /* ITEXTURE1D  */
	SYMBOL_TYPE_UTEXTURE1D = 284,               /* UTEXTURE1D  */
	SYMBOL_TYPE_TEXTURE1DARRAY = 285,           /* TEXTURE1DARRAY  */
	SYMBOL_TYPE_ITEXTURE1DARRAY = 286,          /* ITEXTURE1DARRAY  */
	SYMBOL_TYPE_UTEXTURE1DARRAY = 287,          /* UTEXTURE1DARRAY  */
	SYMBOL_TYPE_TEXTURE2DRECT = 288,            /* TEXTURE2DRECT  */
	SYMBOL_TYPE_ITEXTURE2DRECT = 289,           /* ITEXTURE2DRECT  */
	SYMBOL_TYPE_UTEXTURE2DRECT = 290,           /* UTEXTURE2DRECT  */
	SYMBOL_TYPE_TEXTUREBUFFER = 291,            /* TEXTUREBUFFER  */
	SYMBOL_TYPE_ITEXTUREBUFFER = 292,           /* ITEXTUREBUFFER  */
	SYMBOL_TYPE_UTEXTUREBUFFER = 293,           /* UTEXTUREBUFFER  */
	SYMBOL_TYPE_TEXTURE2DMS = 294,              /* TEXTURE2DMS  */
	SYMBOL_TYPE_ITEXTURE2DMS = 295,             /* ITEXTURE2DMS  */
	SYMBOL_TYPE_UTEXTURE2DMS = 296,             /* UTEXTURE2DMS  */
	SYMBOL_TYPE_TEXTURE2DMSARRAY = 297,         /* TEXTURE2DMSARRAY  */
	SYMBOL_TYPE_ITEXTURE2DMSARRAY = 298,        /* ITEXTURE2DMSARRAY  */
	SYMBOL_TYPE_UTEXTURE2DMSARRAY = 299,        /* UTEXTURE2DMSARRAY  */
	SYMBOL_TYPE_F16TEXTURE1D = 300,             /* F16TEXTURE1D  */
	SYMBOL_TYPE_F16TEXTURE2D = 301,             /* F16TEXTURE2D  */
	SYMBOL_TYPE_F16TEXTURE3D = 302,             /* F16TEXTURE3D  */
	SYMBOL_TYPE_F16TEXTURE2DRECT = 303,         /* F16TEXTURE2DRECT  */
	SYMBOL_TYPE_F16TEXTURECUBE = 304,           /* F16TEXTURECUBE  */
	SYMBOL_TYPE_F16TEXTURE1DARRAY = 305,        /* F16TEXTURE1DARRAY  */
	SYMBOL_TYPE_F16TEXTURE2DARRAY = 306,        /* F16TEXTURE2DARRAY  */
	SYMBOL_TYPE_F16TEXTURECUBEARRAY = 307,      /* F16TEXTURECUBEARRAY  */
	SYMBOL_TYPE_F16TEXTUREBUFFER = 308,         /* F16TEXTUREBUFFER  */
	SYMBOL_TYPE_F16TEXTURE2DMS = 309,           /* F16TEXTURE2DMS  */
	SYMBOL_TYPE_F16TEXTURE2DMSARRAY = 310,      /* F16TEXTURE2DMSARRAY  */
	SYMBOL_TYPE_SUBPASSINPUT = 311,             /* SUBPASSINPUT  */
	SYMBOL_TYPE_SUBPASSINPUTMS = 312,           /* SUBPASSINPUTMS  */
	SYMBOL_TYPE_ISUBPASSINPUT = 313,            /* ISUBPASSINPUT  */
	SYMBOL_TYPE_ISUBPASSINPUTMS = 314,          /* ISUBPASSINPUTMS  */
	SYMBOL_TYPE_USUBPASSINPUT = 315,            /* USUBPASSINPUT  */
	SYMBOL_TYPE_USUBPASSINPUTMS = 316,          /* USUBPASSINPUTMS  */
	SYMBOL_TYPE_F16SUBPASSINPUT = 317,          /* F16SUBPASSINPUT  */
	SYMBOL_TYPE_F16SUBPASSINPUTMS = 318,        /* F16SUBPASSINPUTMS  */
	SYMBOL_TYPE_SPIRV_INSTRUCTION = 319,        /* SPIRV_INSTRUCTION  */
	SYMBOL_TYPE_SPIRV_EXECUTION_MODE = 320,     /* SPIRV_EXECUTION_MODE  */
	SYMBOL_TYPE_SPIRV_EXECUTION_MODE_ID = 321,  /* SPIRV_EXECUTION_MODE_ID  */
	SYMBOL_TYPE_SPIRV_DECORATE = 322,           /* SPIRV_DECORATE  */
	SYMBOL_TYPE_SPIRV_DECORATE_ID = 323,        /* SPIRV_DECORATE_ID  */
	SYMBOL_TYPE_SPIRV_DECORATE_STRING = 324,    /* SPIRV_DECORATE_STRING  */
	SYMBOL_TYPE_SPIRV_TYPE = 325,               /* SPIRV_TYPE  */
	SYMBOL_TYPE_SPIRV_STORAGE_CLASS = 326,      /* SPIRV_STORAGE_CLASS  */
	SYMBOL_TYPE_SPIRV_BY_REFERENCE = 327,       /* SPIRV_BY_REFERENCE  */
	SYMBOL_TYPE_SPIRV_LITERAL = 328,            /* SPIRV_LITERAL  */
	SYMBOL_TYPE_ATTACHMENTEXT = 329,            /* ATTACHMENTEXT  */
	SYMBOL_TYPE_IATTACHMENTEXT = 330,           /* IATTACHMENTEXT  */
	SYMBOL_TYPE_UATTACHMENTEXT = 331,           /* UATTACHMENTEXT  */
	SYMBOL_TYPE_LEFT_OP = 332,                  /* LEFT_OP  */
	SYMBOL_TYPE_RIGHT_OP = 333,                 /* RIGHT_OP  */
	SYMBOL_TYPE_INC_OP = 334,                   /* INC_OP  */
	SYMBOL_TYPE_DEC_OP = 335,                   /* DEC_OP  */
	SYMBOL_TYPE_LE_OP = 336,                    /* LE_OP  */
	SYMBOL_TYPE_GE_OP = 337,                    /* GE_OP  */
	SYMBOL_TYPE_EQ_OP = 338,                    /* EQ_OP  */
	SYMBOL_TYPE_NE_OP = 339,                    /* NE_OP  */
	SYMBOL_TYPE_AND_OP = 340,                   /* AND_OP  */
	SYMBOL_TYPE_OR_OP = 341,                    /* OR_OP  */
	SYMBOL_TYPE_XOR_OP = 342,                   /* XOR_OP  */
	SYMBOL_TYPE_MUL_ASSIGN = 343,               /* MUL_ASSIGN  */
	SYMBOL_TYPE_DIV_ASSIGN = 344,               /* DIV_ASSIGN  */
	SYMBOL_TYPE_ADD_ASSIGN = 345,               /* ADD_ASSIGN  */
	SYMBOL_TYPE_MOD_ASSIGN = 346,               /* MOD_ASSIGN  */
	SYMBOL_TYPE_LEFT_ASSIGN = 347,              /* LEFT_ASSIGN  */
	SYMBOL_TYPE_RIGHT_ASSIGN = 348,             /* RIGHT_ASSIGN  */
	SYMBOL_TYPE_AND_ASSIGN = 349,               /* AND_ASSIGN  */
	SYMBOL_TYPE_XOR_ASSIGN = 350,               /* XOR_ASSIGN  */
	SYMBOL_TYPE_OR_ASSIGN = 351,                /* OR_ASSIGN  */
	SYMBOL_TYPE_SUB_ASSIGN = 352,               /* SUB_ASSIGN  */
	SYMBOL_TYPE_STRING_LITERAL = 353,           /* STRING_LITERAL  */
	SYMBOL_TYPE_LEFT_PAREN = 354,               /* LEFT_PAREN  */
	SYMBOL_TYPE_RIGHT_PAREN = 355,              /* RIGHT_PAREN  */
	SYMBOL_TYPE_LEFT_BRACKET = 356,             /* LEFT_BRACKET  */
	SYMBOL_TYPE_RIGHT_BRACKET = 357,            /* RIGHT_BRACKET  */
	SYMBOL_TYPE_LEFT_BRACE = 358,               /* LEFT_BRACE  */
	SYMBOL_TYPE_RIGHT_BRACE = 359,              /* RIGHT_BRACE  */
	SYMBOL_TYPE_DOT = 360,                      /* DOT  */
	SYMBOL_TYPE_COMMA = 361,                    /* COMMA  */
	SYMBOL_TYPE_COLON = 362,                    /* COLON  */
	SYMBOL_TYPE_EQUAL = 363,                    /* EQUAL  */
	SYMBOL_TYPE_SEMICOLON = 364,                /* SEMICOLON  */
	SYMBOL_TYPE_BANG = 365,                     /* BANG  */
	SYMBOL_TYPE_DASH = 366,                     /* DASH  */
	SYMBOL_TYPE_TILDE = 367,                    /* TILDE  */
	SYMBOL_TYPE_PLUS = 368,                     /* PLUS  */
	SYMBOL_TYPE_STAR = 369,                     /* STAR  */
	SYMBOL_TYPE_SLASH = 370,                    /* SLASH  */
	SYMBOL_TYPE_PERCENT = 371,                  /* PERCENT  */
	SYMBOL_TYPE_LEFT_ANGLE = 372,               /* LEFT_ANGLE  */
	SYMBOL_TYPE_RIGHT_ANGLE = 373,              /* RIGHT_ANGLE  */
	SYMBOL_TYPE_VERTICAL_BAR = 374,             /* VERTICAL_BAR  */
	SYMBOL_TYPE_CARET = 375,                    /* CARET  */
	SYMBOL_TYPE_AMPERSAND = 376,                /* AMPERSAND  */
	SYMBOL_TYPE_QUESTION = 377,                 /* QUESTION  */
	SYMBOL_TYPE_INVARIANT = 378,                /* INVARIANT  */
	SYMBOL_TYPE_HIGH_PRECISION = 379,           /* HIGH_PRECISION  */
	SYMBOL_TYPE_MEDIUM_PRECISION = 380,         /* MEDIUM_PRECISION  */
	SYMBOL_TYPE_LOW_PRECISION = 381,            /* LOW_PRECISION  */
	SYMBOL_TYPE_PRECISION = 382,                /* PRECISION  */
	SYMBOL_TYPE_PACKED = 383,                   /* PACKED  */
	SYMBOL_TYPE_RESOURCE = 384,                 /* RESOURCE  */
	SYMBOL_TYPE_SUPERP = 385,                   /* SUPERP  */
	SYMBOL_TYPE_FLOATCONSTANT = 386,            /* FLOATCONSTANT  */
	SYMBOL_TYPE_INTCONSTANT = 387,              /* INTCONSTANT  */
	SYMBOL_TYPE_UINTCONSTANT = 388,             /* UINTCONSTANT  */
	SYMBOL_TYPE_BOOLCONSTANT = 389,             /* BOOLCONSTANT  */
	SYMBOL_TYPE_IDENTIFIER = 390,               /* IDENTIFIER  */
	SYMBOL_TYPE_TYPE_NAME = 391,                /* TYPE_NAME  */
	SYMBOL_TYPE_CENTROID = 392,                 /* CENTROID  */
	SYMBOL_TYPE_IN = 393,                       /* IN  */
	SYMBOL_TYPE_OUT = 394,                      /* OUT  */
	SYMBOL_TYPE_INOUT = 395,                    /* INOUT  */
	SYMBOL_TYPE_STRUCT = 396,                   /* STRUCT  */
	SYMBOL_TYPE_VOID = 397,                     /* VOID  */
	SYMBOL_TYPE_WHILE = 398,                    /* WHILE  */
	SYMBOL_TYPE_BREAK = 399,                    /* BREAK  */
	SYMBOL_TYPE_CONTINUE = 400,                 /* CONTINUE  */
	SYMBOL_TYPE_DO = 401,                       /* DO  */
	SYMBOL_TYPE_ELSE = 402,                     /* ELSE  */
	SYMBOL_TYPE_FOR = 403,                      /* FOR  */
	SYMBOL_TYPE_IF = 404,                       /* IF  */
	SYMBOL_TYPE_DISCARD = 405,                  /* DISCARD  */
	SYMBOL_TYPE_RETURN = 406,                   /* RETURN  */
	SYMBOL_TYPE_SWITCH = 407,                   /* SWITCH  */
	SYMBOL_TYPE_CASE = 408,                     /* CASE  */
	SYMBOL_TYPE_DEFAULT = 409,                  /* DEFAULT  */
	SYMBOL_TYPE_TERMINATE_INVOCATION = 410,     /* TERMINATE_INVOCATION  */
	SYMBOL_TYPE_TERMINATE_RAY = 411,            /* TERMINATE_RAY  */
	SYMBOL_TYPE_IGNORE_INTERSECTION = 412,      /* IGNORE_INTERSECTION  */
	SYMBOL_TYPE_UNIFORM = 413,                  /* UNIFORM  */
	SYMBOL_TYPE_SHARED = 414,                   /* SHARED  */
	SYMBOL_TYPE_BUFFER = 415,                   /* BUFFER  */
	SYMBOL_TYPE_TILEIMAGEEXT = 416,             /* TILEIMAGEEXT  */
	SYMBOL_TYPE_FLAT = 417,                     /* FLAT  */
	SYMBOL_TYPE_SMOOTH = 418,                   /* SMOOTH  */
	SYMBOL_TYPE_LAYOUT = 419,                   /* LAYOUT  */
	SYMBOL_TYPE_DOUBLECONSTANT = 420,           /* DOUBLECONSTANT  */
	SYMBOL_TYPE_INT16CONSTANT = 421,            /* INT16CONSTANT  */
	SYMBOL_TYPE_UINT16CONSTANT = 422,           /* UINT16CONSTANT  */
	SYMBOL_TYPE_FLOAT16CONSTANT = 423,          /* FLOAT16CONSTANT  */
	SYMBOL_TYPE_INT32CONSTANT = 424,            /* INT32CONSTANT  */
	SYMBOL_TYPE_UINT32CONSTANT = 425,           /* UINT32CONSTANT  */
	SYMBOL_TYPE_INT64CONSTANT = 426,            /* INT64CONSTANT  */
	SYMBOL_TYPE_UINT64CONSTANT = 427,           /* UINT64CONSTANT  */
	SYMBOL_TYPE_SUBROUTINE = 428,               /* SUBROUTINE  */
	SYMBOL_TYPE_DEMOTE = 429,                   /* DEMOTE  */
	SYMBOL_TYPE_PAYLOADNV = 430,                /* PAYLOADNV  */
	SYMBOL_TYPE_PAYLOADINNV = 431,              /* PAYLOADINNV  */
	SYMBOL_TYPE_HITATTRNV = 432,                /* HITATTRNV  */
	SYMBOL_TYPE_CALLDATANV = 433,               /* CALLDATANV  */
	SYMBOL_TYPE_CALLDATAINNV = 434,             /* CALLDATAINNV  */
	SYMBOL_TYPE_PAYLOADEXT = 435,               /* PAYLOADEXT  */
	SYMBOL_TYPE_PAYLOADINEXT = 436,             /* PAYLOADINEXT  */
	SYMBOL_TYPE_HITATTREXT = 437,               /* HITATTREXT  */
	SYMBOL_TYPE_CALLDATAEXT = 438,              /* CALLDATAEXT  */
	SYMBOL_TYPE_CALLDATAINEXT = 439,            /* CALLDATAINEXT  */
	SYMBOL_TYPE_PATCH = 440,                    /* PATCH  */
	SYMBOL_TYPE_SAMPLE = 441,                   /* SAMPLE  */
	SYMBOL_TYPE_NONUNIFORM = 442,               /* NONUNIFORM  */
	SYMBOL_TYPE_COHERENT = 443,                 /* COHERENT  */
	SYMBOL_TYPE_VOLATILE = 444,                 /* VOLATILE  */
	SYMBOL_TYPE_RESTRICT = 445,                 /* RESTRICT  */
	SYMBOL_TYPE_READONLY = 446,                 /* READONLY  */
	SYMBOL_TYPE_WRITEONLY = 447,                /* WRITEONLY  */
	SYMBOL_TYPE_DEVICECOHERENT = 448,           /* DEVICECOHERENT  */
	SYMBOL_TYPE_QUEUEFAMILYCOHERENT = 449,      /* QUEUEFAMILYCOHERENT  */
	SYMBOL_TYPE_WORKGROUPCOHERENT = 450,        /* WORKGROUPCOHERENT  */
	SYMBOL_TYPE_SUBGROUPCOHERENT = 451,         /* SUBGROUPCOHERENT  */
	SYMBOL_TYPE_NONPRIVATE = 452,               /* NONPRIVATE  */
	SYMBOL_TYPE_SHADERCALLCOHERENT = 453,       /* SHADERCALLCOHERENT  */
	SYMBOL_TYPE_NOPERSPECTIVE = 454,            /* NOPERSPECTIVE  */
	SYMBOL_TYPE_EXPLICITINTERPAMD = 455,        /* EXPLICITINTERPAMD  */
	SYMBOL_TYPE_PERVERTEXEXT = 456,             /* PERVERTEXEXT  */
	SYMBOL_TYPE_PERVERTEXNV = 457,              /* PERVERTEXNV  */
	SYMBOL_TYPE_PERPRIMITIVENV = 458,           /* PERPRIMITIVENV  */
	SYMBOL_TYPE_PERVIEWNV = 459,                /* PERVIEWNV  */
	SYMBOL_TYPE_PERTASKNV = 460,                /* PERTASKNV  */
	SYMBOL_TYPE_PERPRIMITIVEEXT = 461,          /* PERPRIMITIVEEXT  */
	SYMBOL_TYPE_TASKPAYLOADWORKGROUPEXT = 462,  /* TASKPAYLOADWORKGROUPEXT  */
	SYMBOL_TYPE_PRECISE = 463,                  /* PRECISE  */
	SYMBOL_TYPE_YYACCEPT = 464,                 /* $accept  */
	SYMBOL_TYPE_variable_identifier = 465,      /* variable_identifier  */
	SYMBOL_TYPE_primary_expression = 466,       /* primary_expression  */
	SYMBOL_TYPE_postfix_expression = 467,       /* postfix_expression  */
	SYMBOL_TYPE_integer_expression = 468,       /* integer_expression  */
	SYMBOL_TYPE_function_call = 469,            /* function_call  */
	SYMBOL_TYPE_function_call_or_method = 470,  /* function_call_or_method  */
	SYMBOL_TYPE_function_call_generic = 471,    /* function_call_generic  */
	SYMBOL_TYPE_function_call_header_no_parameters = 472, /* function_call_header_no_parameters  */
	SYMBOL_TYPE_function_call_header_with_parameters = 473, /* function_call_header_with_parameters  */
	SYMBOL_TYPE_function_call_header = 474,     /* function_call_header  */
	SYMBOL_TYPE_function_identifier = 475,      /* function_identifier  */
	SYMBOL_TYPE_unary_expression = 476,         /* unary_expression  */
	SYMBOL_TYPE_unary_operator = 477,           /* unary_operator  */
	SYMBOL_TYPE_multiplicative_expression = 478, /* multiplicative_expression  */
	SYMBOL_TYPE_additive_expression = 479,      /* additive_expression  */
	SYMBOL_TYPE_shift_expression = 480,         /* shift_expression  */
	SYMBOL_TYPE_relational_expression = 481,    /* relational_expression  */
	SYMBOL_TYPE_equality_expression = 482,      /* equality_expression  */
	SYMBOL_TYPE_and_expression = 483,           /* and_expression  */
	SYMBOL_TYPE_exclusive_or_expression = 484,  /* exclusive_or_expression  */
	SYMBOL_TYPE_inclusive_or_expression = 485,  /* inclusive_or_expression  */
	SYMBOL_TYPE_logical_and_expression = 486,   /* logical_and_expression  */
	SYMBOL_TYPE_logical_xor_expression = 487,   /* logical_xor_expression  */
	SYMBOL_TYPE_logical_or_expression = 488,    /* logical_or_expression  */
	SYMBOL_TYPE_conditional_expression = 489,   /* conditional_expression  */
	SYMBOL_TYPE_490_1 = 490,                    /* $@1  */
	SYMBOL_TYPE_assignment_expression = 491,    /* assignment_expression  */
	SYMBOL_TYPE_assignment_operator = 492,      /* assignment_operator  */
	SYMBOL_TYPE_expression = 493,               /* expression  */
	SYMBOL_TYPE_constant_expression = 494,      /* constant_expression  */
	SYMBOL_TYPE_declaration = 495,              /* declaration  */
	SYMBOL_TYPE_block_structure = 496,          /* block_structure  */
	SYMBOL_TYPE_497_2 = 497,                    /* $@2  */
	SYMBOL_TYPE_identifier_list = 498,          /* identifier_list  */
	SYMBOL_TYPE_function_prototype = 499,       /* function_prototype  */
	SYMBOL_TYPE_function_declarator = 500,      /* function_declarator  */
	SYMBOL_TYPE_function_header_with_parameters = 501, /* function_header_with_parameters  */
	SYMBOL_TYPE_function_header = 502,          /* function_header  */
	SYMBOL_TYPE_parameter_declarator = 503,     /* parameter_declarator  */
	SYMBOL_TYPE_parameter_declaration = 504,    /* parameter_declaration  */
	SYMBOL_TYPE_parameter_type_specifier = 505, /* parameter_type_specifier  */
	SYMBOL_TYPE_init_declarator_list = 506,     /* init_declarator_list  */
	SYMBOL_TYPE_single_declaration = 507,       /* single_declaration  */
	SYMBOL_TYPE_fully_specified_type = 508,     /* fully_specified_type  */
	SYMBOL_TYPE_invariant_qualifier = 509,      /* invariant_qualifier  */
	SYMBOL_TYPE_interpolation_qualifier = 510,  /* interpolation_qualifier  */
	SYMBOL_TYPE_layout_qualifier = 511,         /* layout_qualifier  */
	SYMBOL_TYPE_layout_qualifier_id_list = 512, /* layout_qualifier_id_list  */
	SYMBOL_TYPE_layout_qualifier_id = 513,      /* layout_qualifier_id  */
	SYMBOL_TYPE_precise_qualifier = 514,        /* precise_qualifier  */
	SYMBOL_TYPE_type_qualifier = 515,           /* type_qualifier  */
	SYMBOL_TYPE_single_type_qualifier = 516,    /* single_type_qualifier  */
	SYMBOL_TYPE_storage_qualifier = 517,        /* storage_qualifier  */
	SYMBOL_TYPE_non_uniform_qualifier = 518,    /* non_uniform_qualifier  */
	SYMBOL_TYPE_type_name_list = 519,           /* type_name_list  */
	SYMBOL_TYPE_type_specifier = 520,           /* type_specifier  */
	SYMBOL_TYPE_array_specifier = 521,          /* array_specifier  */
	SYMBOL_TYPE_type_parameter_specifier_opt = 522, /* type_parameter_specifier_opt  */
	SYMBOL_TYPE_type_parameter_specifier = 523, /* type_parameter_specifier  */
	SYMBOL_TYPE_type_parameter_specifier_list = 524, /* type_parameter_specifier_list  */
	SYMBOL_TYPE_type_specifier_nonarray = 525,  /* type_specifier_nonarray  */
	SYMBOL_TYPE_precision_qualifier = 526,      /* precision_qualifier  */
	SYMBOL_TYPE_struct_specifier = 527,         /* struct_specifier  */
	SYMBOL_TYPE_528_3 = 528,                    /* $@3  */
	SYMBOL_TYPE_529_4 = 529,                    /* $@4  */
	SYMBOL_TYPE_struct_declaration_list = 530,  /* struct_declaration_list  */
	SYMBOL_TYPE_struct_declaration = 531,       /* struct_declaration  */
	SYMBOL_TYPE_struct_declarator_list = 532,   /* struct_declarator_list  */
	SYMBOL_TYPE_struct_declarator = 533,        /* struct_declarator  */
	SYMBOL_TYPE_initializer = 534,              /* initializer  */
	SYMBOL_TYPE_initializer_list = 535,         /* initializer_list  */
	SYMBOL_TYPE_declaration_statement = 536,    /* declaration_statement  */
	SYMBOL_TYPE_statement = 537,                /* statement  */
	SYMBOL_TYPE_simple_statement = 538,         /* simple_statement  */
	SYMBOL_TYPE_demote_statement = 539,         /* demote_statement  */
	SYMBOL_TYPE_compound_statement = 540,       /* compound_statement  */
	SYMBOL_TYPE_541_5 = 541,                    /* $@5  */
	SYMBOL_TYPE_542_6 = 542,                    /* $@6  */
	SYMBOL_TYPE_statement_no_new_scope = 543,   /* statement_no_new_scope  */
	SYMBOL_TYPE_statement_scoped = 544,         /* statement_scoped  */
	SYMBOL_TYPE_545_7 = 545,                    /* $@7  */
	SYMBOL_TYPE_546_8 = 546,                    /* $@8  */
	SYMBOL_TYPE_compound_statement_no_new_scope = 547, /* compound_statement_no_new_scope  */
	SYMBOL_TYPE_statement_list = 548,           /* statement_list  */
	SYMBOL_TYPE_expression_statement = 549,     /* expression_statement  */
	SYMBOL_TYPE_selection_statement = 550,      /* selection_statement  */
	SYMBOL_TYPE_selection_statement_nonattributed = 551, /* selection_statement_nonattributed  */
	SYMBOL_TYPE_selection_rest_statement = 552, /* selection_rest_statement  */
	SYMBOL_TYPE_condition = 553,                /* condition  */
	SYMBOL_TYPE_switch_statement = 554,         /* switch_statement  */
	SYMBOL_TYPE_switch_statement_nonattributed = 555, /* switch_statement_nonattributed  */
	SYMBOL_TYPE_556_9 = 556,                    /* $@9  */
	SYMBOL_TYPE_switch_statement_list = 557,    /* switch_statement_list  */
	SYMBOL_TYPE_case_label = 558,               /* case_label  */
	SYMBOL_TYPE_iteration_statement = 559,      /* iteration_statement  */
	SYMBOL_TYPE_iteration_statement_nonattributed = 560, /* iteration_statement_nonattributed  */
	SYMBOL_TYPE_561_10 = 561,                   /* $@10  */
	SYMBOL_TYPE_562_11 = 562,                   /* $@11  */
	SYMBOL_TYPE_563_12 = 563,                   /* $@12  */
	SYMBOL_TYPE_for_init_statement = 564,       /* for_init_statement  */
	SYMBOL_TYPE_conditionopt = 565,             /* conditionopt  */
	SYMBOL_TYPE_for_rest_statement = 566,       /* for_rest_statement  */
	SYMBOL_TYPE_jump_statement = 567,           /* jump_statement  */
	SYMBOL_TYPE_translation_unit = 568,         /* translation_unit  */
	SYMBOL_TYPE_external_declaration = 569,     /* external_declaration  */
	SYMBOL_TYPE_function_definition = 570,      /* function_definition  */
	SYMBOL_TYPE_571_13 = 571,                   /* $@13  */
	SYMBOL_TYPE_attribute = 572,                /* attribute  */
	SYMBOL_TYPE_attribute_list = 573,           /* attribute_list  */
	SYMBOL_TYPE_single_attribute = 574,         /* single_attribute  */
	SYMBOL_TYPE_spirv_requirements_list = 575,  /* spirv_requirements_list  */
	SYMBOL_TYPE_spirv_requirements_parameter = 576, /* spirv_requirements_parameter  */
	SYMBOL_TYPE_spirv_extension_list = 577,     /* spirv_extension_list  */
	SYMBOL_TYPE_spirv_capability_list = 578,    /* spirv_capability_list  */
	SYMBOL_TYPE_spirv_execution_mode_qualifier = 579, /* spirv_execution_mode_qualifier  */
	SYMBOL_TYPE_spirv_execution_mode_parameter_list = 580, /* spirv_execution_mode_parameter_list  */
	SYMBOL_TYPE_spirv_execution_mode_parameter = 581, /* spirv_execution_mode_parameter  */
	SYMBOL_TYPE_spirv_execution_mode_id_parameter_list = 582, /* spirv_execution_mode_id_parameter_list  */
	SYMBOL_TYPE_spirv_storage_class_qualifier = 583, /* spirv_storage_class_qualifier  */
	SYMBOL_TYPE_spirv_decorate_qualifier = 584, /* spirv_decorate_qualifier  */
	SYMBOL_TYPE_spirv_decorate_parameter_list = 585, /* spirv_decorate_parameter_list  */
	SYMBOL_TYPE_spirv_decorate_parameter = 586, /* spirv_decorate_parameter  */
	SYMBOL_TYPE_spirv_decorate_id_parameter_list = 587, /* spirv_decorate_id_parameter_list  */
	SYMBOL_TYPE_spirv_decorate_id_parameter = 588, /* spirv_decorate_id_parameter  */
	SYMBOL_TYPE_spirv_decorate_string_parameter_list = 589, /* spirv_decorate_string_parameter_list  */
	SYMBOL_TYPE_spirv_type_specifier = 590,     /* spirv_type_specifier  */
	SYMBOL_TYPE_spirv_type_parameter_list = 591, /* spirv_type_parameter_list  */
	SYMBOL_TYPE_spirv_type_parameter = 592,     /* spirv_type_parameter  */
	SYMBOL_TYPE_spirv_instruction_qualifier = 593, /* spirv_instruction_qualifier  */
	SYMBOL_TYPE_spirv_instruction_qualifier_list = 594, /* spirv_instruction_qualifier_list  */
	SYMBOL_TYPE_spirv_instruction_qualifier_id = 595 /* spirv_instruction_qualifier_id  */
};

enum OperatorType
{
	EOpNull,            // if in a node, should only mean a node is still being built
	EOpSequence,        // denotes a list of statements, or parameters, etc.
	EOpScope,           // Used by debugging to denote a scoped list of statements
	EOpLinkerObjects,   // for aggregate node of objects the linker may need, if not reference by the rest of the AST
	EOpFunctionCall,
	EOpFunction,        // For function definition
	EOpParameters,      // an aggregate listing the parameters to a function
	EOpSpirvInst,

	//
	// Unary operators
	//

	EOpNegative,
	EOpLogicalNot,
	EOpVectorLogicalNot,
	EOpBitwiseNot,

	EOpPostIncrement,
	EOpPostDecrement,
	EOpPreIncrement,
	EOpPreDecrement,

	EOpCopyObject,

	EOpDeclare,        // Used by debugging to force declaration of variable in correct scope

	// (u)int* -> bool
	EOpConvInt8ToBool,
	EOpConvUint8ToBool,
	EOpConvInt16ToBool,
	EOpConvUint16ToBool,
	EOpConvIntToBool,
	EOpConvUintToBool,
	EOpConvInt64ToBool,
	EOpConvUint64ToBool,

	// float* -> bool
	EOpConvFloat16ToBool,
	EOpConvFloatToBool,
	EOpConvDoubleToBool,

	// bool -> (u)int*
	EOpConvBoolToInt8,
	EOpConvBoolToUint8,
	EOpConvBoolToInt16,
	EOpConvBoolToUint16,
	EOpConvBoolToInt,
	EOpConvBoolToUint,
	EOpConvBoolToInt64,
	EOpConvBoolToUint64,

	// bool -> float*
	EOpConvBoolToFloat16,
	EOpConvBoolToFloat,
	EOpConvBoolToDouble,

	// int8_t -> (u)int*
	EOpConvInt8ToInt16,
	EOpConvInt8ToInt,
	EOpConvInt8ToInt64,
	EOpConvInt8ToUint8,
	EOpConvInt8ToUint16,
	EOpConvInt8ToUint,
	EOpConvInt8ToUint64,

	// uint8_t -> (u)int*
	EOpConvUint8ToInt8,
	EOpConvUint8ToInt16,
	EOpConvUint8ToInt,
	EOpConvUint8ToInt64,
	EOpConvUint8ToUint16,
	EOpConvUint8ToUint,
	EOpConvUint8ToUint64,

	// int8_t -> float*
	EOpConvInt8ToFloat16,
	EOpConvInt8ToFloat,
	EOpConvInt8ToDouble,

	// uint8_t -> float*
	EOpConvUint8ToFloat16,
	EOpConvUint8ToFloat,
	EOpConvUint8ToDouble,

	// int16_t -> (u)int*
	EOpConvInt16ToInt8,
	EOpConvInt16ToInt,
	EOpConvInt16ToInt64,
	EOpConvInt16ToUint8,
	EOpConvInt16ToUint16,
	EOpConvInt16ToUint,
	EOpConvInt16ToUint64,

	// uint16_t -> (u)int*
	EOpConvUint16ToInt8,
	EOpConvUint16ToInt16,
	EOpConvUint16ToInt,
	EOpConvUint16ToInt64,
	EOpConvUint16ToUint8,
	EOpConvUint16ToUint,
	EOpConvUint16ToUint64,

	// int16_t -> float*
	EOpConvInt16ToFloat16,
	EOpConvInt16ToFloat,
	EOpConvInt16ToDouble,

	// uint16_t -> float*
	EOpConvUint16ToFloat16,
	EOpConvUint16ToFloat,
	EOpConvUint16ToDouble,

	// int32_t -> (u)int*
	EOpConvIntToInt8,
	EOpConvIntToInt16,
	EOpConvIntToInt64,
	EOpConvIntToUint8,
	EOpConvIntToUint16,
	EOpConvIntToUint,
	EOpConvIntToUint64,

	// uint32_t -> (u)int*
	EOpConvUintToInt8,
	EOpConvUintToInt16,
	EOpConvUintToInt,
	EOpConvUintToInt64,
	EOpConvUintToUint8,
	EOpConvUintToUint16,
	EOpConvUintToUint64,

	// int32_t -> float*
	EOpConvIntToFloat16,
	EOpConvIntToFloat,
	EOpConvIntToDouble,

	// uint32_t -> float*
	EOpConvUintToFloat16,
	EOpConvUintToFloat,
	EOpConvUintToDouble,

	// int64_t -> (u)int*
	EOpConvInt64ToInt8,
	EOpConvInt64ToInt16,
	EOpConvInt64ToInt,
	EOpConvInt64ToUint8,
	EOpConvInt64ToUint16,
	EOpConvInt64ToUint,
	EOpConvInt64ToUint64,

	// uint64_t -> (u)int*
	EOpConvUint64ToInt8,
	EOpConvUint64ToInt16,
	EOpConvUint64ToInt,
	EOpConvUint64ToInt64,
	EOpConvUint64ToUint8,
	EOpConvUint64ToUint16,
	EOpConvUint64ToUint,

	// int64_t -> float*
	EOpConvInt64ToFloat16,
	EOpConvInt64ToFloat,
	EOpConvInt64ToDouble,

	// uint64_t -> float*
	EOpConvUint64ToFloat16,
	EOpConvUint64ToFloat,
	EOpConvUint64ToDouble,

	// float16_t -> (u)int*
	EOpConvFloat16ToInt8,
	EOpConvFloat16ToInt16,
	EOpConvFloat16ToInt,
	EOpConvFloat16ToInt64,
	EOpConvFloat16ToUint8,
	EOpConvFloat16ToUint16,
	EOpConvFloat16ToUint,
	EOpConvFloat16ToUint64,

	// float16_t -> float*
	EOpConvFloat16ToFloat,
	EOpConvFloat16ToDouble,

	// float -> (u)int*
	EOpConvFloatToInt8,
	EOpConvFloatToInt16,
	EOpConvFloatToInt,
	EOpConvFloatToInt64,
	EOpConvFloatToUint8,
	EOpConvFloatToUint16,
	EOpConvFloatToUint,
	EOpConvFloatToUint64,

	// float -> float*
	EOpConvFloatToFloat16,
	EOpConvFloatToDouble,

	// float64 _t-> (u)int*
	EOpConvDoubleToInt8,
	EOpConvDoubleToInt16,
	EOpConvDoubleToInt,
	EOpConvDoubleToInt64,
	EOpConvDoubleToUint8,
	EOpConvDoubleToUint16,
	EOpConvDoubleToUint,
	EOpConvDoubleToUint64,

	// float64_t -> float*
	EOpConvDoubleToFloat16,
	EOpConvDoubleToFloat,

	// uint64_t <-> pointer
	EOpConvUint64ToPtr,
	EOpConvPtrToUint64,

	// uvec2 <-> pointer
	EOpConvUvec2ToPtr,
	EOpConvPtrToUvec2,

	// uint64_t -> accelerationStructureEXT
	EOpConvUint64ToAccStruct,

	// uvec2 -> accelerationStructureEXT
	EOpConvUvec2ToAccStruct,

	//
	// binary operations
	//

	EOpAdd,
	EOpSub,
	EOpMul,
	EOpDiv,
	EOpMod,
	EOpRightShift,
	EOpLeftShift,
	EOpAnd,
	EOpInclusiveOr,
	EOpExclusiveOr,
	EOpEqual,
	EOpNotEqual,
	EOpVectorEqual,
	EOpVectorNotEqual,
	EOpLessThan,
	EOpGreaterThan,
	EOpLessThanEqual,
	EOpGreaterThanEqual,
	EOpComma,

	EOpVectorTimesScalar,
	EOpVectorTimesMatrix,
	EOpMatrixTimesVector,
	EOpMatrixTimesScalar,

	EOpLogicalOr,
	EOpLogicalXor,
	EOpLogicalAnd,

	EOpIndexDirect,
	EOpIndexIndirect,
	EOpIndexDirectStruct,

	EOpVectorSwizzle,

	EOpMethod,
	EOpScoping,

	//
	// Built-in functions mapped to operators
	//

	EOpRadians,
	EOpDegrees,
	EOpSin,
	EOpCos,
	EOpTan,
	EOpAsin,
	EOpAcos,
	EOpAtan,
	EOpSinh,
	EOpCosh,
	EOpTanh,
	EOpAsinh,
	EOpAcosh,
	EOpAtanh,

	EOpPow,
	EOpExp,
	EOpLog,
	EOpExp2,
	EOpLog2,
	EOpSqrt,
	EOpInverseSqrt,

	EOpAbs,
	EOpSign,
	EOpFloor,
	EOpTrunc,
	EOpRound,
	EOpRoundEven,
	EOpCeil,
	EOpFract,
	EOpModf,
	EOpMin,
	EOpMax,
	EOpClamp,
	EOpMix,
	EOpStep,
	EOpSmoothStep,

	EOpIsNan,
	EOpIsInf,

	EOpFma,

	EOpFrexp,
	EOpLdexp,

	EOpFloatBitsToInt,
	EOpFloatBitsToUint,
	EOpIntBitsToFloat,
	EOpUintBitsToFloat,
	EOpDoubleBitsToInt64,
	EOpDoubleBitsToUint64,
	EOpInt64BitsToDouble,
	EOpUint64BitsToDouble,
	EOpFloat16BitsToInt16,
	EOpFloat16BitsToUint16,
	EOpInt16BitsToFloat16,
	EOpUint16BitsToFloat16,
	EOpPackSnorm2x16,
	EOpUnpackSnorm2x16,
	EOpPackUnorm2x16,
	EOpUnpackUnorm2x16,
	EOpPackSnorm4x8,
	EOpUnpackSnorm4x8,
	EOpPackUnorm4x8,
	EOpUnpackUnorm4x8,
	EOpPackHalf2x16,
	EOpUnpackHalf2x16,
	EOpPackDouble2x32,
	EOpUnpackDouble2x32,
	EOpPackInt2x32,
	EOpUnpackInt2x32,
	EOpPackUint2x32,
	EOpUnpackUint2x32,
	EOpPackFloat2x16,
	EOpUnpackFloat2x16,
	EOpPackInt2x16,
	EOpUnpackInt2x16,
	EOpPackUint2x16,
	EOpUnpackUint2x16,
	EOpPackInt4x16,
	EOpUnpackInt4x16,
	EOpPackUint4x16,
	EOpUnpackUint4x16,
	EOpPack16,
	EOpPack32,
	EOpPack64,
	EOpUnpack32,
	EOpUnpack16,
	EOpUnpack8,

	EOpLength,
	EOpDistance,
	EOpDot,
	EOpCross,
	EOpNormalize,
	EOpFaceForward,
	EOpReflect,
	EOpRefract,

	EOpMin3,
	EOpMax3,
	EOpMid3,

	EOpDPdx,            // Fragment only
	EOpDPdy,            // Fragment only
	EOpFwidth,          // Fragment only
	EOpDPdxFine,        // Fragment only
	EOpDPdyFine,        // Fragment only
	EOpFwidthFine,      // Fragment only
	EOpDPdxCoarse,      // Fragment only
	EOpDPdyCoarse,      // Fragment only
	EOpFwidthCoarse,    // Fragment only

	EOpInterpolateAtCentroid, // Fragment only
	EOpInterpolateAtSample,   // Fragment only
	EOpInterpolateAtOffset,   // Fragment only
	EOpInterpolateAtVertex,

	EOpMatrixTimesMatrix,
	EOpOuterProduct,
	EOpDeterminant,
	EOpMatrixInverse,
	EOpTranspose,

	EOpFtransform,

	EOpNoise,

	EOpEmitVertex,           // geometry only
	EOpEndPrimitive,         // geometry only
	EOpEmitStreamVertex,     // geometry only
	EOpEndStreamPrimitive,   // geometry only

	EOpBarrier,
	EOpMemoryBarrier,
	EOpMemoryBarrierAtomicCounter,
	EOpMemoryBarrierBuffer,
	EOpMemoryBarrierImage,
	EOpMemoryBarrierShared,  // compute only
	EOpGroupMemoryBarrier,   // compute only

	EOpBallot,
	EOpReadInvocation,
	EOpReadFirstInvocation,

	EOpAnyInvocation,
	EOpAllInvocations,
	EOpAllInvocationsEqual,

	EOpSubgroupGuardStart,
	EOpSubgroupBarrier,
	EOpSubgroupMemoryBarrier,
	EOpSubgroupMemoryBarrierBuffer,
	EOpSubgroupMemoryBarrierImage,
	EOpSubgroupMemoryBarrierShared, // compute only
	EOpSubgroupElect,
	EOpSubgroupAll,
	EOpSubgroupAny,
	EOpSubgroupAllEqual,
	EOpSubgroupBroadcast,
	EOpSubgroupBroadcastFirst,
	EOpSubgroupBallot,
	EOpSubgroupInverseBallot,
	EOpSubgroupBallotBitExtract,
	EOpSubgroupBallotBitCount,
	EOpSubgroupBallotInclusiveBitCount,
	EOpSubgroupBallotExclusiveBitCount,
	EOpSubgroupBallotFindLSB,
	EOpSubgroupBallotFindMSB,
	EOpSubgroupShuffle,
	EOpSubgroupShuffleXor,
	EOpSubgroupShuffleUp,
	EOpSubgroupShuffleDown,
	EOpSubgroupAdd,
	EOpSubgroupMul,
	EOpSubgroupMin,
	EOpSubgroupMax,
	EOpSubgroupAnd,
	EOpSubgroupOr,
	EOpSubgroupXor,
	EOpSubgroupInclusiveAdd,
	EOpSubgroupInclusiveMul,
	EOpSubgroupInclusiveMin,
	EOpSubgroupInclusiveMax,
	EOpSubgroupInclusiveAnd,
	EOpSubgroupInclusiveOr,
	EOpSubgroupInclusiveXor,
	EOpSubgroupExclusiveAdd,
	EOpSubgroupExclusiveMul,
	EOpSubgroupExclusiveMin,
	EOpSubgroupExclusiveMax,
	EOpSubgroupExclusiveAnd,
	EOpSubgroupExclusiveOr,
	EOpSubgroupExclusiveXor,
	EOpSubgroupClusteredAdd,
	EOpSubgroupClusteredMul,
	EOpSubgroupClusteredMin,
	EOpSubgroupClusteredMax,
	EOpSubgroupClusteredAnd,
	EOpSubgroupClusteredOr,
	EOpSubgroupClusteredXor,
	EOpSubgroupQuadBroadcast,
	EOpSubgroupQuadSwapHorizontal,
	EOpSubgroupQuadSwapVertical,
	EOpSubgroupQuadSwapDiagonal,

	EOpSubgroupPartition,
	EOpSubgroupPartitionedAdd,
	EOpSubgroupPartitionedMul,
	EOpSubgroupPartitionedMin,
	EOpSubgroupPartitionedMax,
	EOpSubgroupPartitionedAnd,
	EOpSubgroupPartitionedOr,
	EOpSubgroupPartitionedXor,
	EOpSubgroupPartitionedInclusiveAdd,
	EOpSubgroupPartitionedInclusiveMul,
	EOpSubgroupPartitionedInclusiveMin,
	EOpSubgroupPartitionedInclusiveMax,
	EOpSubgroupPartitionedInclusiveAnd,
	EOpSubgroupPartitionedInclusiveOr,
	EOpSubgroupPartitionedInclusiveXor,
	EOpSubgroupPartitionedExclusiveAdd,
	EOpSubgroupPartitionedExclusiveMul,
	EOpSubgroupPartitionedExclusiveMin,
	EOpSubgroupPartitionedExclusiveMax,
	EOpSubgroupPartitionedExclusiveAnd,
	EOpSubgroupPartitionedExclusiveOr,
	EOpSubgroupPartitionedExclusiveXor,

	EOpSubgroupGuardStop,

	EOpMinInvocations,
	EOpMaxInvocations,
	EOpAddInvocations,
	EOpMinInvocationsNonUniform,
	EOpMaxInvocationsNonUniform,
	EOpAddInvocationsNonUniform,
	EOpMinInvocationsInclusiveScan,
	EOpMaxInvocationsInclusiveScan,
	EOpAddInvocationsInclusiveScan,
	EOpMinInvocationsInclusiveScanNonUniform,
	EOpMaxInvocationsInclusiveScanNonUniform,
	EOpAddInvocationsInclusiveScanNonUniform,
	EOpMinInvocationsExclusiveScan,
	EOpMaxInvocationsExclusiveScan,
	EOpAddInvocationsExclusiveScan,
	EOpMinInvocationsExclusiveScanNonUniform,
	EOpMaxInvocationsExclusiveScanNonUniform,
	EOpAddInvocationsExclusiveScanNonUniform,
	EOpSwizzleInvocations,
	EOpSwizzleInvocationsMasked,
	EOpWriteInvocation,
	EOpMbcnt,

	EOpCubeFaceIndex,
	EOpCubeFaceCoord,
	EOpTime,

	EOpAtomicAdd,
	EOpAtomicSubtract,
	EOpAtomicMin,
	EOpAtomicMax,
	EOpAtomicAnd,
	EOpAtomicOr,
	EOpAtomicXor,
	EOpAtomicExchange,
	EOpAtomicCompSwap,
	EOpAtomicLoad,
	EOpAtomicStore,

	EOpAtomicCounterIncrement, // results in pre-increment value
	EOpAtomicCounterDecrement, // results in post-decrement value
	EOpAtomicCounter,
	EOpAtomicCounterAdd,
	EOpAtomicCounterSubtract,
	EOpAtomicCounterMin,
	EOpAtomicCounterMax,
	EOpAtomicCounterAnd,
	EOpAtomicCounterOr,
	EOpAtomicCounterXor,
	EOpAtomicCounterExchange,
	EOpAtomicCounterCompSwap,

	EOpAny,
	EOpAll,

	EOpCooperativeMatrixLoad,
	EOpCooperativeMatrixStore,
	EOpCooperativeMatrixMulAdd,

	EOpBeginInvocationInterlock, // Fragment only
	EOpEndInvocationInterlock, // Fragment only

	EOpIsHelperInvocation,

	EOpDebugPrintf,

	//
	// Branch
	//

	EOpKill,                // Fragment only
	EOpTerminateInvocation, // Fragment only
	EOpDemote,              // Fragment only
	EOpTerminateRayKHR,         // Any-hit only
	EOpIgnoreIntersectionKHR,   // Any-hit only
	EOpReturn,
	EOpBreak,
	EOpContinue,
	EOpCase,
	EOpDefault,

	//
	// Constructors
	//

	EOpConstructGuardStart,
	EOpConstructInt,          // these first scalar forms also identify what implicit conversion is needed
	EOpConstructUint,
	EOpConstructInt8,
	EOpConstructUint8,
	EOpConstructInt16,
	EOpConstructUint16,
	EOpConstructInt64,
	EOpConstructUint64,
	EOpConstructBool,
	EOpConstructFloat,
	EOpConstructDouble,
	// Keep vector and matrix constructors in a consistent relative order for
	// TParseContext::constructBuiltIn, which converts between 8/16/32 bit
	// vector constructors
	EOpConstructVec2,
	EOpConstructVec3,
	EOpConstructVec4,
	EOpConstructMat2x2,
	EOpConstructMat2x3,
	EOpConstructMat2x4,
	EOpConstructMat3x2,
	EOpConstructMat3x3,
	EOpConstructMat3x4,
	EOpConstructMat4x2,
	EOpConstructMat4x3,
	EOpConstructMat4x4,
	EOpConstructDVec2,
	EOpConstructDVec3,
	EOpConstructDVec4,
	EOpConstructBVec2,
	EOpConstructBVec3,
	EOpConstructBVec4,
	EOpConstructI8Vec2,
	EOpConstructI8Vec3,
	EOpConstructI8Vec4,
	EOpConstructU8Vec2,
	EOpConstructU8Vec3,
	EOpConstructU8Vec4,
	EOpConstructI16Vec2,
	EOpConstructI16Vec3,
	EOpConstructI16Vec4,
	EOpConstructU16Vec2,
	EOpConstructU16Vec3,
	EOpConstructU16Vec4,
	EOpConstructIVec2,
	EOpConstructIVec3,
	EOpConstructIVec4,
	EOpConstructUVec2,
	EOpConstructUVec3,
	EOpConstructUVec4,
	EOpConstructI64Vec2,
	EOpConstructI64Vec3,
	EOpConstructI64Vec4,
	EOpConstructU64Vec2,
	EOpConstructU64Vec3,
	EOpConstructU64Vec4,
	EOpConstructDMat2x2,
	EOpConstructDMat2x3,
	EOpConstructDMat2x4,
	EOpConstructDMat3x2,
	EOpConstructDMat3x3,
	EOpConstructDMat3x4,
	EOpConstructDMat4x2,
	EOpConstructDMat4x3,
	EOpConstructDMat4x4,
	EOpConstructIMat2x2,
	EOpConstructIMat2x3,
	EOpConstructIMat2x4,
	EOpConstructIMat3x2,
	EOpConstructIMat3x3,
	EOpConstructIMat3x4,
	EOpConstructIMat4x2,
	EOpConstructIMat4x3,
	EOpConstructIMat4x4,
	EOpConstructUMat2x2,
	EOpConstructUMat2x3,
	EOpConstructUMat2x4,
	EOpConstructUMat3x2,
	EOpConstructUMat3x3,
	EOpConstructUMat3x4,
	EOpConstructUMat4x2,
	EOpConstructUMat4x3,
	EOpConstructUMat4x4,
	EOpConstructBMat2x2,
	EOpConstructBMat2x3,
	EOpConstructBMat2x4,
	EOpConstructBMat3x2,
	EOpConstructBMat3x3,
	EOpConstructBMat3x4,
	EOpConstructBMat4x2,
	EOpConstructBMat4x3,
	EOpConstructBMat4x4,
	EOpConstructFloat16,
	EOpConstructF16Vec2,
	EOpConstructF16Vec3,
	EOpConstructF16Vec4,
	EOpConstructF16Mat2x2,
	EOpConstructF16Mat2x3,
	EOpConstructF16Mat2x4,
	EOpConstructF16Mat3x2,
	EOpConstructF16Mat3x3,
	EOpConstructF16Mat3x4,
	EOpConstructF16Mat4x2,
	EOpConstructF16Mat4x3,
	EOpConstructF16Mat4x4,
	EOpConstructStruct,
	EOpConstructTextureSampler,
	EOpConstructNonuniform,     // expected to be transformed away, not present in final AST
	EOpConstructReference,
	EOpConstructCooperativeMatrix,
	EOpConstructAccStruct,
	EOpConstructGuardEnd,

	//
	// moves
	//

	EOpAssign,
	EOpAddAssign,
	EOpSubAssign,
	EOpMulAssign,
	EOpVectorTimesMatrixAssign,
	EOpVectorTimesScalarAssign,
	EOpMatrixTimesScalarAssign,
	EOpMatrixTimesMatrixAssign,
	EOpDivAssign,
	EOpModAssign,
	EOpAndAssign,
	EOpInclusiveOrAssign,
	EOpExclusiveOrAssign,
	EOpLeftShiftAssign,
	EOpRightShiftAssign,

	//
	// Array operators
	//

	// Can apply to arrays, vectors, or matrices.
	// Can be decomposed to a constant at compile time, but this does not always happen,
	// due to link-time effects. So, consumer can expect either a link-time sized or
	// run-time sized array.
	EOpArrayLength,

	//
	// Image operations
	//

	EOpImageGuardBegin,

	EOpImageQuerySize,
	EOpImageQuerySamples,
	EOpImageLoad,
	EOpImageStore,
	EOpImageLoadLod,
	EOpImageStoreLod,
	EOpImageAtomicAdd,
	EOpImageAtomicMin,
	EOpImageAtomicMax,
	EOpImageAtomicAnd,
	EOpImageAtomicOr,
	EOpImageAtomicXor,
	EOpImageAtomicExchange,
	EOpImageAtomicCompSwap,
	EOpImageAtomicLoad,
	EOpImageAtomicStore,

	EOpSubpassLoad,
	EOpSubpassLoadMS,
	EOpSparseImageLoad,
	EOpSparseImageLoadLod,
	EOpColorAttachmentReadEXT, // Fragment only

	EOpImageGuardEnd,

	//
	// Texture operations
	//

	EOpTextureGuardBegin,

	EOpTextureQuerySize,
	EOpTextureQueryLod,
	EOpTextureQueryLevels,
	EOpTextureQuerySamples,

	EOpSamplingGuardBegin,

	EOpTexture,
	EOpTextureProj,
	EOpTextureLod,
	EOpTextureOffset,
	EOpTextureFetch,
	EOpTextureFetchOffset,
	EOpTextureProjOffset,
	EOpTextureLodOffset,
	EOpTextureProjLod,
	EOpTextureProjLodOffset,
	EOpTextureGrad,
	EOpTextureGradOffset,
	EOpTextureProjGrad,
	EOpTextureProjGradOffset,
	EOpTextureGather,
	EOpTextureGatherOffset,
	EOpTextureGatherOffsets,
	EOpTextureClamp,
	EOpTextureOffsetClamp,
	EOpTextureGradClamp,
	EOpTextureGradOffsetClamp,
	EOpTextureGatherLod,
	EOpTextureGatherLodOffset,
	EOpTextureGatherLodOffsets,
	EOpFragmentMaskFetch,
	EOpFragmentFetch,

	EOpSparseTextureGuardBegin,

	EOpSparseTexture,
	EOpSparseTextureLod,
	EOpSparseTextureOffset,
	EOpSparseTextureFetch,
	EOpSparseTextureFetchOffset,
	EOpSparseTextureLodOffset,
	EOpSparseTextureGrad,
	EOpSparseTextureGradOffset,
	EOpSparseTextureGather,
	EOpSparseTextureGatherOffset,
	EOpSparseTextureGatherOffsets,
	EOpSparseTexelsResident,
	EOpSparseTextureClamp,
	EOpSparseTextureOffsetClamp,
	EOpSparseTextureGradClamp,
	EOpSparseTextureGradOffsetClamp,
	EOpSparseTextureGatherLod,
	EOpSparseTextureGatherLodOffset,
	EOpSparseTextureGatherLodOffsets,

	EOpSparseTextureGuardEnd,

	EOpImageFootprintGuardBegin,
	EOpImageSampleFootprintNV,
	EOpImageSampleFootprintClampNV,
	EOpImageSampleFootprintLodNV,
	EOpImageSampleFootprintGradNV,
	EOpImageSampleFootprintGradClampNV,
	EOpImageFootprintGuardEnd,
	EOpSamplingGuardEnd,
	EOpTextureGuardEnd,

	//
	// Integer operations
	//

	EOpAddCarry,
	EOpSubBorrow,
	EOpUMulExtended,
	EOpIMulExtended,
	EOpBitfieldExtract,
	EOpBitfieldInsert,
	EOpBitFieldReverse,
	EOpBitCount,
	EOpFindLSB,
	EOpFindMSB,

	EOpCountLeadingZeros,
	EOpCountTrailingZeros,
	EOpAbsDifference,
	EOpAddSaturate,
	EOpSubSaturate,
	EOpAverage,
	EOpAverageRounded,
	EOpMul32x16,

	EOpTraceNV,
	EOpTraceRayMotionNV,
	EOpTraceKHR,
	EOpReportIntersection,
	EOpIgnoreIntersectionNV,
	EOpTerminateRayNV,
	EOpExecuteCallableNV,
	EOpExecuteCallableKHR,
	EOpWritePackedPrimitiveIndices4x8NV,
	EOpEmitMeshTasksEXT,
	EOpSetMeshOutputsEXT,

	//
	// GL_EXT_ray_query operations
	//

	EOpRayQueryInitialize,
	EOpRayQueryTerminate,
	EOpRayQueryGenerateIntersection,
	EOpRayQueryConfirmIntersection,
	EOpRayQueryProceed,
	EOpRayQueryGetIntersectionType,
	EOpRayQueryGetRayTMin,
	EOpRayQueryGetRayFlags,
	EOpRayQueryGetIntersectionT,
	EOpRayQueryGetIntersectionInstanceCustomIndex,
	EOpRayQueryGetIntersectionInstanceId,
	EOpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffset,
	EOpRayQueryGetIntersectionGeometryIndex,
	EOpRayQueryGetIntersectionPrimitiveIndex,
	EOpRayQueryGetIntersectionBarycentrics,
	EOpRayQueryGetIntersectionFrontFace,
	EOpRayQueryGetIntersectionCandidateAABBOpaque,
	EOpRayQueryGetIntersectionObjectRayDirection,
	EOpRayQueryGetIntersectionObjectRayOrigin,
	EOpRayQueryGetWorldRayDirection,
	EOpRayQueryGetWorldRayOrigin,
	EOpRayQueryGetIntersectionObjectToWorld,
	EOpRayQueryGetIntersectionWorldToObject,

	// 
	// GL_NV_shader_invocation_reorder
	//

	EOpHitObjectTraceRayNV,
	EOpHitObjectTraceRayMotionNV,
	EOpHitObjectRecordHitNV,
	EOpHitObjectRecordHitMotionNV,
	EOpHitObjectRecordHitWithIndexNV,
	EOpHitObjectRecordHitWithIndexMotionNV,
	EOpHitObjectRecordMissNV,
	EOpHitObjectRecordMissMotionNV,
	EOpHitObjectRecordEmptyNV,
	EOpHitObjectExecuteShaderNV,
	EOpHitObjectIsEmptyNV,
	EOpHitObjectIsMissNV,
	EOpHitObjectIsHitNV,
	EOpHitObjectGetRayTMinNV,
	EOpHitObjectGetRayTMaxNV,
	EOpHitObjectGetObjectRayOriginNV,
	EOpHitObjectGetObjectRayDirectionNV,
	EOpHitObjectGetWorldRayOriginNV,
	EOpHitObjectGetWorldRayDirectionNV,
	EOpHitObjectGetWorldToObjectNV,
	EOpHitObjectGetObjectToWorldNV,
	EOpHitObjectGetInstanceCustomIndexNV,
	EOpHitObjectGetInstanceIdNV,
	EOpHitObjectGetGeometryIndexNV,
	EOpHitObjectGetPrimitiveIndexNV,
	EOpHitObjectGetHitKindNV,
	EOpHitObjectGetShaderBindingTableRecordIndexNV,
	EOpHitObjectGetShaderRecordBufferHandleNV,
	EOpHitObjectGetAttributesNV,
	EOpHitObjectGetCurrentTimeNV,
	EOpReorderThreadNV,

	// HLSL operations
	//

	EOpClip,                // discard if input value < 0
	EOpIsFinite,
	EOpLog10,               // base 10 log
	EOpRcp,                 // 1/x
	EOpSaturate,            // clamp from 0 to 1
	EOpSinCos,              // sin and cos in out parameters
	EOpGenMul,              // mul(x,y) on any of mat/vec/scalars
	EOpDst,                 // x = 1, y=src0.y * src1.y, z=src0.z, w=src1.w
	EOpInterlockedAdd,      // atomic ops, but uses [optional] out arg instead of return
	EOpInterlockedAnd,      // ...
	EOpInterlockedCompareExchange, // ...
	EOpInterlockedCompareStore,    // ...
	EOpInterlockedExchange, // ...
	EOpInterlockedMax,      // ...
	EOpInterlockedMin,      // ...
	EOpInterlockedOr,       // ...
	EOpInterlockedXor,      // ...
	EOpAllMemoryBarrierWithGroupSync,    // memory barriers without non-hlsl AST equivalents
	EOpDeviceMemoryBarrier,              // ...
	EOpDeviceMemoryBarrierWithGroupSync, // ...
	EOpWorkgroupMemoryBarrier,           // ...
	EOpWorkgroupMemoryBarrierWithGroupSync, // ...
	EOpEvaluateAttributeSnapped,         // InterpolateAtOffset with int position on 16x16 grid
	EOpF32tof16,                         // HLSL conversion: half of a PackHalf2x16
	EOpF16tof32,                         // HLSL conversion: half of an UnpackHalf2x16
	EOpLit,                              // HLSL lighting coefficient vector
	EOpTextureBias,                      // HLSL texture bias: will be lowered to EOpTexture
	EOpAsDouble,                         // slightly different from EOpUint64BitsToDouble
	EOpD3DCOLORtoUBYTE4,                 // convert and swizzle 4-component color to UBYTE4 range

	EOpMethodSample,                     // Texture object methods.  These are translated to existing
	EOpMethodSampleBias,                 // AST methods, and exist to represent HLSL semantics until that
	EOpMethodSampleCmp,                  // translation is performed.  See HlslParseContext::decomposeSampleMethods().
	EOpMethodSampleCmpLevelZero,         // ...
	EOpMethodSampleGrad,                 // ...
	EOpMethodSampleLevel,                // ...
	EOpMethodLoad,                       // ...
	EOpMethodGetDimensions,              // ...
	EOpMethodGetSamplePosition,          // ...
	EOpMethodGather,                     // ...
	EOpMethodCalculateLevelOfDetail,     // ...
	EOpMethodCalculateLevelOfDetailUnclamped,     // ...

	// Load already defined above for textures
	EOpMethodLoad2,                      // Structure buffer object methods.  These are translated to existing
	EOpMethodLoad3,                      // AST methods, and exist to represent HLSL semantics until that
	EOpMethodLoad4,                      // translation is performed.  See HlslParseContext::decomposeSampleMethods().
	EOpMethodStore,                      // ...
	EOpMethodStore2,                     // ...
	EOpMethodStore3,                     // ...
	EOpMethodStore4,                     // ...
	EOpMethodIncrementCounter,           // ...
	EOpMethodDecrementCounter,           // ...
	// EOpMethodAppend is defined for geo shaders below
	EOpMethodConsume,

	// SM5 texture methods
	EOpMethodGatherRed,                  // These are covered under the above EOpMethodSample comment about
	EOpMethodGatherGreen,                // translation to existing AST opcodes.  They exist temporarily
	EOpMethodGatherBlue,                 // because HLSL arguments are slightly different.
	EOpMethodGatherAlpha,                // ...
	EOpMethodGatherCmp,                  // ...
	EOpMethodGatherCmpRed,               // ...
	EOpMethodGatherCmpGreen,             // ...
	EOpMethodGatherCmpBlue,              // ...
	EOpMethodGatherCmpAlpha,             // ...

	// geometry methods
	EOpMethodAppend,                     // Geometry shader methods
	EOpMethodRestartStrip,               // ...

	// matrix
	EOpMatrixSwizzle,                    // select multiple matrix components (non-column)

	// SM6 wave ops
	EOpWaveGetLaneCount,                 // Will decompose to gl_SubgroupSize.
	EOpWaveGetLaneIndex,                 // Will decompose to gl_SubgroupInvocationID.
	EOpWaveActiveCountBits,              // Will decompose to subgroupBallotBitCount(subgroupBallot()).
	EOpWavePrefixCountBits,              // Will decompose to subgroupBallotInclusiveBitCount(subgroupBallot()).

	// Shader Clock Ops
	EOpReadClockSubgroupKHR,
	EOpReadClockDeviceKHR,

	// GL_EXT_ray_tracing_position_fetch
	EOpRayQueryGetIntersectionTriangleVertexPositionsEXT,

	// Shader tile image ops
	EOpStencilAttachmentReadEXT, // Fragment only
	EOpDepthAttachmentReadEXT, // Fragment only
};

enum LayoutGeometryType
{
	LAYOUT_GEOMETRY_TYPE_NONE,
	LAYOUT_GEOMETRY_TYPE_POINTS,
	LAYOUT_GEOMETRY_TYPE_LINES,
	LAYOUT_GEOMETRY_TYPE_LINES_ADJACENCY,
	LAYOUT_GEOMETRY_TYPE_LINE_STRIP,
	LAYOUT_GEOMETRY_TYPE_TRIANGLES,
	LAYOUT_GEOMETRY_TYPE_TRIANGLES_ADJECENCY,
	LAYOUT_GEOMETRY_TYPE_TRIANGLE_STRIP,
	LAYOUT_GEOMETRY_TYPE_QUADS,
	LAYOUT_GEOMETRY_TYPE_ISOLINES,
};

enum VertexSpacingType
{
	VERTEX_SPACING_TYPE_NONE,
	VERTEX_SPACING_TYPE_EQUAL,
	VERTEX_SPACING_TYPE_FRACTIONAL_EVEN,
	VERTEX_SPACING_TYPE_FRACTIONAL_ODD
};

enum VertexOrderType
{
	VERTEX_ORDER_TYPE_NONE,
	VERTEX_ORDER_TYPE_CLOCKWISE,
	VERTEX_ORDER_TYPE_COUNTER_CLOCKWISE
};

enum InterlockOrderingType
{
	INTERLOCK_ORDERING_TYPE_NONE,
	INTERLOCK_ORDERING_TYPE_PIXEL_INTERLOCK_ORDERED,
	INTERLOCK_ORDERING_TYPE_PIXEL_INTERLOCK_UNORDERED,
	INTERLOCK_ORDERING_TYPE_SAMPLE_INTERLOCK_ORDERED,
	INTERLOCK_ORDERING_TYPE_SAMPLE_INTERLOCK_UNORDERED,
	INTERLOCK_ORDERING_TYPE_SHADING_RATE_INTERLOCK_ORDERED,
	INTERLOCK_ORDERING_TYPE_SHADING_RATE_INTERLOCK_UNORDERED,

	INTERLOCK_ORDERING_COUNT,
};

enum LayoutDepthType
{
	LAYOUT_DEPTH_TYPE_NONE,
	LAYOUT_DEPTH_TYPE_ANY,
	LAYOUT_DEPTH_TYPE_GREATER,
	LAYOUT_DEPTH_TYPE_LESS,
	LAYOUT_DEPTH_TYPE_UNCHANGED,

	LAYOUT_DEPTH_COUNT
};

enum LayoutStencilType
{
	LAYOUT_STENCIL_TYPE_NONE,
	LAYOUT_STENCIL_TYPE_REF_UNCHANGED_FRONT_AMD,
	LAYOUT_STENCIL_TYPE_REF_GREATER_FRONT_AMD,
	LAYOUT_STENCIL_TYPE_REF_LESS_FRONT_AMD,
	LAYOUT_STENCIL_TYPE_REF_UNCHANGED_BACK_AMD,
	LAYOUT_STENCIL_TYPE_REF_GREATER_BACK_AMD,
	LAYOUT_STENCIL_TYPE_REF_LESS_BACK_AMD,

	LAYOUT_STENCIL_COUNT
};

enum ComputeDerivativeMode
{
	COMPUTE_DERIVATIVE_MODE_NONE,         // default layout as SPV_NV_compute_shader_derivatives not enabled
	COMPUTE_DERIVATIVE_MODE_GROUP_QUADS,   // derivative_group_quadsNV
	COMPUTE_DERIVATIVE_MODE_GROUP_LINEAR,  // derivative_group_linearNV
};

enum SamplerTransformMode
{
	SAMPLER_TRANFORM_MODE_KEEP,   // keep textures and samplers as is (default)
	SAMPLER_TRANFORM_MODE_UPGRADE_TEXTURE_REMOVE_SAMPLER,  // change texture w/o embeded sampler into sampled texture and throw away all samplers
	SAMPLER_TRANFORM_MODE_CONUT
};

enum AstRefType
{
	AST_REF_TYPE_VARIABLE,         // Status set by variable decl
	AST_REF_TYPE_FUNCTION,        // Status set by function decl
	AST_REF_TYPE_LAYOUT,      // Status set by layout decl
};

enum ResourceType
{
	RESOURCE_TYPE_SAMPLER,
	RESOURCE_TYPE_TEXTURE,
	RESOURCE_TYPE_IMAGE,
	RESOURCE_TYPE_UBO,
	RESOURCE_TYPE_SSBO,
	RESOURCE_TYPE_UAV,

	RESOURCE_TYPE_COUNT
};

enum BlockStorageClass
{
	BLOCK_STORAGE_CLASS_UNIFORM,
	BLOCK_STORAGE_CLASS_STORAGE_BUFFER,
	BLOCK_STORAGE_CLASS_PUSH_CONSTANT,
	BLOCK_STORAGE_CLASS_NONE,

	BLOCK_STORAGE_CLASS_COUNT
};

enum SamplerDimension
{
	SAMPLER_DIMENSION_NONE,
	SAMPLER_DIMENSION_1D,
	SAMPLER_DIMENSION_2D,
	SAMPLER_DIMENSION_3D,
	SAMPLER_DIMENSION_CUBE,
	SAMPLER_DIMENSION_RECT,
	SAMPLER_DIMENSION_BUFFER,
	SAMPLER_DIMENSION_SUBPASS,  // goes only with non-sampled image (image is true)
	SAMPLER_DIMENSION_ATTACHMENT_EXT,

	SAMPLER_DIMENSION_COUNT
};

enum ExtensionBehavior
{
	EXTENSION_BEHAVIOR_MISSING,
	EXTENSION_BEHAVIOR_REQUIRED,
	EXTENSION_BEHAVIOR_ENABLE,
	EXTENSION_BEHAVIOR_WARN,
	EXTENSION_BEHAVIOR_DISABLE,
	EXTENSION_BEHAVIOR_DISABLE_PARTIAL    // use as initial state of an extension that is only partially implemented
};

enum InputType
{
	INPUT_TYPE_MACRO,
	INPUT_TYPE_MARKER,
	INPUT_TYPE_ZERO,
	INPUT_TYPE_TOKEN,
	INPUT_TYPE_UNGOT_TOKEN,
	INPUT_TYPE_STRING,
};

enum FixedAtomType
{
	FIXED_ATOM_MAX_SINGLE = 127,

	FIXED_ATOM_BadToken,

	FIXED_ATOM_AddAssign,
	FIXED_ATOM_SubAssign,
	FIXED_ATOM_MulAssign,
	FIXED_ATOM_DivAssign,
	FIXED_ATOM_ModAssign,

	FIXED_ATOM_Right,
	FIXED_ATOM_Left,

	FIXED_ATOM_RightAssign,
	FIXED_ATOM_LeftAssign,
	FIXED_ATOM_AndAssign,
	FIXED_ATOM_OrAssign,
	FIXED_ATOM_XorAssign,

	FIXED_ATOM_And,
	FIXED_ATOM_Or,
	FIXED_ATOM_Xor,

	FIXED_ATOM_EQ,
	FIXED_ATOM_NE,
	FIXED_ATOM_GE,
	FIXED_ATOM_LE,

	FIXED_ATOM_Decrement,
	FIXED_ATOM_Increment,

	FIXED_ATOM_ColonColon,

	FIXED_ATOM_Paste,

	FIXED_ATOM_ConstInt,
	FIXED_ATOM_ConstUint,
	FIXED_ATOM_ConstInt64,
	FIXED_ATOM_ConstUint64,
	FIXED_ATOM_ConstInt16,
	FIXED_ATOM_ConstUint16,
	FIXED_ATOM_ConstFloat,
	FIXED_ATOM_ConstDouble,
	FIXED_ATOM_ConstFloat16,
	FIXED_ATOM_ConstString,

	FIXED_ATOM_Identifier,

	FIXED_ATOM_Define,
	FIXED_ATOM_Undef,

	FIXED_ATOM_If,
	FIXED_ATOM_Ifdef,
	FIXED_ATOM_Ifndef,
	FIXED_ATOM_Else,
	FIXED_ATOM_Elif,
	FIXED_ATOM_Endif,

	FIXED_ATOM_Pragma,
	FIXED_ATOM_Error,

	FIXED_ATOM_Core,
	FIXED_ATOM_Compatibility,
	FIXED_ATOM_Es,

	FIXED_ATOM_LineMacro,
	FIXED_ATOM_FileMacro,
	FIXED_ATOM_VersionMacro,

	FIXED_ATOM_Include,

	FIXED_ATOM_Last,
};

enum MacroExpandResult
{
	MACRO_EXPAND_RESULT_NOT_STARTED,// macro not expanded, which might not be an error
	MACRO_EXPAND_RESULT_ERROR,      // a clear error occurred while expanding, no expansion
	MACRO_EXPAND_RESULT_STARTED,    // macro expansion process has started
	MACRO_EXPAND_RESULT_UNDEF       // macro is undefined and will be expanded
};

enum EvaluationPrecedence
{
	MIN_PRECEDENCE,
	COND, 
	LOGOR, 
	LOGAND, 
	OR, 
	XOR, 
	AND, 
	EQUAL, 
	RELATION, 
	SHIFT, 
	ADD, 
	MUL, 
	UNARY,
	MAX_PRECEDENCE
};

static inline constexpr I16 TRANSLATE[]{
	   0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
	   2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
	   5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
	  15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
	  25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
	  35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
	  45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
	  55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
	  65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
	  75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
	  85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
	  95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
	 105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
	 115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
	 125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
	 135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
	 145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
	 155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
	 165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
	 175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
	 185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
	 195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
	 205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
	 215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
	 225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
	 235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
	 245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
	 255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
	 265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
	 275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
	 285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
	 295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
	 305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
	 315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
	 325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
	 335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
	 345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
	 355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
	 365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
	 375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
	 385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
	 395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
	 405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
	 415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
	 425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
	 435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
	 445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
	 455,   456,   457,   458,   459,   460,   461,   462,   463
};

static inline constexpr I16 PACT[]{
	4634,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -322,  -303,  -269,
	-258,  -250,  -241,  -204,  -105,  -833,  -833,  -833,  -833,  -833,
	-219,  -833,  -833,  -833,  -833,  -833,   -57,  -833,  -833,  -833,
	-833,  -833,  -320,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	 -80,   -63,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -325,  -182,  -130,
	-109,  7861,  -222,  -833,   -71,  -833,  -833,  -833,  -833,  5556,
	-833,  -833,  -833,  -833,  -141,  -833,  -833,   946,  -833,  -833,
	7861,   -85,  -833,  -833,  -833,  6017,   -54,  -279,  -155,  -133,
	-129,  -125,   -54,  -124,   -51, 12272,  -833,   -25,  -341,   -49,
	-833,  -310,  -833,   -15,   -12,  7861,  -833,  -833,  -833,  7861,
	 -42,   -41,  -833,  -265,  -833,  -311,  -833,  -833, 10955,    -9,
	-833,  -833,  -833,    -5,   -39,  7861,  -833,   -10,   -11,    -6,
	-833,  -267,  -833,  -256,    -4,    -3,    -1,     1,  -221,     3,
	   5,     6,     8,    10,    11,  -217,    13,    12,    20,  -309,
	-833,    -7,  7861,  -833,    -2,  -833,  -195,  -833,  -833,  -188,
	9199,  -833,  -280,  1407,  -833,  -833,  -833,  -833,  -833,    -9,
	-294,  -833,  9638,  -263,  -833,   -27,  -833,  -169, 10955, 10955,
	-833, 10955,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -253,  -833,  -833,  -833,    21,  -185, 11394,    25,  -833,
   10955,  -833,  -833,  -318,    19,   -12,    26,  -833,  -326,   -54,
	-833,    -8,  -833,  -329,    27,  -123, 10955,  -119,  -833,  -146,
	-112,  -160,  -107,    28,  -102,   -54,  -833, 11833,  -833,   -75,
   10955,    29,   -51,  -833,  7861,    14,  6478,  -833,  7861, 10955,
	-833,  -341,  -833,    15,  -833,  -833,   -40,   -79,  -170,  -295,
	-120,    17,    22,    24,    44,    23,  -313,    30, 10077,  -833,
	  35,  -833,  -833,    31,    37,    39,  -833,    34,    41,    42,
   10516,    64, 10955,    58,    57,    59,    63,    65,  -220,  -833,
	-833,  -111,  -833,  -182,    76,    77,  -833,  -833,  -833,  -833,
	-833,  1868,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  5095,    19,  9638,  -254,  8321,  -833,  -833,  9638,  7861,
	-833,    43,  -833,  -833,  -833,  -184,  -833,  -833, 10955,    47,
	-833,  -833, 10955,    79,  -833,  -833,  -833, 10955,  -833,  -833,
	-833,  -319,  -833,  -833,  -183,    69,  -833,  -833,  -833,  -833,
	-833,  -833,  -181,  -833,  -176,  -833,  -833,  -174,    80,  -833,
	-833,  -833,  -833,  -172,  -833,  -171,  -833,  -833,  -833,  -833,
	-833,  -164,  -833,    81,  -833,  -162,    82,  -161,    69,  -833,
	-159,  -833,    83,    85,  -833,  -833,    14,    -9,   -48,  -833,
	-833,  -833,  6939,  -833,  -833,  -833, 10955, 10955, 10955, 10955,
   10955, 10955, 10955, 10955, 10955, 10955, 10955, 10955, 10955, 10955,
   10955, 10955, 10955, 10955, 10955,  -833,  -833,  -833,    32,  -833,
	2329,  -833,  -833,  -833,  2329,  -833, 10955,  -833,  -833,   -47,
   10955,   -92,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833, 10955, 10955,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  9638,  -833,  -833,
	-122,  -833,  7400,  -833,  -833,    88,    86,  -833,  -833,  -833,
	-833,  -833,  -202,  -137,  -833,  -316,  -833,  -329,  -833,  -329,
	-833, 10955, 10955,  -833,  -146,  -833,  -146,  -833,  -160,  -160,
	-833,    93,    28,  -833, 11833,  -833, 10955,  -833,  -833,   -43,
	  19,    14,  -833,  -833,  -833,  -833,  -833,   -40,   -40,   -79,
	 -79,  -170,  -170,  -170,  -170,  -295,  -295,  -120,    17,    22,
	  24,    44,    23, 10955,  -833,  2329,  4173,    52,  3712,  -152,
	-833,  -151,  -833,  -833,  -833,  -833,  -833,  8760,  -833,  -833,
	-833,    98,  -833,    66,  -833,  -150,  -833,  -149,  -833,  -148,
	-833,  -147,  -833,  -140,  -139,  -833,  -833,  -833,   -36,    95,
	  86,    62,   101,   103,  -833,  -833,  4173,   100,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833, 10955,
	-833,    96,  2790, 10955,  -833,    97,   105,    60,   107,  3251,
	-833,   109,  -833,  9638,  -833,  -833,  -833,  -138, 10955,  2790,
	 100,  -833,  -833,  2329,  -833,    99,    86,  -833,  -833,  2329,
	 110,  -833,  -833
};

static inline constexpr I16 DEFACT[]{
	   0,   168,   224,   222,   223,   221,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   225,   226,   227,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 350,   351,   352,   353,   354,   355,   356,   376,   377,   378,
	 379,   380,   381,   382,   391,   404,   405,   392,   393,   395,
	 394,   396,   397,   398,   399,   400,   401,   402,   403,   177,
	 178,   250,   251,   249,   252,   259,   260,   257,   258,   255,
	 256,   253,   254,   282,   283,   284,   294,   295,   296,   279,
	 280,   281,   291,   292,   293,   276,   277,   278,   288,   289,
	 290,   273,   274,   275,   285,   286,   287,   261,   262,   263,
	 297,   298,   299,   264,   265,   266,   309,   310,   311,   267,
	 268,   269,   321,   322,   323,   270,   271,   272,   333,   334,
	 335,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 312,   313,   314,   315,   316,   317,   318,   319,   320,   324,
	 325,   326,   327,   328,   329,   330,   331,   332,   336,   337,
	 338,   339,   340,   341,   342,   343,   344,   348,   345,   346,
	 347,   532,   533,   534,   536,   182,   360,   361,   384,   387,
	 349,   358,   359,   375,   357,   406,   407,   410,   411,   412,
	 414,   415,   416,   418,   419,   420,   422,   423,   519,   520,
	 383,   385,   386,   362,   363,   364,   408,   365,   369,   370,
	 373,   413,   417,   421,   366,   367,   371,   372,   409,   368,
	 374,   453,   455,   456,   457,   459,   460,   461,   463,   464,
	 465,   467,   468,   469,   471,   472,   473,   475,   476,   477,
	 479,   480,   481,   483,   484,   485,   487,   488,   489,   491,
	 492,   493,   495,   496,   454,   458,   462,   466,   470,   478,
	 482,   486,   474,   490,   494,   497,   498,   499,   500,   501,
	 502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
	 512,   513,   514,   515,   516,   517,   518,   388,   389,   390,
	 424,   433,   435,   429,   434,   436,   437,   439,   440,   441,
	 443,   444,   445,   447,   448,   449,   451,   452,   425,   426,
	 427,   438,   428,   430,   431,   432,   442,   446,   450,   524,
	 525,   528,   529,   530,   531,   526,   527,     0,     0,     0,
	   0,     0,     0,     0,     0,   166,   167,   521,   522,   523,
	   0,   629,   137,   539,   540,   541,     0,   538,   172,   170,
	 171,   169,     0,   220,   173,   175,   176,   174,   139,   138,
	   0,   203,   184,   186,   181,   188,   190,   185,   187,   183,
	 189,   191,   179,   180,   206,   192,   199,   200,   201,   202,
	 193,   194,   195,   196,   197,   198,   140,   141,   143,   142,
	 144,   146,   147,   145,   205,   154,   628,     0,   630,     0,
	 114,   113,     0,   125,   130,   161,   160,   158,   162,     0,
	 155,   157,   163,   135,   216,   159,   537,     0,   625,   627,
	   0,     0,   164,   165,   535,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   544,     0,     0,     0,
	  99,     0,    94,     0,   109,     0,   121,   115,   123,     0,
	 124,     0,    97,   131,   102,     0,   156,   136,     0,   209,
	 215,     1,   626,     0,     0,     0,    96,     0,     0,     0,
	 637,     0,   694,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   635,     0,
	 633,     0,     0,   542,   151,   153,     0,   149,   207,     0,
	   0,   100,     0,     0,   631,   110,   116,   120,   122,   118,
	 126,   117,     0,   132,   105,     0,   103,     0,     0,     0,
	   9,     0,    43,    42,    44,    41,     5,     6,     7,     8,
	   2,    16,    14,    15,    17,    10,    11,    12,    13,     3,
	  18,    37,    20,    25,    26,     0,     0,    30,     0,   218,
	   0,    36,    34,     0,   210,   111,     0,    95,     0,     0,
	 692,     0,   645,     0,     0,     0,     0,     0,   662,     0,
	   0,     0,     0,     0,     0,     0,   687,     0,   660,     0,
	   0,     0,     0,    98,     0,     0,     0,   546,     0,     0,
	 148,     0,   204,     0,   211,    45,    49,    52,    55,    60,
	  63,    65,    67,    69,    71,    73,    75,     0,     0,   101,
	 573,   582,   586,     0,     0,     0,   607,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,    45,    78,
	  91,     0,   560,     0,   163,   135,   563,   584,   562,   570,
	 561,     0,   564,   565,   588,   566,   595,   567,   568,   603,
	 569,     0,   119,     0,   127,     0,   554,   134,     0,     0,
	 107,     0,   104,    38,    39,     0,    22,    23,     0,     0,
	  28,    27,     0,   220,    31,    33,    40,     0,   217,   112,
	 696,     0,   697,   638,     0,     0,   695,   657,   653,   654,
	 655,   656,     0,   651,     0,    93,   658,     0,     0,   672,
	 673,   674,   675,     0,   670,     0,   679,   680,   681,   682,
	 678,     0,   676,     0,   683,     0,     0,     0,     2,   691,
	   0,   689,     0,     0,   632,   634,     0,   552,     0,   550,
	 545,   547,     0,   152,   150,   208,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,    76,   212,   213,     0,   572,
	   0,   605,   618,   617,     0,   609,     0,   621,   619,     0,
	   0,     0,   602,   622,   623,   624,   571,    81,    82,    84,
	  83,    86,    87,    88,    89,    90,    85,    80,     0,     0,
	 587,   583,   585,   589,   596,   604,   129,     0,   557,   558,
	   0,   133,     0,   108,     4,     0,    24,    21,    32,   219,
	 641,   643,     0,     0,   693,     0,   647,     0,   646,     0,
	 649,     0,     0,   664,     0,   663,     0,   666,     0,     0,
	 668,     0,     0,   688,     0,   685,     0,   661,   636,     0,
	 553,     0,   548,   543,    46,    47,    48,    51,    50,    53,
	  54,    58,    59,    56,    57,    61,    62,    64,    66,    68,
	  70,    72,    74,     0,   214,   574,     0,     0,     0,     0,
	 620,     0,   601,    79,    92,   128,   555,     0,   106,    19,
	 639,     0,   640,     0,   652,     0,   659,     0,   671,     0,
	 677,     0,   684,     0,     0,   690,   549,   551,     0,     0,
	 593,     0,     0,     0,   612,   611,   614,   580,   597,   556,
	 559,   642,   644,   648,   650,   665,   667,   669,   686,     0,
	 575,     0,     0,     0,   613,     0,     0,   592,     0,     0,
	 590,     0,    77,     0,   577,   606,   576,     0,   615,     0,
	 580,   579,   581,   599,   594,     0,   616,   610,   591,   600,
	   0,   608,   598
};

static inline constexpr I16 PACT_GOTO[]{
	-833,  -546,  -833,  -833,  -833,  -833,  -833,  -833,  -833,  -833,
	-833,  -833,  -434,  -833,  -395,  -394,  -489,  -392,  -271,  -270,
	-268,  -266,  -272,  -264,  -833,  -484,  -833,  -497,  -833,  -500,
	-535,     4,  -833,  -833,  -833,     7,  -393,  -833,  -833,    33,
	  40,    38,  -833,  -833,  -407,  -833,  -833,  -833,  -833,  -103,
	-833,  -390,  -376,  -833,     9,  -833,     0,  -433,  -833,  -833,
	-833,  -833,   138,  -833,  -833,  -833,  -559,  -554,  -237,  -350,
	-612,  -833,  -375,  -619,  -832,  -833,  -432,  -833,  -833,  -445,
	-443,  -833,  -833,    55,  -732,  -373,  -833,  -145,  -833,  -406,
	-833,  -144,  -833,  -833,  -833,  -833,  -143,  -833,  -833,  -833,
	-833,  -833,  -833,  -833,  -833,    87,  -833,  -833,     2,  -833,
	 -77,  -302,  -408,  -833,  -833,  -833,  -317,  -308,  -312,  -833,
	-833,  -315,  -307,  -314,  -306,  -305,  -833,  -321,  -304,  -833,
	-396,  -538
};

static inline constexpr I16 DEFACT_GOTO[]{
	  -1,   529,   530,   531,   795,   532,   533,   534,   535,   536,
	 537,   538,   618,   540,   586,   587,   588,   589,   590,   591,
	 592,   593,   594,   595,   596,   619,   853,   620,   778,   621,
	 709,   622,   387,   649,   507,   623,   389,   390,   391,   436,
	 437,   438,   392,   393,   394,   395,   396,   397,   486,   487,
	 398,   399,   400,   401,   541,   489,   542,   492,   449,   450,
	 543,   404,   405,   406,   578,   482,   576,   577,   718,   719,
	 647,   790,   626,   627,   628,   629,   630,   750,   889,   925,
	 917,   918,   919,   926,   631,   632,   633,   634,   920,   892,
	 635,   636,   921,   940,   637,   638,   639,   856,   754,   858,
	 896,   915,   916,   640,   407,   408,   409,   433,   641,   479,
	 480,   459,   460,   802,   803,   411,   682,   683,   687,   412,
	 413,   693,   694,   701,   702,   705,   414,   710,   711,   415,
	 461,   462
};

static inline constexpr I16 TABLE[]{
	 403,   439,   410,   454,   386,   646,   597,   388,   454,   402,
	 503,   655,   782,   676,   539,   700,   544,   453,   855,   722,
	 455,   686,   721,   446,   677,   455,   475,   670,   744,   676,
	 671,   786,   416,   789,   800,   713,   791,   670,   426,   430,
	 664,   733,   734,   667,   723,   439,   490,   504,   571,   484,
	 505,   417,   572,   506,   491,   668,   585,   678,   679,   680,
	 681,   672,   490,   446,   745,   431,   642,   644,   801,   643,
	 427,   672,   685,   485,   653,   654,   598,   735,   736,   446,
	 924,   656,   657,   685,   599,   418,   685,   932,   550,   501,
	 792,   490,   574,   598,   551,   685,   419,   924,   502,   552,
	 648,   -35,   598,   658,   420,   553,   666,   659,   463,   787,
	 759,   464,   761,   421,   748,   465,   467,   469,   471,   473,
	 474,   477,   585,   767,   768,   769,   770,   771,   772,   773,
	 774,   775,   776,   585,   558,   857,   585,   424,   566,   441,
	 559,   673,   442,   777,   567,   585,   646,   673,   646,   673,
	 422,   646,   673,   674,   673,   870,   673,   673,   796,   871,
	 580,   673,   731,   732,   585,   798,   581,   582,   721,   707,
	 661,   794,   804,   583,   806,   865,   662,   779,   551,   808,
	 807,   810,   432,   813,   815,   809,   574,   811,   574,   814,
	 816,   817,   651,   820,   823,   652,   825,   818,   446,   821,
	 824,   939,   826,   897,   898,   903,   904,   905,   906,   779,
	 779,   807,   811,   814,   818,   907,   908,   935,   737,   738,
	 872,   821,   826,   779,   873,   434,   696,   697,   698,   699,
	 520,   448,   466,   799,   454,   464,   782,   866,   721,   867,
	 689,   690,   691,   692,   841,   842,   843,   844,   453,   423,
	 779,   455,   435,   780,   468,   900,   859,   464,   470,   574,
	 861,   464,   472,   476,   684,   464,   464,   464,   688,   779,
	 862,   464,   700,   700,   428,   695,   876,   686,   464,   456,
	 703,   863,   864,   464,   830,   706,   676,   729,   464,   730,
	 646,   429,   834,   835,   836,   585,   585,   585,   585,   585,
	 585,   585,   585,   585,   585,   585,   585,   585,   585,   585,
	 585,   934,   712,   831,   779,   464,   832,   860,   831,   443,
	 782,   886,   333,   334,   335,   779,   909,   685,   685,   726,
	 727,   728,   574,   483,   837,   838,   458,   839,   840,   478,
	 685,   488,   685,   493,   330,   845,   846,   490,   499,   500,
	 545,   546,   548,   888,   547,   549,   890,   573,   555,   554,
	 556,   579,   557,   650,   560,   743,   561,   562,   568,   563,
	 646,   564,   565,   569,   570,   598,   660,   585,   585,   665,
	 501,   704,   675,   671,   742,   751,   714,   746,   755,   854,
	 585,   440,   585,   739,   749,   756,   890,   740,   741,   447,
	 402,   752,   574,   753,   717,   725,   757,   403,   402,   410,
	 403,   386,   922,   927,   388,   403,   402,   410,   760,   402,
	 762,   763,   457,   764,   402,   481,   646,   765,   936,   766,
	 -36,   -34,   805,   793,   -29,   440,   495,   797,   827,   440,
	 828,   812,   819,   822,   402,   869,   882,   779,   402,   891,
	 893,   901,   911,   902,   910,   447,   912,   913,  -578,   923,
	 929,   928,   930,   941,   402,   600,   455,   933,   847,   942,
	 848,   851,   497,   849,   425,   496,   850,   498,   724,   829,
	 852,   887,   575,   894,   937,   895,   931,   938,   494,   891,
	 914,   402,   875,   625,   452,   715,   783,   784,   785,   874,
	 877,   879,   624,   884,     0,   881,   455,   878,     0,     0,
	   0,     0,   880,     0,     0,     0,     0,   883,     0,     0,
	   0,     0,   885,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   669,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   716,     0,   575,     0,   575,     0,
	   0,     0,     0,   402,     0,   402,     0,   402,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   625,     0,     0,     0,     0,     0,     0,     0,     0,
	 624,   403,     0,     0,     0,     0,     0,     0,     0,   575,
	 402,     0,     0,     0,     0,     0,     0,     0,   402,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   575,     0,     0,     0,     0,     0,     0,     0,
	   0,   402,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 625,     0,     0,     0,   625,     0,     0,     0,     0,   624,
	   0,     0,     0,   624,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   575,     0,     0,     0,     0,     0,     0,     0,
	   0,   402,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   625,   625,     0,   625,     0,
	 410,     0,     0,     0,   624,   624,     0,   624,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   625,     0,     0,     0,
	   0,     0,     0,     0,     0,   624,     0,     0,     0,     0,
	   0,     0,   625,     0,     0,     0,     0,     0,     0,   625,
	   0,   624,     0,     0,     0,     0,     0,     0,   624,   625,
	   0,     0,     0,   625,     0,     0,     0,     0,   624,   625,
	   0,     0,   624,     0,     0,     0,   451,     0,   624,     1,
	   2,     3,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
	  62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
	 322,   323,   324,   325,   326,   327,   328,   329,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   330,     0,     0,     0,     0,     0,     0,     0,
	 331,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   332,   333,   334,   335,   336,     0,
	   0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
	 340,   341,   342,   343,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   344,
	 345,   346,   347,   348,   349,   350,     0,     0,     0,     0,
	   0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
	 356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
	 366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
	 376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
	   1,     2,     3,     4,     5,     6,     7,     8,     9,    10,
	  11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
	  21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
	  31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
	  41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
	  51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
	  61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
	  71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
	  81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
	  91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
	 101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
	 111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
	 121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
	 131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
	 141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
	 151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
	 161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
	 171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
	 181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
	 191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
	 201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
	 211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
	 221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
	 231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
	 241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
	 251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
	 261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
	 271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
	 281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
	 291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
	 301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
	 311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
	 321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
	   0,   508,   509,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 510,   511,     0,   330,     0,   600,   601,     0,     0,     0,
	   0,   602,   512,   513,   514,   515,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   332,   333,   334,   335,   336,
	   0,     0,     0,   516,   517,   518,   519,   520,   337,   338,
	 339,   340,   341,   342,   343,   603,   604,   605,   606,     0,
	 607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
	 344,   345,   346,   347,   348,   349,   350,   521,   522,   523,
	 524,   525,   526,   527,   528,   351,   617,   352,   353,   354,
	 355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
	 365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
	 375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
	 385,     1,     2,     3,     4,     5,     6,     7,     8,     9,
	  10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
	  20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
	  30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
	  40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
	  50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
	  60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
	  70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
	  80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
	  90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
	 100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
	 110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
	 120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
	 130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
	 140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
	 150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
	 160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
	 170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
	 180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
	 190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
	 200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
	 210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
	 220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
	 230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
	 240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
	 250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
	 260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
	 270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
	 280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
	 290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
	 300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
	 310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
	 320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
	   0,     0,   508,   509,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   510,   511,     0,   330,     0,   600,   781,     0,     0,
	   0,     0,   602,   512,   513,   514,   515,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   332,   333,   334,   335,
	 336,     0,     0,     0,   516,   517,   518,   519,   520,   337,
	 338,   339,   340,   341,   342,   343,   603,   604,   605,   606,
	   0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
	 616,   344,   345,   346,   347,   348,   349,   350,   521,   522,
	 523,   524,   525,   526,   527,   528,   351,   617,   352,   353,
	 354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
	 364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
	 374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
	 384,   385,     1,     2,     3,     4,     5,     6,     7,     8,
	   9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
	  19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
	  29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
	  39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
	  49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
	  59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
	  69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
	  79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
	  89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
	  99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
	 109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
	 119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
	 129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
	 139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
	 149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
	 159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
	 169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
	 179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
	 189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
	 199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
	 209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
	 219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
	 229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
	 259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
	 269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
	 279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
	 289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
	 299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
	 319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
	 329,     0,     0,   508,   509,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   510,   511,     0,   330,     0,   600,     0,     0,
	   0,     0,     0,   602,   512,   513,   514,   515,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   332,   333,   334,
	 335,   336,     0,     0,     0,   516,   517,   518,   519,   520,
	 337,   338,   339,   340,   341,   342,   343,   603,   604,   605,
	 606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
	 615,   616,   344,   345,   346,   347,   348,   349,   350,   521,
	 522,   523,   524,   525,   526,   527,   528,   351,   617,   352,
	 353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
	 363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
	 373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
	 383,   384,   385,     1,     2,     3,     4,     5,     6,     7,
	   8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
	  18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
	  28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
	  38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
	  48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
	  58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
	  68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
	  78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
	  88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
	  98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
	 108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
	 118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
	 128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
	 138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
	 148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
	 158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
	 168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
	 178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
	 188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
	 198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
	 208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
	 218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
	 228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
	 238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
	 248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
	 258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
	 268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
	 278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
	 288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
	 298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
	 308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
	 318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
	 328,   329,     0,     0,   508,   509,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   510,   511,     0,   330,     0,   493,     0,
	   0,     0,     0,     0,   602,   512,   513,   514,   515,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   332,   333,
	 334,   335,   336,     0,     0,     0,   516,   517,   518,   519,
	 520,   337,   338,   339,   340,   341,   342,   343,   603,   604,
	 605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
	 614,   615,   616,   344,   345,   346,   347,   348,   349,   350,
	 521,   522,   523,   524,   525,   526,   527,   528,   351,   617,
	 352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
	 362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
	 372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
	 382,   383,   384,   385,     1,     2,     3,     4,     5,     6,
	   7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
	  17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
	  27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
	  37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
	  47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
	  57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
	  67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
	  77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
	  87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
	  97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
	 107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
	 117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
	 127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
	 137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
	 147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
	 157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
	 167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
	 177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
	 187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
	 197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
	 207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
	 217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
	 227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
	 237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
	 247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
	 257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
	 267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
	 277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
	 287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
	 297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
	 307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
	 317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
	 327,   328,   329,     0,     0,   508,   509,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   510,   511,     0,   330,     0,     0,
	   0,     0,     0,     0,     0,   602,   512,   513,   514,   515,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   332,
	 333,   334,   335,   336,     0,     0,     0,   516,   517,   518,
	 519,   520,   337,   338,   339,   340,   341,   342,   343,   603,
	 604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
	 613,   614,   615,   616,   344,   345,   346,   347,   348,   349,
	 350,   521,   522,   523,   524,   525,   526,   527,   528,   351,
	 617,   352,   353,   354,   355,   356,   357,   358,   359,   360,
	 361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
	 371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
	 381,   382,   383,   384,   385,     1,     2,     3,     4,     5,
	   6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
	  16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
	  26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
	  36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
	  46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
	  56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
	  66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
	  76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
	  86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
	  96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
	 106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
	 116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
	 126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
	 136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
	 146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
	 156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
	 166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
	 176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
	 186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
	 196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
	 206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
	 216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
	 226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
	 236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
	 246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
	 256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
	 266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
	 276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
	 286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
	 296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
	 306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
	 316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
	 326,   327,   328,   329,     0,     0,   508,   509,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   510,   511,     0,   330,     0,
	   0,     0,     0,     0,     0,     0,   602,   512,   513,   514,
	 515,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 332,   333,   334,   335,   336,     0,     0,     0,   516,   517,
	 518,   519,   520,   337,   338,   339,   340,   341,   342,   343,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   344,   345,   346,   347,   348,
	 349,   350,   521,   522,   523,   524,   525,   526,   527,   528,
	 351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
	 360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
	 370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
	 380,   381,   382,   383,   384,   385,     1,     2,     3,     4,
	   5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
	  15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
	  25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
	  35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
	  45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
	  55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
	  65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
	  75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
	  85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
	  95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
	 105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
	 115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
	 125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
	 135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
	 145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
	 155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
	 165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
	 175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
	 185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
	 195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
	 205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
	 215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
	 225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
	 235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
	 245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
	 255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
	 265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
	 275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
	 285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
	 295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
	 305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
	 315,   316,     0,     0,     0,   320,   321,   322,   323,   324,
	 325,   326,   327,   328,   329,     0,     0,   508,   509,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   510,   511,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   512,   513,
	 514,   515,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   332,   333,   334,   335,     0,     0,     0,     0,   516,
	 517,   518,   519,   520,   337,   338,   339,   340,   341,   342,
	 343,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   344,   345,   346,   347,
	 348,   349,   350,   521,   522,   523,   524,   525,   526,   527,
	 528,   351,     0,   352,   353,   354,   355,   356,   357,   358,
	 359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
	 369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
	 379,   380,   381,   382,   383,   384,   385,     1,     2,     3,
	   4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
	  14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
	  24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
	  34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
	  44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
	  54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
	  64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
	  74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
	  84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
	  94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
	 104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
	 114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
	 124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
	 134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
	 144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
	 154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
	 164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
	 174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
	 184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
	 194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
	 204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
	 214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
	 224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
	 234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
	 244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
	 254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
	 264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
	 274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
	 284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
	 294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
	 304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
	 314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
	 324,   325,   326,   327,   328,   329,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 330,     0,     0,     0,     0,     0,     0,     0,   331,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   332,   333,   334,   335,   336,     0,     0,     0,
	   0,     0,     0,     0,     0,   337,   338,   339,   340,   341,
	 342,   343,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   344,   345,   346,
	 347,   348,   349,   350,     0,     0,     0,     0,     0,     0,
	   0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
	 358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
	 368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
	 378,   379,   380,   381,   382,   383,   384,   385,     1,     2,
	   3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
	  13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
	  23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
	  33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
	  43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
	  53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
	  63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
	  73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
	  83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
	  93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
	 103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
	 113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
	 123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
	 133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
	 143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
	 153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
	 163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
	 173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
	 183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
	 193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
	 203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
	 213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
	 223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
	 233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
	 243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
	 253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
	 263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
	 273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
	 283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
	 293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
	 303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
	 313,   314,   315,   316,     0,     0,     0,   320,   321,   322,
	 323,   324,   325,   326,   327,   328,   329,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   332,   333,   334,   335,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   337,   338,   339,   340,
	 341,   342,   343,   603,     0,     0,   606,     0,   607,   608,
	   0,     0,   611,     0,     0,     0,     0,     0,   344,   345,
	 346,   347,   348,   349,   350,     0,     0,     0,     0,     0,
	   0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
	 357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
	 367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
	 377,   378,   379,   380,   381,   382,   383,   384,   385,     1,
	   2,     3,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
	  62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,     0,     0,     0,   320,   321,
	 322,   323,   324,   325,   326,   327,   328,   329,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 444,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   332,   333,   334,   335,     0,     0,
	   0,     0,     0,     0,     0,     0,   445,   337,   338,   339,
	 340,   341,   342,   343,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   344,
	 345,   346,   347,   348,   349,   350,     0,     0,     0,     0,
	   0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
	 356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
	 366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
	 376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
	   1,     2,     3,     4,     5,     6,     7,     8,     9,    10,
	  11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
	  21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
	  31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
	  41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
	  51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
	  61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
	  71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
	  81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
	  91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
	 101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
	 111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
	 121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
	 131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
	 141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
	 151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
	 161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
	 171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
	 181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
	 191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
	 201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
	 211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
	 221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
	 231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
	 241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
	 251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
	 261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
	 271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
	 281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
	 291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
	 301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
	 311,   312,   313,   314,   315,   316,     0,     0,     0,   320,
	 321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   330,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   332,   333,   334,   335,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   337,   338,
	 339,   340,   341,   342,   343,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 344,   345,   346,   347,   348,   349,   350,     0,     0,     0,
	   0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
	 355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
	 365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
	 375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
	 385,     1,     2,     3,     4,     5,     6,     7,     8,     9,
	  10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
	  20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
	  30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
	  40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
	  50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
	  60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
	  70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
	  80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
	  90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
	 100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
	 110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
	 120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
	 130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
	 140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
	 150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
	 160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
	 170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
	 180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
	 190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
	 200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
	 210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
	 220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
	 230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
	 240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
	 250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
	 260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
	 270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
	 280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
	 290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
	 300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
	 310,   311,   312,   313,   314,   315,   316,     0,     0,     0,
	 320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   720,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   332,   333,   334,   335,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
	 338,   339,   340,   341,   342,   343,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   344,   345,   346,   347,   348,   349,   350,     0,     0,
	   0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
	 354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
	 364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
	 374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
	 384,   385,     1,     2,     3,     4,     5,     6,     7,     8,
	   9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
	  19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
	  29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
	  39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
	  49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
	  59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
	  69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
	  79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
	  89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
	  99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
	 109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
	 119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
	 129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
	 139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
	 149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
	 159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
	 169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
	 179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
	 189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
	 199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
	 209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
	 219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
	 229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
	 259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
	 269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
	 279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
	 289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
	 299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 309,   310,   311,   312,   313,   314,   315,   316,     0,     0,
	   0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
	 329,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   833,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   332,   333,   334,
	 335,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 337,   338,   339,   340,   341,   342,   343,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   344,   345,   346,   347,   348,   349,   350,     0,
	   0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
	 353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
	 363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
	 373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
	 383,   384,   385,     1,     2,     3,     4,     5,     6,     7,
	   8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
	  18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
	  28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
	  38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
	  48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
	  58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
	  68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
	  78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
	  88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
	  98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
	 108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
	 118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
	 128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
	 138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
	 148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
	 158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
	 168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
	 178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
	 188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
	 198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
	 208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
	 218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
	 228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
	 238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
	 248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
	 258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
	 268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
	 278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
	 288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
	 298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
	 308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
	   0,     0,   320,   321,   322,   323,   324,   325,   326,   327,
	 328,   329,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   868,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   332,   333,
	 334,   335,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   337,   338,   339,   340,   341,   342,   343,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   344,   345,   346,   347,   348,   349,   350,
	   0,     0,     0,     0,     0,     0,     0,     0,   351,     0,
	 352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
	 362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
	 372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
	 382,   383,   384,   385,     1,     2,     3,     4,     5,     6,
	   7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
	  17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
	  27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
	  37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
	  47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
	  57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
	  67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
	  77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
	  87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
	  97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
	 107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
	 117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
	 127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
	 137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
	 147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
	 157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
	 167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
	 177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
	 187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
	 197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
	 207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
	 217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
	 227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
	 237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
	 247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
	 257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
	 267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
	 277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
	 287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
	 297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
	 307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
	   0,     0,     0,   320,   321,   322,   323,   324,   325,   326,
	 327,   328,   329,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   332,
	 333,   334,   335,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   337,   338,   339,   340,   341,   342,   343,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   344,   345,   346,   347,   348,   349,
	 350,     0,     0,     0,     0,     0,     0,     0,     0,   351,
	   0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
	 361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
	 371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
	 381,   382,   383,   384,   385,     2,     3,     4,     5,     6,
	   7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
	  17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
	  27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
	  37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
	  47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
	  57,    58,     0,     0,    61,    62,    63,    64,    65,    66,
	  67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
	  77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
	  87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
	  97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
	 107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
	 117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
	 127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
	 137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
	 147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
	 157,   158,   159,   160,   161,   162,   163,   164,     0,   166,
	 167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
	 177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
	 187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
	 197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
	 207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
	 217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
	 227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
	 237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
	 247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
	 257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
	 267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
	 277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
	 287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
	 297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
	 307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
	   0,     0,     0,     0,     0,     0,   323,     0,     0,     0,
	 327,   328,   329,     0,     0,   508,   509,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   510,   511,     0,     0,     0,   645,
	 788,     0,     0,     0,     0,     0,   512,   513,   514,   515,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   516,   517,   518,
	 519,   520,   337,     0,     0,     0,     0,   342,   343,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   521,   522,   523,   524,   525,   526,   527,   528,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   364,     2,     3,     4,     5,     6,     7,
	   8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
	  18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
	  28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
	  38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
	  48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
	  58,     0,     0,    61,    62,    63,    64,    65,    66,    67,
	  68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
	  78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
	  88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
	  98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
	 108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
	 118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
	 128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
	 138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
	 148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
	 158,   159,   160,   161,   162,   163,   164,     0,   166,   167,
	 168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
	 178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
	 188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
	 198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
	 208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
	 218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
	 228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
	 238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
	 248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
	 258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
	 268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
	 278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
	 288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
	 298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
	 308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
	   0,     0,     0,     0,     0,   323,     0,     0,     0,   327,
	 328,   329,     0,     0,   508,   509,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   510,   511,     0,     0,     0,   645,   899,
	   0,     0,     0,     0,     0,   512,   513,   514,   515,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   516,   517,   518,   519,
	 520,   337,     0,     0,     0,     0,   342,   343,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 521,   522,   523,   524,   525,   526,   527,   528,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   364,     2,     3,     4,     5,     6,     7,     8,
	   9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
	  19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
	  29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
	  39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
	  49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
	   0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
	  69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
	  79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
	  89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
	  99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
	 109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
	 119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
	 129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
	 139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
	 149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
	 159,   160,   161,   162,   163,   164,     0,   166,   167,   168,
	 169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
	 179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
	 189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
	 199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
	 209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
	 219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
	 229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
	 259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
	 269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
	 279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
	 289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
	 299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 309,   310,   311,   312,   313,   314,   315,   316,     0,     0,
	   0,     0,     0,     0,   323,     0,     0,     0,   327,   328,
	 329,     0,     0,   508,   509,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   510,   511,     0,     0,   584,     0,     0,     0,
	   0,     0,     0,     0,   512,   513,   514,   515,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   516,   517,   518,   519,   520,
	 337,     0,     0,     0,     0,   342,   343,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   521,
	 522,   523,   524,   525,   526,   527,   528,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   364,     2,     3,     4,     5,     6,     7,     8,     9,
	  10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
	  20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
	  30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
	  40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
	  50,    51,    52,    53,    54,    55,    56,    57,    58,     0,
	   0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
	  70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
	  80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
	  90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
	 100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
	 110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
	 120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
	 130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
	 140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
	 150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
	 160,   161,   162,   163,   164,     0,   166,   167,   168,   169,
	 170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
	 180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
	 190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
	 200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
	 210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
	 220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
	 230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
	 240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
	 250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
	 260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
	 270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
	 280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
	 290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
	 300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
	 310,   311,   312,   313,   314,   315,   316,     0,     0,     0,
	   0,     0,     0,   323,     0,     0,     0,   327,   328,   329,
	   0,     0,   508,   509,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   510,   511,     0,     0,     0,   645,     0,     0,     0,
	   0,     0,     0,   512,   513,   514,   515,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   516,   517,   518,   519,   520,   337,
	   0,     0,     0,     0,   342,   343,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   521,   522,
	 523,   524,   525,   526,   527,   528,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 364,     2,     3,     4,     5,     6,     7,     8,     9,    10,
	  11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
	  21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
	  31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
	  41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
	  51,    52,    53,    54,    55,    56,    57,    58,     0,     0,
	  61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
	  71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
	  81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
	  91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
	 101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
	 111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
	 121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
	 131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
	 141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
	 151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
	 161,   162,   163,   164,     0,   166,   167,   168,   169,   170,
	 171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
	 181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
	 191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
	 201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
	 211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
	 221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
	 231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
	 241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
	 251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
	 261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
	 271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
	 281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
	 291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
	 301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
	 311,   312,   313,   314,   315,   316,     0,     0,     0,     0,
	   0,     0,   323,     0,     0,     0,   327,   328,   329,     0,
	   0,   508,   509,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 510,   511,     0,     0,   747,     0,     0,     0,     0,     0,
	   0,     0,   512,   513,   514,   515,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   516,   517,   518,   519,   520,   337,     0,
	   0,     0,     0,   342,   343,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   521,   522,   523,
	 524,   525,   526,   527,   528,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   364,
	   2,     3,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,     0,     0,    61,
	  62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,     0,   166,   167,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,     0,     0,     0,     0,     0,
	   0,   323,     0,     0,     0,   327,   328,   329,     0,     0,
	 508,   509,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   510,
	 511,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 758,   512,   513,   514,   515,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,   516,   517,   518,   519,   520,   337,     0,     0,
	   0,     0,   342,   343,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   521,   522,   523,   524,
	 525,   526,   527,   528,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   364,     2,
	   3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
	  13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
	  23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
	  33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
	  43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
	  53,    54,    55,    56,    57,    58,     0,     0,    61,    62,
	  63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
	  73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
	  83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
	  93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
	 103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
	 113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
	 123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
	 133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
	 143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
	 153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
	 163,   164,     0,   166,   167,   168,   169,   170,   171,   172,
	 173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
	 183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
	 193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
	 203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
	 213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
	 223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
	 233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
	 243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
	 253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
	 263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
	 273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
	 283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
	 293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
	 303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
	 313,   314,   315,   316,     0,     0,     0,     0,     0,     0,
	 323,     0,     0,     0,   327,   328,   329,     0,     0,   508,
	 509,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   510,   511,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 512,   513,   514,   515,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,   516,   517,   518,   519,   520,   337,     0,     0,     0,
	   0,   342,   343,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   521,   522,   523,   524,   525,
	 526,   527,   528,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   364,     2,     3,
	   4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
	  14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
	  24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
	  34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
	  44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
	  54,    55,    56,    57,    58,     0,     0,    61,    62,    63,
	  64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
	  74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
	  84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
	  94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
	 104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
	 114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
	 124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
	 134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
	 144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
	 154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
	 164,     0,   166,   167,   168,   169,   170,   171,   172,   173,
	 174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
	 184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
	 194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
	 204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
	 214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
	 224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
	 234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
	 244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
	 254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
	 264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
	 274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
	 284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
	 294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
	 304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
	 314,   315,   316,     0,     0,     0,     0,     0,     0,   323,
	   0,     0,     0,   327,   328,   329,     0,     0,   508,   509,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,   510,   511,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   512,
	 513,   514,   515,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	 516,   517,   518,   519,   520,   337,     0,     0,     0,     0,
	 342,   663,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,   521,   522,   523,   524,   525,   526,
	 527,   528,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   364,     2,     3,     4,
	   5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
	  15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
	  25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
	  35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
	  45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
	  55,    56,    57,    58,     0,     0,    61,    62,    63,    64,
	  65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
	  75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
	  85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
	  95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
	 105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
	 115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
	 125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
	 135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
	 145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
	 155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
	   0,   166,   167,   168,   169,   170,   171,   172,   173,   174,
	 175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
	 185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
	 195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
	 205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
	 215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
	 225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
	 235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
	 245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
	 255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
	 265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
	 275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
	 285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
	 295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
	 305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
	 315,   316,     0,     0,     0,     0,     0,     0,   323,     0,
	   0,     0,   327,   328,   329,     0,     0,   508,   509,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,   510,   511,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,   512,   513,
	 514,   515,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,   516,
	 517,   518,   519,   708,   337,     0,     0,     0,     0,   342,
	 343,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   521,   522,   523,   524,   525,   526,   527,
	 528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,   364,     2,     3,     4,     5,
	   6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
	  16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
	  26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
	  36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
	  46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
	  56,    57,    58,     0,     0,    61,    62,    63,    64,    65,
	  66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
	  76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
	  86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
	  96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
	 106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
	 116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
	 126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
	 136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
	 146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
	 156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
	 166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
	 176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
	 186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
	 196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
	 206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
	 216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
	 226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
	 236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
	 246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
	 256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
	 266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
	 276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
	 286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
	 296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
	 306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
	 316,     0,     0,     0,     0,     0,     0,   323,     0,     0,
	   0,   327,   328,   329,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
	   0,     0,     0,   337,     0,     0,     0,     0,   342,   343
};

static inline constexpr I16 CHECK[]{
	   0,   391,     0,   410,     0,   502,   490,     0,   415,     0,
	 443,   511,   631,   551,   448,   561,   449,   410,   750,   578,
	 410,   556,   576,   399,   353,   415,   422,   353,   341,   567,
	 356,   643,   354,   645,   353,   570,   648,   353,   358,   364,
	 537,   336,   337,   361,   579,   435,   356,   358,   357,   390,
	 361,   354,   361,   364,   364,   373,   490,   386,   387,   388,
	 389,   387,   356,   439,   377,   390,   499,   500,   387,   363,
	 390,   387,   556,   414,   508,   509,   356,   372,   373,   455,
	 912,   334,   335,   567,   364,   354,   570,   919,   355,   354,
	 649,   356,   482,   356,   361,   579,   354,   929,   363,   355,
	 363,   354,   356,   356,   354,   361,   540,   360,   387,   363,
	 610,   390,   612,   354,   598,   417,   418,   419,   420,   421,
	 422,   423,   556,   343,   344,   345,   346,   347,   348,   349,
	 350,   351,   352,   567,   355,   754,   570,   356,   355,   361,
	 361,   549,   364,   363,   361,   579,   643,   555,   645,   557,
	 354,   648,   560,   549,   562,   357,   564,   565,   658,   361,
	 355,   569,   332,   333,   598,   662,   361,   355,   722,   565,
	 355,   355,   355,   361,   355,   787,   361,   361,   361,   355,
	 361,   355,   364,   355,   355,   361,   576,   361,   578,   361,
	 361,   355,   361,   355,   355,   364,   355,   361,   574,   361,
	 361,   933,   361,   355,   355,   355,   355,   355,   355,   361,
	 361,   361,   361,   361,   361,   355,   355,   355,   338,   339,
	 357,   361,   361,   361,   361,   355,   386,   387,   388,   389,
	 390,   372,   387,   667,   641,   390,   855,   359,   792,   361,
	 386,   387,   388,   389,   733,   734,   735,   736,   641,   354,
	 361,   641,   361,   364,   387,   867,   756,   390,   387,   649,
	 760,   390,   387,   387,   387,   390,   390,   390,   387,   361,
	 362,   390,   818,   819,   354,   387,   811,   812,   390,   364,
	 387,   778,   779,   390,   717,   387,   824,   366,   390,   368,
	 787,   354,   726,   727,   728,   729,   730,   731,   732,   733,
	 734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
	 744,   923,   387,   361,   361,   390,   364,   364,   361,   390,
	 939,   364,   379,   380,   381,   361,   362,   811,   812,   369,
	 370,   371,   722,   358,   729,   730,   390,   731,   732,   390,
	 824,   390,   826,   358,   356,   737,   738,   356,   390,   390,
	 355,   390,   363,   853,   364,   361,   856,   364,   361,   363,
	 361,   363,   361,   390,   361,   342,   361,   361,   355,   361,
	 867,   361,   361,   361,   354,   356,   355,   811,   812,   354,
	 354,   353,   390,   356,   340,   354,   357,   357,   354,   357,
	 824,   391,   826,   376,   359,   354,   896,   375,   374,   399,
	 391,   364,   792,   364,   390,   390,   364,   407,   399,   407,
	 410,   407,   909,   913,   407,   415,   407,   415,   354,   410,
	 362,   364,   415,   364,   415,   425,   923,   364,   928,   364,
	 354,   354,   363,   390,   355,   435,   434,   390,   355,   439,
	 355,   361,   361,   361,   435,   357,   353,   361,   439,   856,
	 398,   353,   390,   387,   359,   455,   355,   354,   358,   363,
	 355,   364,   402,   364,   455,   358,   856,   358,   739,   359,
	 740,   743,   439,   741,   336,   435,   742,   439,   581,   716,
	 744,   831,   482,   858,   929,   858,   918,   930,   433,   896,
	 896,   482,   809,   493,   407,   572,   641,   641,   641,   807,
	 812,   816,   493,   824,    -1,   819,   896,   814,    -1,    -1,
	  -1,    -1,   818,    -1,    -1,    -1,    -1,   822,    -1,    -1,
	  -1,    -1,   826,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   545,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   574,    -1,   576,    -1,   578,    -1,
	  -1,    -1,    -1,   574,    -1,   576,    -1,   578,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   631,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 631,   641,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,
	 641,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   722,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   722,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 750,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,   750,
	  -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   855,   856,    -1,   858,    -1,
	 858,    -1,    -1,    -1,   855,   856,    -1,   858,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   896,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   896,    -1,    -1,    -1,    -1,
	  -1,    -1,   912,    -1,    -1,    -1,    -1,    -1,    -1,   919,
	  -1,   912,    -1,    -1,    -1,    -1,    -1,    -1,   919,   929,
	  -1,    -1,    -1,   933,    -1,    -1,    -1,    -1,   929,   939,
	  -1,    -1,   933,    -1,    -1,    -1,     0,    -1,   939,     3,
	   4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
	  14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
	  24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
	  34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
	  44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
	  54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
	  64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
	  74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
	  84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
	  94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
	 104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
	 114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
	 124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
	 134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
	 144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
	 154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
	 164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
	 174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
	 184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
	 194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
	 204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
	 214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
	 224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
	 234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
	 244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
	 254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
	 264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
	 274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
	 284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
	 294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
	 304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
	 314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
	 324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   378,   379,   380,   381,   382,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
	 394,   395,   396,   397,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,
	 414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
	 434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
	 444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
	 454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
	   3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
	  13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
	  23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
	  33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
	  43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
	  53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
	  63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
	  73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
	  83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
	  93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
	 103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
	 113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
	 123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
	 133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
	 143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
	 153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
	 163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
	 173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
	 183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
	 193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
	 203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
	 213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
	 223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
	 233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
	 243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
	 253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
	 263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
	 273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
	 283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
	 293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
	 303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
	 313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
	 323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
	  -1,   334,   335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 353,   354,    -1,   356,    -1,   358,   359,    -1,    -1,    -1,
	  -1,   364,   365,   366,   367,   368,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   378,   379,   380,   381,   382,
	  -1,    -1,    -1,   386,   387,   388,   389,   390,   391,   392,
	 393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
	 403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
	 413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
	 423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
	 433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
	 443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
	 453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
	 463,     3,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
	  62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
	 322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
	  -1,    -1,   334,   335,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   353,   354,    -1,   356,    -1,   358,   359,    -1,    -1,
	  -1,    -1,   364,   365,   366,   367,   368,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   378,   379,   380,   381,
	 382,    -1,    -1,    -1,   386,   387,   388,   389,   390,   391,
	 392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
	  -1,   403,   404,   405,   406,   407,   408,   409,   410,   411,
	 412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
	 422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
	 432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
	 442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
	 452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
	 462,   463,     3,     4,     5,     6,     7,     8,     9,    10,
	  11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
	  21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
	  31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
	  41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
	  51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
	  61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
	  71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
	  81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
	  91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
	 101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
	 111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
	 121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
	 131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
	 141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
	 151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
	 161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
	 171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
	 181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
	 191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
	 201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
	 211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
	 221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
	 231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
	 241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
	 251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
	 261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
	 271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
	 281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
	 291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
	 301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
	 311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
	 321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
	 331,    -1,    -1,   334,   335,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   353,   354,    -1,   356,    -1,   358,    -1,    -1,
	  -1,    -1,    -1,   364,   365,   366,   367,   368,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,   380,
	 381,   382,    -1,    -1,    -1,   386,   387,   388,   389,   390,
	 391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
	 401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
	 411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
	 421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
	 431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
	 441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
	 451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
	 461,   462,   463,     3,     4,     5,     6,     7,     8,     9,
	  10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
	  20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
	  30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
	  40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
	  50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
	  60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
	  70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
	  80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
	  90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
	 100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
	 110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
	 120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
	 130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
	 140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
	 150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
	 160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
	 170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
	 180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
	 190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
	 200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
	 210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
	 220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
	 230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
	 240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
	 250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
	 260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
	 270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
	 280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
	 290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
	 300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
	 310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
	 320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
	 330,   331,    -1,    -1,   334,   335,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   353,   354,    -1,   356,    -1,   358,    -1,
	  -1,    -1,    -1,    -1,   364,   365,   366,   367,   368,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,
	 380,   381,   382,    -1,    -1,    -1,   386,   387,   388,   389,
	 390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
	 400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
	 410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
	 420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
	 430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
	 440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
	 450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
	 460,   461,   462,   463,     3,     4,     5,     6,     7,     8,
	   9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
	  19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
	  29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
	  39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
	  49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
	  59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
	  69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
	  79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
	  89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
	  99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
	 109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
	 119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
	 129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
	 139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
	 149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
	 159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
	 169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
	 179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
	 189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
	 199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
	 209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
	 219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
	 229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
	 259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
	 269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
	 279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
	 289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
	 299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
	 319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
	 329,   330,   331,    -1,    -1,   334,   335,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   353,   354,    -1,   356,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   364,   365,   366,   367,   368,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,
	 379,   380,   381,   382,    -1,    -1,    -1,   386,   387,   388,
	 389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
	 399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
	 409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
	 419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
	 429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
	 439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
	 449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
	 459,   460,   461,   462,   463,     3,     4,     5,     6,     7,
	   8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
	  18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
	  28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
	  38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
	  48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
	  58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
	  68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
	  78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
	  88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
	  98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
	 108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
	 118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
	 128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
	 138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
	 148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
	 158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
	 168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
	 178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
	 188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
	 198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
	 208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
	 218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
	 228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
	 238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
	 248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
	 258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
	 268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
	 278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
	 288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
	 298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
	 308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
	 318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
	 328,   329,   330,   331,    -1,    -1,   334,   335,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   353,   354,    -1,   356,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   364,   365,   366,   367,
	 368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 378,   379,   380,   381,   382,    -1,    -1,    -1,   386,   387,
	 388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,
	 418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
	 428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
	 438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
	 448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
	 458,   459,   460,   461,   462,   463,     3,     4,     5,     6,
	   7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
	  17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
	  27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
	  37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
	  47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
	  57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
	  67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
	  77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
	  87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
	  97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
	 107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
	 117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
	 127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
	 137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
	 147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
	 157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
	 167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
	 177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
	 187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
	 197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
	 207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
	 217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
	 227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
	 237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
	 247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
	 257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
	 267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
	 277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
	 287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
	 297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
	 307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
	 317,   318,    -1,    -1,    -1,   322,   323,   324,   325,   326,
	 327,   328,   329,   330,   331,    -1,    -1,   334,   335,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   353,   354,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   365,   366,
	 367,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   378,   379,   380,   381,    -1,    -1,    -1,    -1,   386,
	 387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
	 397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415,   416,
	 417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
	 427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
	 437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
	 447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
	 457,   458,   459,   460,   461,   462,   463,     3,     4,     5,
	   6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
	  16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
	  26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
	  36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
	  46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
	  56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
	  66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
	  76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
	  86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
	  96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
	 106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
	 116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
	 126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
	 136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
	 146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
	 156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
	 166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
	 176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
	 186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
	 196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
	 206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
	 216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
	 226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
	 236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
	 246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
	 256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
	 266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
	 276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
	 286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
	 296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
	 306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
	 316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
	 326,   327,   328,   329,   330,   331,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   378,   379,   380,   381,   382,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   391,   392,   393,   394,   395,
	 396,   397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415,
	 416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
	 436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
	 446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
	 456,   457,   458,   459,   460,   461,   462,   463,     3,     4,
	   5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
	  15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
	  25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
	  35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
	  45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
	  55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
	  65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
	  75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
	  85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
	  95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
	 105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
	 115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
	 125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
	 135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
	 145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
	 155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
	 165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
	 175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
	 185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
	 195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
	 205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
	 215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
	 225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
	 235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
	 245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
	 255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
	 265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
	 275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
	 285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
	 295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
	 305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
	 315,   316,   317,   318,    -1,    -1,    -1,   322,   323,   324,
	 325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   378,   379,   380,   381,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,   394,
	 395,   396,   397,   398,    -1,    -1,   401,    -1,   403,   404,
	  -1,    -1,   407,    -1,    -1,    -1,    -1,    -1,   413,   414,
	 415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
	 435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
	 445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
	 455,   456,   457,   458,   459,   460,   461,   462,   463,     3,
	   4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
	  14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
	  24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
	  34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
	  44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
	  54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
	  64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
	  74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
	  84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
	  94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
	 104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
	 114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
	 124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
	 134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
	 144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
	 154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
	 164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
	 174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
	 184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
	 194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
	 204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
	 214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
	 224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
	 234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
	 244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
	 254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
	 264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
	 274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
	 284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
	 294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
	 304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
	 314,   315,   316,   317,   318,    -1,    -1,    -1,   322,   323,
	 324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   378,   379,   380,   381,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   390,   391,   392,   393,
	 394,   395,   396,   397,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,
	 414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
	 434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
	 444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
	 454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
	   3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
	  13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
	  23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
	  33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
	  43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
	  53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
	  63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
	  73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
	  83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
	  93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
	 103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
	 113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
	 123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
	 133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
	 143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
	 153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
	 163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
	 173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
	 183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
	 193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
	 203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
	 213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
	 223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
	 233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
	 243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
	 253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
	 263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
	 273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
	 283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
	 293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
	 303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
	 313,   314,   315,   316,   317,   318,    -1,    -1,    -1,   322,
	 323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   378,   379,   380,   381,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
	 393,   394,   395,   396,   397,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 413,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   428,    -1,   430,   431,   432,
	 433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
	 443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
	 453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
	 463,     3,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
	  62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,   317,   318,    -1,    -1,    -1,
	 322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   378,   379,   380,   381,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
	 392,   393,   394,   395,   396,   397,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   428,    -1,   430,   431,
	 432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
	 442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
	 452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
	 462,   463,     3,     4,     5,     6,     7,     8,     9,    10,
	  11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
	  21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
	  31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
	  41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
	  51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
	  61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
	  71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
	  81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
	  91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
	 101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
	 111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
	 121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
	 131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
	 141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
	 151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
	 161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
	 171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
	 181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
	 191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
	 201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
	 211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
	 221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
	 231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
	 241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
	 251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
	 261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
	 271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
	 281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
	 291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
	 301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
	 311,   312,   313,   314,   315,   316,   317,   318,    -1,    -1,
	  -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
	 331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,   380,
	 381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 391,   392,   393,   394,   395,   396,   397,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   428,    -1,   430,
	 431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
	 441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
	 451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
	 461,   462,   463,     3,     4,     5,     6,     7,     8,     9,
	  10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
	  20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
	  30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
	  40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
	  50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
	  60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
	  70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
	  80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
	  90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
	 100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
	 110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
	 120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
	 130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
	 140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
	 150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
	 160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
	 170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
	 180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
	 190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
	 200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
	 210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
	 220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
	 230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
	 240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
	 250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
	 260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
	 270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
	 280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
	 290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
	 300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
	 310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
	  -1,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
	 330,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,
	 380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   391,   392,   393,   394,   395,   396,   397,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   428,    -1,
	 430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
	 440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
	 450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
	 460,   461,   462,   463,     3,     4,     5,     6,     7,     8,
	   9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
	  19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
	  29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
	  39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
	  49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
	  59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
	  69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
	  79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
	  89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
	  99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
	 109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
	 119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
	 129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
	 139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
	 149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
	 159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
	 169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
	 179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
	 189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
	 199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
	 209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
	 219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
	 229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
	 259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
	 269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
	 279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
	 289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
	 299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
	  -1,    -1,    -1,   322,   323,   324,   325,   326,   327,   328,
	 329,   330,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,
	 379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   391,   392,   393,   394,   395,   396,   397,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418,
	 419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   428,
	  -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
	 439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
	 449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
	 459,   460,   461,   462,   463,     4,     5,     6,     7,     8,
	   9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
	  19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
	  29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
	  39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
	  49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
	  59,    60,    -1,    -1,    63,    64,    65,    66,    67,    68,
	  69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
	  79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
	  89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
	  99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
	 109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
	 119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
	 129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
	 139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
	 149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
	 159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
	 169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
	 179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
	 189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
	 199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
	 209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
	 219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
	 229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
	 239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
	 249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
	 259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
	 269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
	 279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
	 289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
	 299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
	 309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
	  -1,    -1,    -1,    -1,    -1,    -1,   325,    -1,    -1,    -1,
	 329,   330,   331,    -1,    -1,   334,   335,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   353,   354,    -1,    -1,    -1,   358,
	 359,    -1,    -1,    -1,    -1,    -1,   365,   366,   367,   368,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,   387,   388,
	 389,   390,   391,    -1,    -1,    -1,    -1,   396,   397,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   442,     4,     5,     6,     7,     8,     9,
	  10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
	  20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
	  30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
	  40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
	  50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
	  60,    -1,    -1,    63,    64,    65,    66,    67,    68,    69,
	  70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
	  80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
	  90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
	 100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
	 110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
	 120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
	 130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
	 140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
	 150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
	 160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
	 170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
	 180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
	 190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
	 200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
	 210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
	 220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
	 230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
	 240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
	 250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
	 260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
	 270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
	 280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
	 290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
	 300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
	 310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
	  -1,    -1,    -1,    -1,    -1,   325,    -1,    -1,    -1,   329,
	 330,   331,    -1,    -1,   334,   335,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   353,   354,    -1,    -1,    -1,   358,   359,
	  -1,    -1,    -1,    -1,    -1,   365,   366,   367,   368,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   386,   387,   388,   389,
	 390,   391,    -1,    -1,    -1,    -1,   396,   397,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   442,     4,     5,     6,     7,     8,     9,    10,
	  11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
	  21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
	  31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
	  41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
	  51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
	  -1,    -1,    63,    64,    65,    66,    67,    68,    69,    70,
	  71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
	  81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
	  91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
	 101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
	 111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
	 121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
	 131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
	 141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
	 151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
	 161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
	 171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
	 181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
	 191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
	 201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
	 211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
	 221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
	 231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
	 241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
	 251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
	 261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
	 271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
	 281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
	 291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
	 301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
	 311,   312,   313,   314,   315,   316,   317,   318,    -1,    -1,
	  -1,    -1,    -1,    -1,   325,    -1,    -1,    -1,   329,   330,
	 331,    -1,    -1,   334,   335,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   353,   354,    -1,    -1,   357,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   365,   366,   367,   368,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   386,   387,   388,   389,   390,
	 391,    -1,    -1,    -1,    -1,   396,   397,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   420,
	 421,   422,   423,   424,   425,   426,   427,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   442,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,    59,    60,    -1,
	  -1,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,   317,   318,    -1,    -1,    -1,
	  -1,    -1,    -1,   325,    -1,    -1,    -1,   329,   330,   331,
	  -1,    -1,   334,   335,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   353,   354,    -1,    -1,    -1,   358,    -1,    -1,    -1,
	  -1,    -1,    -1,   365,   366,   367,   368,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   386,   387,   388,   389,   390,   391,
	  -1,    -1,    -1,    -1,   396,   397,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   420,   421,
	 422,   423,   424,   425,   426,   427,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 442,     4,     5,     6,     7,     8,     9,    10,    11,    12,
	  13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
	  23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
	  33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
	  43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
	  53,    54,    55,    56,    57,    58,    59,    60,    -1,    -1,
	  63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
	  73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
	  83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
	  93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
	 103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
	 113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
	 123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
	 133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
	 143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
	 153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
	 163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
	 173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
	 183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
	 193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
	 203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
	 213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
	 223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
	 233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
	 243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
	 253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
	 263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
	 273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
	 283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
	 293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
	 303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
	 313,   314,   315,   316,   317,   318,    -1,    -1,    -1,    -1,
	  -1,    -1,   325,    -1,    -1,    -1,   329,   330,   331,    -1,
	  -1,   334,   335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 353,   354,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   365,   366,   367,   368,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   386,   387,   388,   389,   390,   391,    -1,
	  -1,    -1,    -1,   396,   397,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   420,   421,   422,
	 423,   424,   425,   426,   427,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   442,
	   4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
	  14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
	  24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
	  34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
	  44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
	  54,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
	  64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
	  74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
	  84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
	  94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
	 104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
	 114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
	 124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
	 134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
	 144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
	 154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
	 164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
	 174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
	 184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
	 194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
	 204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
	 214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
	 224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
	 234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
	 244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
	 254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
	 264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
	 274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
	 284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
	 294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
	 304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
	 314,   315,   316,   317,   318,    -1,    -1,    -1,    -1,    -1,
	  -1,   325,    -1,    -1,    -1,   329,   330,   331,    -1,    -1,
	 334,   335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   353,
	 354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 364,   365,   366,   367,   368,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,   386,   387,   388,   389,   390,   391,    -1,    -1,
	  -1,    -1,   396,   397,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   420,   421,   422,   423,
	 424,   425,   426,   427,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   442,     4,
	   5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
	  15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
	  25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
	  35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
	  45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
	  55,    56,    57,    58,    59,    60,    -1,    -1,    63,    64,
	  65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
	  75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
	  85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
	  95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
	 105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
	 115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
	 125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
	 135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
	 145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
	 155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
	 165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
	 175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
	 185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
	 195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
	 205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
	 215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
	 225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
	 235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
	 245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
	 255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
	 265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
	 275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
	 285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
	 295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
	 305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
	 315,   316,   317,   318,    -1,    -1,    -1,    -1,    -1,    -1,
	 325,    -1,    -1,    -1,   329,   330,   331,    -1,    -1,   334,
	 335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   353,   354,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 365,   366,   367,   368,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,   386,   387,   388,   389,   390,   391,    -1,    -1,    -1,
	  -1,   396,   397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   420,   421,   422,   423,   424,
	 425,   426,   427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   442,     4,     5,
	   6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
	  16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
	  26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
	  36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
	  46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
	  56,    57,    58,    59,    60,    -1,    -1,    63,    64,    65,
	  66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
	  76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
	  86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
	  96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
	 106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
	 116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
	 126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
	 136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
	 146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
	 156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
	 166,    -1,   168,   169,   170,   171,   172,   173,   174,   175,
	 176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
	 186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
	 196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
	 206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
	 216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
	 226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
	 236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
	 246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
	 256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
	 266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
	 276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
	 286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
	 296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
	 306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
	 316,   317,   318,    -1,    -1,    -1,    -1,    -1,    -1,   325,
	  -1,    -1,    -1,   329,   330,   331,    -1,    -1,   334,   335,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,   353,   354,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   365,
	 366,   367,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	 386,   387,   388,   389,   390,   391,    -1,    -1,    -1,    -1,
	 396,   397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,   420,   421,   422,   423,   424,   425,
	 426,   427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   442,     4,     5,     6,
	   7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
	  17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
	  27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
	  37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
	  47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
	  57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
	  67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
	  77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
	  87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
	  97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
	 107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
	 117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
	 127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
	 137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
	 147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
	 157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
	  -1,   168,   169,   170,   171,   172,   173,   174,   175,   176,
	 177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
	 187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
	 197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
	 207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
	 217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
	 227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
	 237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
	 247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
	 257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
	 267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
	 277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
	 287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
	 297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
	 307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
	 317,   318,    -1,    -1,    -1,    -1,    -1,    -1,   325,    -1,
	  -1,    -1,   329,   330,   331,    -1,    -1,   334,   335,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,   353,   354,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   365,   366,
	 367,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,
	 387,   388,   389,   390,   391,    -1,    -1,    -1,    -1,   396,
	 397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
	 427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,   442,     4,     5,     6,     7,
	   8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
	  18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
	  28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
	  38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
	  48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
	  58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
	  68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
	  78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
	  88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
	  98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
	 108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
	 118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
	 128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
	 138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
	 148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
	 158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
	 168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
	 178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
	 188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
	 198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
	 208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
	 218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
	 228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
	 238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
	 248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
	 258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
	 268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
	 278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
	 288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
	 298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
	 308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
	 318,    -1,    -1,    -1,    -1,    -1,    -1,   325,    -1,    -1,
	  -1,   329,   330,   331,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
	  -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,   396,   397
};

static inline constexpr I16 STOS[]{
	   0,     3,     4,     5,     6,     7,     8,     9,    10,    11,
	  12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
	  22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
	  32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
	  42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
	  52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
	  62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
	  72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
	  82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
	  92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
	 102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
	 112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
	 122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
	 132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
	 142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
	 152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
	 162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
	 172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
	 182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
	 192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
	 202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
	 212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
	 222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
	 232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
	 242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
	 252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
	 262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
	 272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
	 282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
	 292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
	 302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
	 312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
	 322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
	 356,   364,   378,   379,   380,   381,   382,   391,   392,   393,
	 394,   395,   396,   397,   413,   414,   415,   416,   417,   418,
	 419,   428,   430,   431,   432,   433,   434,   435,   436,   437,
	 438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
	 448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
	 458,   459,   460,   461,   462,   463,   495,   496,   499,   500,
	 501,   502,   506,   507,   508,   509,   510,   511,   514,   515,
	 516,   517,   518,   520,   525,   526,   527,   568,   569,   570,
	 572,   579,   583,   584,   590,   593,   354,   354,   354,   354,
	 354,   354,   354,   354,   356,   526,   358,   390,   354,   354,
	 364,   390,   364,   571,   355,   361,   503,   504,   505,   515,
	 520,   361,   364,   390,   364,   390,   516,   520,   372,   522,
	 523,     0,   569,   500,   508,   515,   364,   499,   390,   575,
	 576,   594,   595,   387,   390,   575,   387,   575,   387,   575,
	 387,   575,   387,   575,   575,   594,   387,   575,   390,   573,
	 574,   520,   529,   358,   390,   414,   512,   513,   390,   519,
	 356,   364,   521,   358,   547,   572,   504,   503,   505,   390,
	 390,   354,   363,   521,   358,   361,   364,   498,   334,   335,
	 353,   354,   365,   366,   367,   368,   386,   387,   388,   389,
	 390,   420,   421,   422,   423,   424,   425,   426,   427,   465,
	 466,   467,   469,   470,   471,   472,   473,   474,   475,   476,
	 477,   518,   520,   524,   521,   355,   390,   364,   363,   361,
	 355,   361,   355,   361,   363,   361,   361,   361,   355,   361,
	 361,   361,   361,   361,   361,   361,   355,   361,   355,   361,
	 354,   357,   361,   364,   515,   520,   530,   531,   528,   363,
	 355,   361,   355,   361,   357,   476,   478,   479,   480,   481,
	 482,   483,   484,   485,   486,   487,   488,   489,   356,   364,
	 358,   359,   364,   398,   399,   400,   401,   403,   404,   405,
	 406,   407,   408,   409,   410,   411,   412,   429,   476,   489,
	 491,   493,   495,   499,   518,   520,   536,   537,   538,   539,
	 540,   548,   549,   550,   551,   554,   555,   558,   559,   560,
	 567,   572,   521,   363,   521,   358,   491,   534,   363,   497,
	 390,   361,   364,   476,   476,   493,   334,   335,   356,   360,
	 355,   355,   361,   397,   491,   354,   476,   361,   373,   572,
	 353,   356,   387,   576,   594,   390,   595,   353,   386,   387,
	 388,   389,   580,   581,   387,   489,   494,   582,   387,   386,
	 387,   388,   389,   585,   586,   387,   386,   387,   388,   389,
	 465,   587,   588,   387,   353,   589,   387,   594,   390,   494,
	 591,   592,   387,   494,   357,   574,   520,   390,   532,   533,
	 359,   531,   530,   494,   513,   390,   369,   370,   371,   366,
	 368,   332,   333,   336,   337,   372,   373,   338,   339,   376,
	 375,   374,   340,   342,   341,   377,   357,   357,   489,   359,
	 541,   354,   364,   364,   562,   354,   354,   364,   364,   493,
	 354,   493,   362,   364,   364,   364,   364,   343,   344,   345,
	 346,   347,   348,   349,   350,   351,   352,   363,   492,   361,
	 364,   359,   537,   551,   555,   560,   534,   363,   359,   534,
	 535,   534,   530,   390,   355,   468,   493,   390,   491,   476,
	 353,   387,   577,   578,   355,   363,   355,   361,   355,   361,
	 355,   361,   361,   355,   361,   355,   361,   355,   361,   361,
	 355,   361,   361,   355,   361,   355,   361,   355,   355,   532,
	 521,   361,   364,   359,   476,   476,   476,   478,   478,   479,
	 479,   480,   480,   480,   480,   481,   481,   482,   483,   484,
	 485,   486,   487,   490,   357,   548,   561,   537,   563,   493,
	 364,   493,   362,   491,   491,   534,   359,   361,   359,   357,
	 357,   361,   357,   361,   581,   580,   494,   582,   586,   585,
	 588,   587,   353,   589,   591,   592,   364,   533,   493,   542,
	 493,   508,   553,   398,   536,   549,   564,   355,   355,   359,
	 534,   353,   387,   355,   355,   355,   355,   355,   355,   362,
	 359,   390,   355,   354,   553,   565,   566,   544,   545,   546,
	 552,   556,   491,   363,   538,   543,   547,   493,   364,   355,
	 402,   540,   538,   358,   534,   355,   493,   543,   544,   548,
	 557,   364,   359
};

static inline constexpr I16 R1[]{
	   0,   464,   465,   466,   466,   466,   466,   466,   466,   466,
	 466,   466,   466,   466,   466,   466,   466,   466,   467,   467,
	 467,   467,   467,   467,   468,   469,   470,   471,   471,   472,
	 472,   473,   473,   474,   475,   475,   475,   476,   476,   476,
	 476,   477,   477,   477,   477,   478,   478,   478,   478,   479,
	 479,   479,   480,   480,   480,   481,   481,   481,   481,   481,
	 482,   482,   482,   483,   483,   484,   484,   485,   485,   486,
	 486,   487,   487,   488,   488,   489,   490,   489,   491,   491,
	 492,   492,   492,   492,   492,   492,   492,   492,   492,   492,
	 492,   493,   493,   494,   495,   495,   495,   495,   495,   495,
	 495,   495,   495,   495,   495,   497,   496,   498,   498,   499,
	 499,   499,   499,   500,   500,   501,   501,   502,   503,   503,
	 504,   504,   504,   504,   505,   506,   506,   506,   506,   506,
	 507,   507,   507,   507,   507,   508,   508,   509,   510,   510,
	 510,   510,   510,   510,   510,   510,   510,   510,   511,   512,
	 512,   513,   513,   513,   514,   515,   515,   516,   516,   516,
	 516,   516,   516,   516,   516,   516,   516,   516,   517,   517,
	 517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
	 517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
	 517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
	 517,   517,   517,   517,   517,   517,   518,   519,   519,   520,
	 520,   521,   521,   521,   521,   522,   522,   523,   524,   524,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   525,
	 525,   525,   525,   525,   525,   525,   525,   525,   525,   526,
	 526,   526,   528,   527,   529,   527,   530,   530,   531,   531,
	 532,   532,   533,   533,   534,   534,   534,   534,   535,   535,
	 536,   537,   537,   538,   538,   538,   538,   538,   538,   538,
	 538,   539,   540,   541,   542,   540,   543,   543,   545,   544,
	 546,   544,   547,   547,   548,   548,   549,   549,   550,   550,
	 551,   552,   552,   553,   553,   554,   554,   556,   555,   557,
	 557,   558,   558,   559,   559,   561,   560,   562,   560,   563,
	 560,   564,   564,   565,   565,   566,   566,   567,   567,   567,
	 567,   567,   567,   567,   567,   568,   568,   569,   569,   569,
	 571,   570,   572,   573,   573,   574,   574,   575,   575,   576,
	 576,   577,   577,   578,   578,   579,   579,   579,   579,   579,
	 579,   580,   580,   581,   581,   581,   581,   581,   582,   582,
	 583,   583,   584,   584,   584,   584,   584,   584,   584,   584,
	 585,   585,   586,   586,   586,   586,   587,   587,   588,   588,
	 588,   588,   588,   589,   589,   590,   590,   590,   590,   591,
	 591,   592,   593,   593,   594,   594,   595,   595
};

static inline constexpr I8 R2[]{
	   0,     2,     1,     1,     3,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
	   1,     3,     2,     2,     1,     1,     1,     2,     2,     2,
	   1,     2,     3,     2,     1,     1,     1,     1,     2,     2,
	   2,     1,     1,     1,     1,     1,     3,     3,     3,     1,
	   3,     3,     1,     3,     3,     1,     3,     3,     3,     3,
	   1,     3,     3,     1,     3,     1,     3,     1,     3,     1,
	   3,     1,     3,     1,     3,     1,     0,     6,     1,     3,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     3,     1,     2,     3,     2,     2,     4,     2,
	   3,     4,     2,     3,     4,     0,     6,     2,     3,     2,
	   3,     3,     4,     1,     1,     2,     3,     3,     2,     3,
	   2,     1,     2,     1,     1,     1,     3,     4,     6,     5,
	   1,     2,     3,     5,     4,     1,     2,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     4,     1,
	   3,     1,     3,     1,     1,     1,     2,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     4,     1,     1,     1,     3,     2,
	   3,     2,     3,     3,     4,     1,     0,     3,     1,     3,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     1,     0,     6,     0,     5,     1,     2,     3,     4,
	   1,     3,     1,     2,     1,     3,     4,     2,     1,     3,
	   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
	   1,     2,     2,     0,     0,     5,     1,     1,     0,     2,
	   0,     2,     2,     3,     1,     2,     1,     2,     1,     2,
	   5,     3,     1,     1,     4,     1,     2,     0,     8,     0,
	   1,     3,     2,     1,     2,     0,     6,     0,     8,     0,
	   7,     1,     1,     1,     0,     2,     3,     2,     2,     2,
	   3,     2,     2,     2,     2,     1,     2,     1,     1,     1,
	   0,     3,     5,     1,     3,     1,     4,     1,     3,     5,
	   5,     1,     3,     1,     3,     4,     6,     6,     8,     6,
	   8,     1,     3,     1,     1,     1,     1,     1,     1,     3,
	   4,     6,     4,     6,     6,     8,     6,     8,     6,     8,
	   1,     3,     1,     1,     1,     1,     1,     3,     1,     1,
	   1,     1,     1,     1,     3,     6,     8,     4,     6,     1,
	   3,     1,     4,     6,     1,     3,     3,     3
};

struct Symbol
{
	String name;
	U64 uniqueId;      // For cross-scope comparing during code generation

	//
	// N.B.: Non-const functions that will be generally used should assert on this,
	// to avoid overwriting shared symbol-table information.
	//
	bool writable;
};

struct SymbolTableLevel
{
	Hashmap<String, Symbol> mappings;
	PrecisionQualifier defaultPrecision;
	Vector<Pair<String, String>> retargetedSymbols;
	I32 anonId;
	bool thisLevel;
};

struct SymbolTable
{
	SymbolTable() {};
	~SymbolTable() {};

	Vector<SymbolTableLevel> table;
	I64 uniqueId;     // for unique identification in code generation
	bool noBuiltInRedeclarations;
	bool separateNameSpaces;
	U32 adoptedLevels;
};

struct Location
{
	Location() { Init(); }
	Location(const Location& other) : name{ other.name }, string{ other.string }, line{ other.line }, column{ other.column } {}
	Location(Location&& other) noexcept : name{ Move(other.name) }, string{ other.string }, line{ other.line }, column{ other.column } {}
	Location& operator=(const Location& other)
	{
		name = other.name;
		string = other.string;
		line = other.line;
		column = other.column;
	}
	Location& operator=(Location&& other) noexcept
	{
		name = Move(other.name);
		string = other.string;
		line = other.line;
		column = other.column;
	}

	void Init()
	{
		name.Clear();
		string = 0;
		line = 0;
		column = 0;
	}

	String GetStringNameOrNum(bool quoteStringName = true) const
	{
		if (name != nullptr) { return quoteStringName ? name.Surrounded('\'', '\'') : name; }

		return String((I64)string);
	}

	operator String()
	{
		String string;
		string.Format("Line {}, Column {}", line, column);
		return Move(string);
	}

	String name;
	I32 string;
	I32 line;
	I32 column;
};

struct Call
{
	Call(const String& caller, const String& callee) : caller{ caller }, callee{ callee } {}

	String caller;
	String callee;
	bool visited;
	bool currentPath;
	bool errorGiven;
	I32 calleeBodyPosition;
};

struct Range
{
	Range(I32 start, I32 last) : start{ start }, last{ last } {}
	bool Overlap(const Range& rhs) const { return last >= rhs.start && start <= rhs.last; }

	I32 start;
	I32 last;
};

struct IoRange
{
	IoRange(Range location, Range component, BasicType basicType, I32 index) : location{ location }, component{ component }, basicType{ basicType }, index{ index } {}
	bool Overlap(const IoRange& rhs) const { return location.Overlap(rhs.location) && component.Overlap(rhs.component) && index == rhs.index; }

	Range location;
	Range component;
	BasicType basicType;
	I32 index;
};

struct OffsetRange
{
	OffsetRange(Range binding, Range offset) : binding{ binding }, offset{ offset } {}
	bool Overlap(const OffsetRange& rhs) const { return binding.Overlap(rhs.binding) && offset.Overlap(rhs.offset); }

	Range binding;
	Range offset;
};

struct IntermediateNode;

struct Qualifier
{
	String semanticName;
	StorageQualifier storage : 6;
	BuiltInVariableType builtIn : 9;
	BuiltInVariableType declaredBuiltIn : 9;
	PrecisionQualifier precision : 3;
	bool invariant : 1;
	bool centroid : 1;
	bool smooth : 1;
	bool flat : 1;
	bool specConstant : 1;
	bool nonUniform : 1;
	bool explicitOffset : 1;
	bool defaultBlock : 1;
	bool noContraction : 1;
	bool nopersp : 1;
	bool explicitInterp : 1;
	bool pervertexNV : 1;
	bool pervertexEXT : 1;
	bool perPrimitiveNV : 1;
	bool perViewNV : 1;
	bool perTaskNV : 1;
	bool patch : 1;
	bool sample : 1;
	bool restrict     : 1;
	bool readonly : 1;
	bool writeonly : 1;
	bool coherent : 1;
	bool volatil : 1;
	bool devicecoherent : 1;
	bool queuefamilycoherent : 1;
	bool workgroupcoherent : 1;
	bool subgroupcoherent : 1;
	bool shadercallcoherent : 1;
	bool nonprivate : 1;
	bool nullInit : 1;
	bool spirvByReference : 1;
	bool spirvLiteral : 1;

	MatrixLayoutType  matrixLayout : 3;
	LayoutPackingType layoutPacking : 4;
	I32 layoutOffset;
	I32 layoutAlign;

	U32 layoutLocation : 12;
	static const U32 layoutLocationEnd = 0xFFF;

	U32 layoutComponent : 3;
	static const U32 layoutComponentEnd = 4;

	U32 layoutSet : 7;
	static const U32 layoutSetEnd = 0x3F;

	U32 layoutBinding : 16;
	static const U32 layoutBindingEnd = 0xFFFF;

	U32 layoutIndex : 8;
	static const U32 layoutIndexEnd = 0xFF;

	U32 layoutStream : 8;
	static const U32 layoutStreamEnd = 0xFF;

	U32 layoutXfbBuffer : 4;
	static const U32 layoutXfbBufferEnd = 0xF;

	U32 layoutXfbStride : 14;
	static const U32 layoutXfbStrideEnd = 0x3FFF;

	U32 layoutXfbOffset : 13;
	static const U32 layoutXfbOffsetEnd = 0x1FFF;

	U32 layoutAttachment : 8;
	static const U32 layoutAttachmentEnd = 0XFF;

	U32 layoutSpecConstantId : 11;
	static const U32 layoutSpecConstantIdEnd = 0x7FF;

	U32 layoutBufferReferenceAlign : 6;
	static const U32 layoutBufferReferenceAlignEnd = 0x3F;

	LayoutFormatType layoutFormat : 8;

	bool layoutPushConstant;
	bool layoutBufferReference;
	bool layoutPassthrough;
	bool layoutViewportRelative;
	I32 layoutSecondaryViewportRelativeOffset;
	bool layoutShaderRecord;
	bool layoutHitObjectShaderRecordNV;

	I32 spirvStorageClass;
	Hashmap<I32, Vector<const IntermediateNode*> > decorates;		//Typed/ConstantUnion
	Hashmap<I32, Vector<const IntermediateNode*>> decorateIds;		//Typed
	Hashmap<I32, Vector<const IntermediateNode*> > decorateStrings;	//Typed/ConstantUnion

	bool layoutBindlessSampler;
	bool layoutBindlessImage;
};

struct XfbBuffer
{
	XfbBuffer() : stride{ Qualifier::layoutXfbStrideEnd }, implicitStride{ 0 }, contains64BitType{ false }, contains32BitType{ false }, contains16BitType{ false } {}

	Vector<Range> ranges;
	U32 stride;
	U32 implicitStride;
	bool contains64BitType;
	bool contains32BitType;
	bool contains16BitType;
};

struct ArraySize
{
	U32 size;
	IntermediateNode* node;
};

struct ArraySizes
{
	Vector<ArraySize> sizes;

	I32 implicitArraySize;
	bool implicitlySized;
	bool variablyIndexed;
};

enum NodeType
{
	NODE_TYPE_NONE,
	NODE_TYPE_TYPED,
};

struct NodeTyped;

struct TypeLocation
{
	NodeTyped* type;
	Location location;
};

struct ImageSampler
{
	BasicType type : 8;
	SamplerDimension dimension : 8;
	bool    arrayed : 1;
	bool     shadow : 1;
	bool         ms : 1;
	bool      image : 1;
	bool   combined : 1;
	bool    sampler : 1;

	U32 vectorSize : 3;  // vector return type size.
	// Some languages support structures as sample results.  Storing the whole structure in the
	// TSampler is too large, so there is an index to a separate table.
	static const U32 structReturnIndexBits = 4;                        // number of index bits to use.
	static const U32 structReturnSlots = (1 << structReturnIndexBits) - 1; // number of valid values
	static const U32 noReturnStruct = structReturnSlots;               // value if no return struct type.
	// Index into a language specific table of texture return structures.
	U32 structReturnIndex : structReturnIndexBits;

	bool   external : 1;  // GL_OES_EGL_image_external
	bool        yuv : 1;  // GL_EXT_YUV_target
};

struct SpirvType
{
	String set;
	int     id;
	const IntermediateNode* constant; //Typed/ConstantUnion
};

enum NodeTypedType
{
	NODE_TYPED_TYPE_NONE,
	NODE_TYPED_TYPE_CONSTANT_UNION,
};

struct ConstUnion
{
	union
	{
		signed char			i8Const;     // used for i8vec, scalar int8s
		unsigned char		u8Const;     // used for u8vec, scalar uint8s
		signed short		i16Const;    // used for i16vec, scalar int16s
		unsigned short		u16Const;    // used for u16vec, scalar uint16s
		int					iConst;      // used for ivec, scalar ints
		unsigned int		uConst;      // used for uvec, scalar uints
		long long			i64Const;    // used for i64vec, scalar int64s
		unsigned long long	u64Const;    // used for u64vec, scalar uint64s
		bool				bConst;      // used for bvec, scalar bools
		double				dConst;      // used for vec, dvec, mat, dmat, scalar floats and doubles
		String				string;      // string constant
	};

	BasicType type;
};

struct ConstantUnion
{
	const Vector<ConstUnion> unionArray;
	bool literal;
};

struct NodeTyped
{
	BasicType type : 8;
	I32 vectorSize : 4;
	I32 matrixCols : 4;
	I32 matrixRows : 4;
	bool coopmat : 1;

	Qualifier qualifier;

	ArraySizes* arraySizes;    // nullptr unless an array; can be shared across types
	// A type can't be both a structure (EbtStruct/EbtBlock) and a reference (EbtReference), so
	// conserve space by making these a union
	union {
		Vector<TypeLocation>* structure;       // invalid unless this is a struct; can be shared across types
		NodeType* referentType;        // invalid unless this is an EbtReference
	};
	String fieldName;         // for structure field names
	String typeName;          // for structure type name
	ImageSampler sampler;
	ArraySizes* typeParameters;// nullptr unless a parameterized type; can be shared across types

	SpirvType* spirvType;  // SPIR-V type defined by spirv_type directive

	NodeTypedType typedType{ NODE_TYPED_TYPE_NONE };

	union
	{
		ConstantUnion constantUnion;
	};
};

struct IntermediateNode
{
	Location location;
	NodeType type;

	union
	{
		NodeTyped typedNode;

	};
};

struct StateType
{
	StateType() {};
	~StateType() {};
	StateType& operator=(const StateType&) { return *this; };

	union
	{
		struct
		{
			Location location;

			union
			{
				String string;
				I32 i;
				U32 u;
				I64 i64;
				U64 u64;
				bool b;
				F64 d;
			};

			Symbol symbol;
		} lex;

		struct
		{
			Location location;
			OperatorType opType;
			union
			{
				IntermediateNode* intermNode;
				glslang::TIntermNodePair nodePair;
				glslang::TIntermTyped* intermTypedNode;
				glslang::TAttributes* attributes;
				glslang::TSpirvRequirement* spirvReq;
				glslang::TSpirvInstruction* spirvInst;
				glslang::TSpirvTypeParameters* spirvTypeParams;
			};
			union
			{
				glslang::TPublicType type;
				glslang::TFunction* function;
				glslang::TParameter param;
				glslang::TTypeLoc typeLine;
				glslang::TTypeList* typeList;
				glslang::TArraySizes* arraySizes;
				glslang::TIdentifierList* identifierList;
			};

			ArraySizes* typeParameters;
		} interm;
	};
};

struct Intermediate
{
	String entryPoint;
	Vector<Call> callGraph;
	Vector<String> requestedExtensions; //TODO: Set data structure
	I32 entryPointCount;
	I32 errorCount;
	I32 pushConstantCount;
	bool recursive;
	bool invertY;
	bool dxPositionW;
	bool enhancedMsgs;
	bool debugInfo;
	bool useStorageBuffer;
	bool invariantAll;
	bool nanMinMaxClamp;
	bool depthReplacing;
	bool stencilReplacing;
	I32 localSize[3];
	bool localSizeNotDefault[3];
	I32 localSizeSpecId[3];
	U64 uniqueId;

	String globalUniformBlockName;
	String atomicCounterBlockName;
	I32 globalUniformBlockSet;
	I32 globalUniformBlockBinding;
	I32 atomicCounterBlockSet;

	String implicitThisName;
	String implicitCounterName;

	bool useVulkanMemoryModel;
	I32 invocations;
	I32 vertices;
	LayoutGeometryType inputPrimitive;
	LayoutGeometryType outputPrimitive;
	bool pixelCenterInteger;
	bool originUpperLeft;
	bool texCoordBuiltinRedeclared;
	VertexSpacingType vertexSpacing;
	VertexOrderType vertexOrder;
	InterlockOrderingType interlockOrdering;
	bool pointMode;
	bool earlyFragmentTests;
	bool postDepthCoverage;
	bool earlyAndLateFragmentTestsAMD;
	bool nonCoherentColorAttachmentReadEXT;
	bool nonCoherentDepthAttachmentReadEXT;
	bool nonCoherentStencilAttachmentReadEXT;
	LayoutDepthType depthLayout;
	LayoutStencilType stencilLayout;
	I32 blendEquations;
	bool xfbMode;
	Vector<XfbBuffer> xfbBuffers;
	bool multiStream;
	bool layoutOverrideCoverage;
	bool geoPassthroughEXT;
	I32 shaderRecordBlockCount;
	ComputeDerivativeMode computeDerivativeMode;
	I32 primitives;
	I32 taskNVBlockCount;
	bool layoutPrimitiveCulling;
	I32 taskEXTPayloadCount;

	U32 shiftBinding[6];
	Hashmap<I32, I32> shiftBindingForSet[6];

	Vector<String> resourceSetBinding;
	bool autoMapBindings;
	bool autoMapLocations;
	bool flattenUniformArrays;
	bool useUnknownFormat;
	bool hlslOffsets;
	bool hlslIoMapping;
	bool useVariablePointers;

	Vector<String> semanticNameSet; //TODO: Set data structure

	SamplerTransformMode samplerTransformMode;

	bool needToLegalize;
	bool binaryDoubleOutput;
	bool subgroupUniformControlFlow;
	bool usePhysicalStorageBuffer;

	Vector<String> extensions;
	Vector<I32> capabilities;
	Hashmap<I32, Vector<const IntermediateNode*>> modes;	//Typed/ConstantUnion
	Hashmap<I32, Vector<const IntermediateNode*>> modeIds;	//Typed

	Hashmap<String, AstRefType> bindlessTextureModeCaller;
	Hashmap<String, AstRefType> bindlessImageModeCaller;
	Hashmap<String, I32> uniformLocationOverrides;
	I32 uniformLocationBase;
	U32 numericFeatures;

	Hashmap<String, BlockStorageClass> blockBackingOverrides;

	Hashmap<I32, I32> usedConstantId; //TODO: Hashset data structure
	Vector<OffsetRange> usedAtomics;
	Vector<IoRange> usedIo[4];
	Vector<Range> usedIoRT[4];

	Vector<String> ioAccessed; //TODO: Set data structure

	String sourceFile;
	String sourceText;

	Hashmap<String, String> includeText;
};

struct Pragma
{
	Pragma() {}
	~Pragma() {}
	Pragma(bool o, bool d) : optimize(o), debug(d) {}

	bool optimize;
	bool debug;
	Hashmap<String, String> pragmaTable;
};

struct ParseToken
{
	ParseToken() {}
	ParseToken(ParseToken&& other) noexcept : location{ Move(other.location) }, space{ other.space }, fullyExpanded{ fullyExpanded }, i64val{ other.i64val }, name{ Move(other.name) } {}
	ParseToken& operator=(ParseToken&& other) noexcept
	{
		location = Move(other.location);
		space = other.space;
		fullyExpanded = fullyExpanded;
		i64val = other.i64val;
		name = Move(other.name);
	}
	ParseToken& operator=(const ParseToken& other) noexcept
	{
		location = other.location;
		space = other.space;
		fullyExpanded = fullyExpanded;
		i64val = other.i64val;
		name = other.name;
	}

	bool operator==(const ParseToken& other) const
	{
		return space == other.space && ival == other.ival && dval == other.dval && i64val == other.i64val && name.Compare(other.name);
	}

	bool operator!=(const ParseToken& other) const
	{
		return space != other.space || ival != other.ival || dval != other.dval || i64val != other.i64val || !name.Compare(other.name);
	}

	void Clear()
	{
		space = false;
		i64val = 0;
		location.Init();
		name[0] = 0;
		fullyExpanded = false;
	}

	Location location{};
	bool space;
	bool fullyExpanded;
	union {
		I32 ival;
		F64 dval;
		I64 i64val;
	};

	String name;
};

struct TokenStream
{
	TokenStream() {}

	TokenStream(TokenStream&& other) noexcept : stream{ Move(other.stream) }, currentPos{ currentPos } {}
	TokenStream& operator=(TokenStream&& other) noexcept
	{
		stream = Move(other.stream);
		currentPos = currentPos;
	}

	struct Token
	{
		Token(I32 atom, const ParseToken& parseToken) : atom{ atom }, space{ parseToken.space }, i64val{ parseToken.i64val }, name{ parseToken.name } {}

		I32 Get(ParseToken& parseToken);
		I32 GetAtom() const { return atom; }
		bool NonSpaced() const { return !space; }
		bool IsAtom(I32 a) const { return atom == a; }

		I32 atom;
		bool space;
		I64 i64val;
		String name;
	};

	bool AtEnd() { return currentPos >= stream.Size(); }
	bool Peek(I32 atom) { return !AtEnd() && stream[currentPos].IsAtom(atom); }
	void Reset() { currentPos = 0; }

	bool PeekUntokenizedPasting()
	{
		U64 savePos = currentPos;

		while (Peek(' ')) { ++currentPos; }

		bool pasting = false;
		if (Peek('#'))
		{
			++currentPos;
			if (Peek('#')) { pasting = true; }
		}

		currentPos = savePos;

		return pasting;
	}

	bool PeekContinuedPasting(I32 atom)
	{
		if (!AtEnd() && atom == FIXED_ATOM_Identifier && stream[currentPos].NonSpaced())
		{
			switch (stream[currentPos].GetAtom())
			{
			case FIXED_ATOM_ConstInt:
			case FIXED_ATOM_ConstUint:
			case FIXED_ATOM_ConstInt64:
			case FIXED_ATOM_ConstUint64:
			case FIXED_ATOM_ConstInt16:
			case FIXED_ATOM_ConstUint16:
			case FIXED_ATOM_ConstFloat:
			case FIXED_ATOM_ConstDouble:
			case FIXED_ATOM_ConstFloat16:
			case FIXED_ATOM_ConstString:
			case FIXED_ATOM_Identifier: return true;
			default: return false;
			}
		}

		return false;
	}

	bool PeekTokenizedPasting(bool lastTokenPastes)
	{
		// 1. preceding ##?

		U64 savePos = currentPos;
		while (Peek(' ')) { ++currentPos; }

		if (Peek(FIXED_ATOM_Paste))
		{
			currentPos = savePos;
			return true;
		}

		// 2. last token and we've been told after this there will be a ##

		if (!lastTokenPastes) { return false; }
		// Getting here means the last token will be pasted, after this

		// Are we at the last non-whitespace token?
		savePos = currentPos;
		bool moreTokens = false;
		do
		{
			if (AtEnd()) { break; }
			if (!Peek(' '))
			{
				moreTokens = true;
				break;
			}
			++currentPos;
		} while (true);
		currentPos = savePos;

		return !moreTokens;
	}

	I32 GetToken(ParseContext& parseContext, ParseToken& parseToken)
	{
		if (AtEnd()) { return -1; }

		I32 atom = stream[currentPos++].Get(parseToken);
		parseToken.location = parseContext.inputReader.location;

		if (atom == '#')
		{
			if (Peek('#'))
			{
				currentPos++;
				atom = FIXED_ATOM_Paste;
			}
		}

		return atom;
	}

	void PutToken(I32 atom, ParseToken& parseToken)
	{
		TokenStream::Token streamToken(atom, parseToken);
		stream.Push(streamToken);
	}

	Vector<Token> stream;
	U64 currentPos;
};

struct MacroSymbol
{
	MacroSymbol() {}

	MacroSymbol(MacroSymbol&& other) noexcept : body{ Move(other.body) }, functionLike{ other.functionLike }, busy{ other.busy }, undef{ other.undef } {}
	MacroSymbol& operator=(MacroSymbol&& other) noexcept
	{
		body = Move(other.body);
		functionLike = other.functionLike;
		busy = other.busy;
		undef = other.undef;
	}

	Vector<I32> macroArgs;
	TokenStream body;

	U8 functionLike : 1;  // 0 means object-like, 1 means function-like
	U8 busy : 1;
	U8 undef : 1;
};

struct InputReader
{
	Location location;
	DataReader reader;

	//TODO: Functions
};

struct Input
{
	Input() : done{ false } {}
	Input(Input&& other) noexcept;
	~Input() {}

	bool done;

	InputType type;

	static constexpr I32 marker = -3;

	union
	{
		struct Macro
		{
			Macro(Macro&& other) noexcept : symbol{ Move(other.symbol) }, args{ Move(other.args) }, expandedArgs{ Move(other.expandedArgs) }, prepaste{ other.prepaste }, postpaste{ other.postpaste } {}
			Macro& operator=(Macro&& other) noexcept
			{
				symbol = Move(other.symbol);
				args = Move(other.args);
				expandedArgs = Move(other.expandedArgs);
				prepaste = other.prepaste;
				postpaste = other.postpaste;
			}

			MacroSymbol* symbol;

			Vector<TokenStream*> args;
			Vector<TokenStream*> expandedArgs;

			bool prepaste;         // true if we are just before ##
			bool postpaste;        // true if we are right after ##
		} macro;

		struct Token
		{
			Token(Token&& other) noexcept : tokens{ other.tokens }, lastTokenPastes{ other.lastTokenPastes }, preExpanded{ other.preExpanded } {}
			Token& operator=(Token&& other) noexcept
			{
				tokens = other.tokens;
				lastTokenPastes = other.lastTokenPastes;
				preExpanded = other.preExpanded;
			}

			TokenStream* tokens;
			bool lastTokenPastes; // true if the last token in the input is to be pasted, rather than consumed as a token
			bool preExpanded;
		} token;

		struct Ungot
		{
			Ungot(Ungot&& other) noexcept : token{ other.token }, lval{ other.lval } {}
			Ungot& operator=(Ungot&& other) noexcept
			{
				token = other.token;
				lval = other.lval;
			}

			I32 token;
			ParseToken* lval;
		} ungotToken;

		struct StringToken
		{

		} string;
	};

	void Destroy()
	{
		switch (type)
		{
		case INPUT_TYPE_MACRO: { macro.args.Destroy(); macro.expandedArgs.Destroy(); } break;
		case INPUT_TYPE_MARKER:
		case INPUT_TYPE_ZERO:
		case INPUT_TYPE_TOKEN:
		case INPUT_TYPE_UNGOT_TOKEN:
		case INPUT_TYPE_STRING:
		default: break;
		}
	}

	I32 Getch(InputReader& reader)
	{
		switch (type)
		{
		case INPUT_TYPE_STRING: {
			I32 ch = reader.get();

			if (ch == '\\')
			{
				// Move past escaped newlines, as many as sequentially exist
				do
				{
					if (reader.peek() == '\r' || reader.peek() == '\n')
					{
						bool allowed = pp->parseContext.lineContinuationCheck(reader.getSourceLoc(), pp->inComment);
						if (!allowed && pp->inComment) { return '\\'; }

						// escape one newline now
						ch = reader.get();
						I32 nextch = reader.get();
						if (ch == '\r' && nextch == '\n') { ch = reader.get(); }
						else { ch = nextch; }
					}
					else
						return '\\';
				} while (ch == '\\');
			}

			// handle any non-escaped newline
			if (ch == '\r' || ch == '\n')
			{
				if (ch == '\r' && reader.peek() == '\n') { reader.get(); }
				return '\n';
			}

			return ch;
		} break;
		case INPUT_TYPE_MACRO:
		case INPUT_TYPE_MARKER:
		case INPUT_TYPE_ZERO:
		case INPUT_TYPE_TOKEN:
		case INPUT_TYPE_UNGOT_TOKEN:
		default: return -1;
		}
	}

	void Ungetch(InputReader& reader)
	{
		switch (type)
		{ 
		case INPUT_TYPE_STRING: {
			reader.unget();

			do
			{
				I32 ch = reader.peek();
				if (ch == '\r' || ch == '\n')
				{
					if (ch == '\n')
					{
						// correct for two-character newline
						reader.unget();
						if (reader.peek() != '\r')
							reader.get();
					}
					// now in front of a complete newline, move past an escape character
					reader.unget();
					if (reader.peek() == '\\')
						reader.unget();
					else
					{
						reader.get();
						break;
					}
				}
				else { break; }
			} while (true);
		} break;
		case INPUT_TYPE_MACRO:
		case INPUT_TYPE_MARKER:
		case INPUT_TYPE_ZERO:
		case INPUT_TYPE_TOKEN:
		case INPUT_TYPE_UNGOT_TOKEN:
		default: return;
		}
	}

	bool EndOfReplacementList()
	{
		switch (type)
		{
		case INPUT_TYPE_MACRO: { return macro.symbol->body.AtEnd(); }
		case INPUT_TYPE_MARKER: 
		case INPUT_TYPE_ZERO: 
		case INPUT_TYPE_TOKEN: 
		case INPUT_TYPE_UNGOT_TOKEN: 
		case INPUT_TYPE_STRING: 
		default: return false;
		}
	}

	bool PeekContinuedPasting(I32 a)
	{
		switch (type)
		{
		case INPUT_TYPE_MACRO: { return macro.symbol->body.PeekContinuedPasting(a); }
		case INPUT_TYPE_TOKEN: { return token.tokens->PeekContinuedPasting(a); }
		case INPUT_TYPE_MARKER:
		case INPUT_TYPE_ZERO:
		case INPUT_TYPE_UNGOT_TOKEN:
		case INPUT_TYPE_STRING:
		default: return false;
		}
	}

	bool PeekPasting()
	{
		switch (type)
		{
		case INPUT_TYPE_MACRO: { return macro.prepaste; }
		case INPUT_TYPE_TOKEN: { return token.tokens->PeekTokenizedPasting(token.lastTokenPastes); }
		case INPUT_TYPE_MARKER:
		case INPUT_TYPE_ZERO:
		case INPUT_TYPE_UNGOT_TOKEN:
		case INPUT_TYPE_STRING:
		default: return false;
		}
	}

	bool IsMacroInput()
	{
		return type == INPUT_TYPE_MACRO;
	}
};

struct ParseContext
{
	ParseContext() : parsingBuiltins{ false } {};
	~ParseContext() {};

	Intermediate intermediate;

	Hashmap<String, ExtensionBehavior> extensionBehavior;	// for each extension string, what its current behavior is
	Hashmap<String, U32> extensionMinSpv;					// for each extension string, store minimum spirv required
	Vector<String> spvUnsupportedExt;						// for extensions reserved for spv usage.
	InputReader inputReader;

	String scopeMangler;

	// Basic parsing state, easily accessible to the grammar

	SymbolTable symbolTable;        // symbol table that goes with the current language, version, and profile
	I32 statementNestingLevel;        // 0 if outside all flow control or compound statements
	I32 loopNestingLevel;             // 0 if outside all loops
	I32 structNestingLevel;           // 0 if outside structures
	I32 blockNestingLevel;            // 0 if outside blocks
	I32 controlFlowNestingLevel;      // 0 if outside all flow control
	const NodeTyped* currentFunctionType; // the return type of the function that's currently being parsed
	bool functionReturnsValue;        // true if a non-void function has a return
	// if inside a function, true if the function is the entry point and this is after a return statement
	bool postEntryPointReturn;
	// case, node, case, case, node, ...; ensure only one node between cases;   stack of them for nesting
	Vector<Vector<IntermediateNode*>> switchSequenceStack;
	// the statementNestingLevel the current switch statement is at, which must match the level of its case statements
	Vector<I32> switchLevel;
	Pragma contextPragma;
	I32 beginInvocationInterlockCount;
	I32 endInvocationInterlockCount;

	const bool parsingBuiltins;			// true if parsing built-in symbols/functions
	Vector<Symbol*> linkageSymbols;		// will be transferred to 'linkage', after all editing is done, order preserving

	struct ScanContext
	{
		ScanContext() {}

		bool afterType;           // true if we've recognized a type, so can only be looking for an identifier
		bool afterStruct;         // true if we've recognized the STRUCT keyword, so can only be looking for an identifier
		bool field;               // true if we're on a field, right after a '.'
		bool afterBuffer;         // true if we've recognized the BUFFER keyword
		Location location{};

		StateType parserToken;

		ParseToken parseToken;

		String tokenText;
		I32 keyword;
	} scanContext;

	struct Context
	{
		struct
		{
			const String& GetString(I32 atom) const { return stringMap[atom]; }
			I32 GetAtom(const String& s) const
			{
				I32* i = atomMap.Get(s);
				return i ? *i : 0;
			}
			I32 GetAddAtom(const String& s)
			{
				I32 atom = GetAtom(s);
				if (atom == 0)
				{
					atom = nextAtom++;
					AddAtomFixed(s, atom);
				}
				return atom;
			}
			void AddAtomFixed(const String& s, I32 atom)
			{
				atomMap.Insert(s, atom);

				if (stringMap.Size() < atom + 1) { stringMap.Resize(atom + 1, &badToken); }
				stringMap[atom] = &s;
			}

			Hashmap<String, I32> atomMap;
			Vector<const String*> stringMap;
			I32 nextAtom;

			String badToken;
		} atomStrings;

		String string;

		// Scanner data:
		I32 previousToken;

		static const int maxIfNesting = 65;

		I32 ifdepth;                  // current #if-#else-#endif nesting in the cpp.c file (pre-processor)
		bool elseSeen[maxIfNesting];  // Keep a track of whether an else has been seen at a particular depth
		I32 elsetracker;

		Stack<Input> inputStack;
		bool errorOnVersion;
		bool versionSeen;

		bool inComment;
		String rootFileName;
		String currentSourceFile;

		String strtodStream;
		bool disableEscapeSequences;

		Hashmap<I32, MacroSymbol> macroDefs;

		bool EndOfReplacementList() { return inputStack.Empty() || inputStack.Peek().EndOfReplacementList(); }
		bool PeekContinuedPasting(int a) { return inputStack.Size() && inputStack.Peek().PeekContinuedPasting(a); }
		bool PeekPasting() { return inputStack.Size() && inputStack.Peek().PeekPasting(); }
		bool IsMacroInput() { return inputStack.Size() && inputStack.Peek().IsMacroInput(); }

		void PushTokenStreamInput(TokenStream& ts, bool prepasting = false, bool expanded = false)
		{
			Input input;
			input.type = INPUT_TYPE_TOKEN;
			input.token.tokens = &ts;
			input.token.lastTokenPastes = prepasting;
			input.token.preExpanded = expanded;

			inputStack.Push(Move(input));
			ts.Reset();
		}

		MacroSymbol* LookupMacroDef(I32 atom) { return macroDefs.Get(atom); }
		void AddMacroDef(I32 atom, MacroSymbol& macroDef) { macroDefs.Insert(atom, Move(macroDef)); }

	} context;

	String sourceEntryPointName;

	struct Variable
	{
		NodeTyped type;
		bool userType;

		// we are assuming that Pool Allocator will free the memory allocated to unionArray
		// when this object is destroyed

		Vector<ConstUnion> constArray;
		IntermediateNode* constSubtree; //Typed
		Vector<Vector<String>> memberExtensions; // per-member extension list, allocated only when needed
		I32 anonId;
	};

	Variable* globalUniformBlock;     // the actual block, inserted into the symbol table
	U32 globalUniformBinding; // the block's binding number
	U32 globalUniformSet;     // the block's set number
	I32 firstNewMember;

	Hashmap<I32, Variable*> atomicCounterBuffers;
	U32 atomicCounterBlockSet;
	Hashmap<I32, I32> atomicCounterBlockFirstNewMember;

	//Parse Context
	bool inMain;                 // if inside a function, true if the function is main
	String blockName;
	Qualifier currentBlockQualifier;
	PrecisionQualifier defaultPrecision[BASIC_TYPE_COUNT];

	static const I32 maxSamplerIndex = SAMPLER_DIMENSION_COUNT * (BASIC_TYPE_COUNT * (2 * 2 * 2 * 2 * 2));
	PrecisionQualifier defaultSamplerPrecision[maxSamplerIndex];

	struct
	{
		bool obey;                  // respect precision qualifiers
		bool warn;                  // need to give a warning about the defaults
		bool explicitIntDefault;    // user set the default for int/uint
		bool explicitFloatDefault;  // user set the default for float
	} precisionManager;

	Qualifier globalBufferDefaults;
	Qualifier globalUniformDefaults;
	Qualifier globalInputDefaults;
	Qualifier globalOutputDefaults;
	Qualifier globalSharedDefaults;
	String currentCaller;        // name of last function body entered (not valid when at global scope)

	I32* atomicUintOffsets;       // to become an array of the right size to hold an offset per binding point
	bool anyIndexLimits;
	Vector<I64> inductiveLoopIds; //TODO: Set
	Vector<IntermediateNode*> needsIndexLimitationChecking; //Typed
	Hashmap<Vector<TypeLocation>*, Hashmap<U64, Vector<TypeLocation>*>> matrixFixRecord;
	Hashmap<Vector<TypeLocation>*, Hashmap<U64, Vector<TypeLocation>*>> packingFixRecord;

	Vector<Symbol*> ioArraySymbolResizeList;

	I32 NextToken(StateType& state);
	I32 Tokenize(ParseToken& parseToken);
	I32 TokenizeIdentifier();
	I32 Scan(Input& input, ParseToken& parseToken);
	I32 FloatConst(I32 len, I32 ch, ParseToken& parseToken);
	I32 TokenPaste(I32 token, ParseToken& parseToken);

	I32 ReadCPPline(ParseToken& parseToken);
	I32 CPPdefine(ParseToken& parseToken);
	I32 CPPundef(ParseToken& parseToken);
	I32 CPPelse(I32 matchelse, ParseToken& parseToken);
	I32 CPPif(ParseToken& parseToken);
	I32 CPPifdef(I32 defined, ParseToken& parseToken);
	I32 CPPinclude(ParseToken& parseToken);
	I32 CPPerror(ParseToken& parseToken);
	I32 CPPpragma(ParseToken& parseToken);
	I32 ExtraTokenCheck(I32 contextAtom, ParseToken& parseToken, I32 token);
	void ReservedKeywordCheck(const Location& location, const String& identifier, const String& op);
	I32 Eval(I32 token, I32 precedence, bool shortCircuit, I32& res, bool& err, ParseToken& parseToken);
	I32 EvalToToken(I32 token, bool shortCircuit, I32& res, bool& err, ParseToken& parseToken);
	MacroExpandResult MacroExpand(ParseToken& parseToken, bool expandUndef, bool newLineOkay);
	I32 ScanHeaderName(ParseToken& parseToken, C8 delimit);
	TokenStream* PrescanMacroArg(TokenStream& arg, ParseToken& parseToken, bool newLineOkay);

	I32 ScanToken(ParseToken& parseToken)
	{
		I32 token = -1;

		while (context.inputStack.Size())
		{
			token = Scan(context.inputStack.Peek(), parseToken);
			if (token != -1) { break; }
			context.inputStack.Pop();
		}

		return token;
	}

	void UngetToken(I32 token, ParseToken& parseToken)
	{
		Input input;
		input.type = INPUT_TYPE_UNGOT_TOKEN;
		input.done = false;
		input.ungotToken.token = token;
		input.ungotToken.lval = &parseToken;

		PushInput(input);
	}

	void PushInput(Input& in)
	{
		context.inputStack.Push(in);
	}

	void PopInput()
	{
		context.inputStack.Peek().Destroy();
		context.inputStack.Pop();
	}

	I32 GetChar() { return context.inputStack.Peek().Getch(inputReader); }
	void UngetChar() { context.inputStack.Peek().Ungetch(inputReader); }
};

#endif