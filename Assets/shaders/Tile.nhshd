#CONFIG
language=GLSL
cull=FRONT
front=COUNTER
fill=SOLID
depth=LESS
blend=ADD
instanceOffset=2
order=0
#CONFIG_END

#VERTEX
#version 450

struct Globals
{
	mat4 viewProjection;
	vec3 globalColor;
};

layout(push_constant) uniform block
{
	Globals globals;
};

layout (location = 0) in vec2 position;
layout (location = 1) in vec2 texcoord;

layout (location = 2) in vec3 instPosition;
layout (location = 3) in vec2 instTexcoord;
layout (location = 4) in vec3 instColor;
layout (location = 5) in uint texIndex;

layout (location = 0) out vec2 outTexcoord;
layout (location = 1) out vec3 outColor;
layout (location = 2) flat out uint outTexIndex;

void main()
{
    vec4 worldPosition = vec4(position.xy + instPosition.xy, instPosition.z, 1.0);
    gl_Position = globals.viewProjection * worldPosition;
    outTexcoord = texcoord + instTexcoord;
    outColor = instColor * globals.globalColor;
    outTexIndex = texIndex;
}
#VERTEX_END

#FRAGMENT
#version 450
#extension GL_EXT_nonuniform_qualifier : require

layout (location = 0) in vec2 texcoord;
layout (location = 1) in vec3 color;
layout (location = 2) flat in uint texIndex;

layout (set = 1, binding = 10) uniform sampler2D globalTextures[];

layout(location = 0) out vec4 outColor;

void main()
{
    outColor = texture(globalTextures[texIndex], texcoord) * vec4(color, 1.0);
}
#FRAGMENT_END